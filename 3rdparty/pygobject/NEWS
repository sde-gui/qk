2.28.6 11-Jun-1011
        - closure: avoid double free crash (Ignacio Casal Quinteiro)
        - [gi] backport of "GVariant has a GType" fe386a (John (J5) Palmieri)
        - [gi] fixes to backport commit 6b5a65 - in older glib GVariants are still structs (John (J5) Palmieri)
        - GVariantType is a boxed struct (Tomeu Vizoso)
        - Use _gi.Struct to wrap fundamentals (Tomeu Vizoso)
        - Added __eq__ method for Gdk.Color and Gdk.RGBA (Jason Siefken)
        - Remove useless import (Ignacio Casal Quinteiro)
        - Revert "[gi] Removed hack to avoid using GLib.Variant.new_variant." (Ignacio Casal Quinteiro)
        - closure: Check the out arg is not null. Fixes bug #651812 (Ignacio Casal Quinteiro)
        - Fix GC-related crash during PyGObject deallocation (Daniel Drake)
        - Fix symbol names to be locale independent (Martin Pitt)
        - Updated DOAP file (Sebastian Pölsterl)

2.28.4 18-Apr-2011
        - Version bump to 2.24.4 (Sebastian Pölsterl)
        - [gi] Don't create variant twice (Sebastian Pölsterl)
        - pygi-convert.sh: Make sure the uppercase GObject module is imported instead of the lowercase (Sebastian Pölsterl)
        - [gi] Removed hack to avoid using GLib.Variant.new_variant. (Sebastian Pölsterl)
        - [gi] Added additional test case for GVariant handling (Sebastian Pölsterl)
        - [gi] Added support for GVariant arguments (Sebastian Pölsterl)
        - Fix ABI break in old static bindings. (Steve Frécinaux)
        - fetch size from an enum type (Mike Gorse)
        - dsextras.py: ensure eol characters are preserved when writing template files (so \n does not become \r\n) (Dieter Verfaillie)

2.28.3 23-Mar-2011
	- fix a typo when converting objects to strings gvalues (John (J5) Palmieri)

2.28.2 22-Mar-2011
	- fix static ABI for setting string gvalues from python objects (John (J
	- Fix GSchema tests for separate build tree (Martin Pitt)
	- GIO tests: Fix remaining test case for separate build tree (Martin Pit
	- GIO tests: Fix for separate build tree (Martin Pitt)

2.28.1 21-Mar-2011
	- pygi-convert.sh remove gobject tests, GObject works now (John Stowers)
	- pygi-convert.sh add GObject.xxx and webkit (John Stowers)
	- [gi] marshal raw closures (John (J5) Palmieri)
	- Revert "Deduce PYTHON_LIBS in addition to PYTHON_INCLUDES" (Martin Pit
	- setup.py: fix user_access_control option (Dieter Verfaillie)
	- [gi-overrides] fix marshalling pygobjects in treemodels (John (J5) Pal
	- [gi] Respect the MessageType for Gtk.MessageDialog (Martin Pitt)
	- [gi] Do not require signature for D-BUS methods without arguments (Mar
	- [gi-demos] add pickers demo (John (J5) Palmieri)
	- [gi-demos] add menu demo (John (J5) Palmieri)
	- [gi-overrides] TreeViewColumn.set_cell_data_func func_data can be None
	- [gi-demos] dont try and run demos that represent directories (John Sto
	- [gi-overrides] fix exception block so it works in Python 2.5 (John (J5

2.28.0 08-Mar-2011 (stable)
	- [gi-demos] some python 3 compat fixes (John (J5) Palmieri)
	- [gi-demos] catch the correct error class (John (J5) Palmieri)
	- Try not to sink objects returned by C functions. (Steve FrÃ©cinaux)
	- Do not leak python references when using the gobject.property() helper. (Steve FrÃ©cinaux)
	- [gi] fix try except blocks so they work in Python 2.5 (John (J5) Palmieri)
	- handle uchar as bytes, not strings in python 3 (John (J5) Palmieri)
	- [gi-overrides] handle unichar gvalues when setting treemodels (John (J5) Palmieri)
	- [gi-overrides] special case python 2 keywords that crept in (John (J5) Palmieri)
	- check for the py3 _thread module in configure.ac if thread is not found (John (J5) Palmieri)
	- [gi-demos] add iconview demo (John (J5) Palmieri)
	- [gi] wrap the keyword argument in a dict so we don't break Python 2.5 (John (J5) Palmieri)
	- [gi-demos] add the combobox with string ids section to the demos (John (J5) Palmieri)
	- [gi-overrides] add an override for Gdk.RGBA (John (J5) Palmieri)
	- [gi-demos] fix up search-entry to reflect annotations fixed in Gtk+ master (John (J5) Palmieri)
	- [gi-demos] add search entry demo (John (J5) Palmieri)
	- [gi] wrap map in a list for Python 3 compat (John (J5) Palmieri)
	- [gi-demos] fix up the validation combobox (John (J5) Palmieri)
	- add overridesdir variable in the .pc file for 3rd party overrides (John (J5) Palmieri)
	- [gi] remove unref for closures since they are floating objects that get sunk (John (J5) Palmieri)
	- setup.py: Set bdist_wininst user-access-control property (Dieter Verfaillie)
	- Fix uninitialized variable in gi.require_version() (Martin Pitt)
	- Run tests with LC_MESSAGES="C" (Martin Pitt)
	- [gi-overrides] override Gtk.stock_lookup to not return success (John (J5) Palmieri)
 
2.27.91 28-Feb-2011 (2.28 pre-release)
	- [gi-tests] use Gdk.test_simulate_button instead of emitting event ourselves (John (J5) Palmieri)
	- [gi-tests] tests for EventButton override. (Laszlo Pandy)
	- Skip interfaces when checking for conflicts in the MRO (Tomeu Vizoso)
	- [gi-overrides] Add event methods to all event union members (John (J5) Palmieri)
	- [gi] check to see if object is a member of a union when validating paramaters (John (J5) Palmieri)
	- [gi] Remove DyanmicModule.load() to _load() to prevent overriding GI attrs. (Laszlo Pandy)
	- Test case with John's fix for crash with C arrays and a GError is set. (Laszlo Pandy)
	- [gi-overrides] fix setting rows in treeview to accept None as a value (John (J5) Palmieri)
	- [gi] Add value_name for enum and flags from introspection "c:identifier" (if attr is available). (Laszlo Pandy)
	- Don't force loading of DynamicModule until set in sys.modules (Laszlo Pandy)
	- Fix flags with multiple names for the same value. (Laszlo Pandy)
	- [gi-demos] add liststore demo (John (J5) Palmieri)
	- [gi-demos] run through the demos and remove the FIXMEs that have been fixed (John (J5) Palmieri)
	- Load typelibs at import time, add gi.require_version() (Tomeu Vizoso)
	- use GValue support to marshal GtkTreeModel values correctly (John (J5) Palmieri)
	- [gi] pass raw GValues instead of trying to marshal them (John (J5) Palmieri)
	- [gi-demos] add icon view edit and drag-and-drop demo (John (J5) Palmieri)
	- [gi] Register GType for non-GType enums and flags at runtime. (Laszlo Pandy)
	- [gi-demos] add info bars demo (John (J5) Palmieri)
	- tests/runtests.py: Add missing "import sys" (Martin Pitt)
	- [gi] Add Pythonic gdbus method invocation (Martin Pitt)
	- Skip GError out parameters in Python closure. (Laszlo Pandy)
	- [gi-demos] added rotate text demo (John (J5) Palmieri)
	- [gi-demos] add images demo (John (J5) Palmieri)
	- [gi-demos] add pixbuf demo (John (J5) Palmieri)
	- [gi-demos] remove fixmes from print demo, fixed in pango (John (J5) Palmieri)
	- [gi-demos] add printing demo (John (J5) Palmieri)
	- [gi-overrides] add cursor overrides (John (J5) Palmieri)
	- [gi-demos] add the links demo (John (J5) Palmieri)
	- [gi-demos] add expander demo (John (J5) Palmieri)
	- [gi-overrides] use pop instead of del and add extra tests for Gtk.Table kwargs (John (J5) Palmieri)
	- [tests] Separate processes for GI and static binding tests. (Laszlo Pandy)
	- [GI] Remove implicit loading of gi module preserve the code path for static bindings. (Laszlo Pandy)
	- [gi-demos] add dialogs demo (John (J5) Palmieri)
	- [gi-overrides] fix typo in GtkTable constructor (John (J5) Palmieri)
	- [gi-demos] keep popup menu from destroying itself by holding a ref in app class (John (J5) Palmieri)
	- [gi-overrides] add a Gtk.Menu override for the popup method (John (J5) Palmieri)
	- [gi-demos] fix the about dialog in appwindow demo (John (J5) Palmieri)
	- [gi-demos] fix clipboard demo so DnD works (John (J5) Palmieri)
	- [gi-demos] fix clipboard demo to reflect new API (John (J5) Palmieri)
	- [gi-demo] Fix color dialog demo to run with new draw, style and color apis (John (J5) Palmieri)
	- [gi-demos] fix most of the combobox app (John (J5) Palmieri)
	- Use PyGI type conversion (to fix foreign types) for signal callbacks. (Laszlo Pandy)
	- [gi-demos] fix drawingarea app to use the new draw api (John (J5) Palmieri)
	- [gi-overrides] for Gtk 3 alias Gdk.Rectangle to cairo.RectangleInt (John (J5) Palmieri)
	- [gi-overrides] let user set the proper property names in Gtk.Table (John (J5) Palmieri)
	- [gi-demos] get appwindow demo working again (John (J5) Palmieri)
	- [gi-demos] fixed use of tree_iter_get (John (J5) Palmieri)

2.27.90 11-Feb-2011 (2.28 pre-release)
	- fix build to correctly use python-config (John (J5) Palmieri)
	- Run gio tests separately when enabled (Martin Pitt)
	- Revert "Remove gio static bindings" (Martin Pitt)
	- Decrease the refcount for GInitiallyUnowned constructors. (Steve FrÃ©cinaux)
	- Ensure the sink functions are only ran once. (Steve FrÃ©cinaux)
	- Revert "Fix wrong refcount when calling introspected widget constructors" (Steve FrÃ©cinaux)
	- Revert "Fix reference leaks for GInitiallyUnowned objects" (Steve FrÃ©cinaux)
	- Run test suite under dbus-launch (Martin Pitt)
	- Fix test_gdbus.py to be Python3 friendly (Martin Pitt)
	- [gi] Provide comfortable GSettings API (Martin Pitt)
	- Fix vfunc search bug when using GInterfaces and a do_* method. (Laszlo Pandy)
	- [GI] Add tests for Gtk.Widget.drag_* methods. (Laszlo Pandy)
	- [python 3] use the right syntaxis to raise exceptions (Ignacio Casal Quinteiro)
	- [gi] return PYGLIB_MODULE_ERROR_RETURN on error and use pygobject_init (Ignacio Casal Quinteiro)
	- [gi] return PYGLIB_MODULE_ERROR_RETURN on error (Ignacio Casal Quinteiro)
	- Fix wrong refcount when calling introspected widget constructors (Steve FrÃ©cinaux)
	- Gdk.Window: Map the standard constructor to the *new* constructor (Simon Schampijer)
	- Ship tests/org.gnome.test.gschema.xml in dist tarballs (Martin Pitt)
	- [gi] Add GSettings tests (Martin Pitt)
	- [gi] Provide GtkTextBuffer.insert_with_tags_by_name() (Martin Pitt)
	- [gi] Support tag names in GtkTextBuffer.insert_with_tags() (Martin Pitt)
	- Add MAINTAINERCLEANFILES (Ignacio Casal Quinteiro)
	- Remove .gitignore files and use git.mk (Ignacio Casal Quinteiro)
	- pygi-convert.sh: Convert Pango.TabAlign.* (Martin Pitt)
	- pygi-convert.sh: Drop window -> get_window() conversion (Martin Pitt)
	- pygi-convert.sh: Don't convert self.window assignments (Martin Pitt)
	- Fix leaked python reference in python-defined subclasses (Steve FrÃ©cinaux)
	- Add some tests for the number of python refs held at creation time (Steve FrÃ©cinaux)
	- Factor out parameter marshalling from construction functions. (Steve FrÃ©cinaux)
	- [gi] in python 3 an array of uint8 can be bytes but not string (John (J5) Palmieri)
	- [gi] fix Gio.FileEnumerator to reflect the Python 3 iter protocol (John (J5) Palmieri)
	- [gi] python 3 fixes (John (J5) Palmieri)
	- [gi] fix try/except blocks using depricated raise format (John (J5) Palmieri)
	- [gi] Add docstring to GLib.Variant constructor (Martin Pitt)
	- [gi] update gdbus test cases for previous GVariant change (Martin Pitt)
	- [gi] Accept only a single object in GLib.Variant constructor (Martin Pitt)
	- Speed up _setup_native_vfuncs() (Laszlo Pandy)
	- Speed up class creation: rewrite _setup_vfuncs() to be much more efficient. (Laszlo Pandy)
	- pygi-convert.sh: Convert gtk.UI_MANAGER_* (Sebastian PÃ¶lsterl)
	- pygi-convert.sh: Convert gdk.GRAB_* (Sebastian PÃ¶lsterl)
	- [gi] set the gtype GValue correctly (Ignacio Casal Quinteiro)
	- [gi] use the right argument type for callback (Ignacio Casal Quinteiro)
	- [gi] Add test cases for GDBus client operations (Martin Pitt)
	- [gi] Add Variant construction/unpack support for boxed Variants (Martin Pitt)
	- Merge branch 'windows-setup-fixes' (Dieter Verfaillie)
	- pygi-convert.sh: GdkPixbuf methods (Thomas Hindoe Paaboel Andersen)
	- pygi-convert.sh: Gdk.COLORSPACE_RGB (Thomas Hindoe Paaboel Andersen)
	- [gi] Support nested objects and empty sequences in GLib.Variant building (Martin Pitt)
	- Uncomment test_gi.TestInterfaceClash (Tomeu Vizoso)
	- Fix reference leaks for GInitiallyUnowned objects (Steve FrÃ©cinaux)
	- Add tests for refcount of a GObject owned by a library (Steve FrÃ©cinaux)
	- Add a test to check for regular object reference count (Steve FrÃ©cinaux)
	- [gi] Update TreeView.enable_model_drag_{source,dest} to current GTK (Martin Pitt)
	- Fix a typo in a private symbol name. (Steve FrÃ©cinaux)
	- pygi-convert.sh: Convert glib.source_remove() (Martin Pitt)
	- Fix typo in previous commit to actually convert glib.GError (Martin Pitt)
	- pygi-convert.sh: Move some glib bits which are better handled by gobject (Martin Pitt)
	- Modify override for Gtk.Adjustment to allow position or keyword arguments in __init__(). (Laszlo Pandy)
	- [gi] Fix small typo in previous commit (Martin Pitt)
	- [gi] Add pythonic iterator and indexing for string GVariants (Martin Pitt)
	- Construct structs using default API constructor (Tomeu Vizoso)
	- pygi-convert.sh: Migrate Gdk.Cursor constructor, and some cursor names (Martin Pitt)
	- pygi-convert.sh: Handle .window attributes (Martin Pitt)
	- Also deal with foreign boxed structs (Tomeu Vizoso)
	- [gi] Convert GErrors to GObject.GError exceptions, and throw them upon returning from calling the C function. (Laszlo Pandy)
	- pygi-convert.sh: Don't convert glib -> GLib for now (Martin Pitt)
	- Link libregress.so to GIO_LIBS again (Tomeu Vizoso)
	- Fix attributes 2BUTTON_PRESS and 3BUTTON_PRESS of Gdk.EventType. (Laszlo Pandy)
	- [gi] Fixed typo in exception (Sebastian PÃ¶lsterl)
	- [gi] Enable handling of Gdk.EventType.2BUTTON_PRESS and 3BUTTON_PRESS (Sebastian PÃ¶lsterl)
	- Revert "Fix Pango FontDescription override" (Martin Pitt)
	- Python iterator interface support for GFileEnumerator. (Tony Young)
	- Remove gio static bindings (Tomeu Vizoso)
	- [gi] set length when marshalling guint8 erases (Ignacio Casal Quinteiro)
	- Convert Gdk.Pixbuf to GdkPixbuf.Pixbuf (Sebastian PÃ¶lsterl)
	- Disable calls to PyGILState_* when threads are disabled (Arnaud Charlet)
	- pygi-convert.sh: Do not comment out set_cell_data_func() calls; these should be ported properly (Martin Pitt)
	- pygi-convert.sh: Fix match for adding missing imports (Martin Pitt)
	- pygi-convert.sh: Fix Gtk.Label handling to be idempotent (Martin Pitt)
	- Remove trailing whitespace from gi/overrides/Gtk.py (Laszlo Pandy)
	- Fix Pango FontDescription override (Martin Pitt)
	- tests: Respect existing $GI_TYPELIB_PATH (Martin Pitt)
	- Merge branch 'value' (Sebastian PÃ¶lsterl)
	- GTK overrides: Do type conversion to column types of ListStore and TreeStore in set_value (Sebastian PÃ¶lsterl)
	- Always register a new GType when a GObject class is subclassed (Steve FrÃ©cinaux)
	- Raise required versions of GLib and GObject-Introspection (Simon van der Linden)
	- pygi-convert.sh: Handle keysyms (Martin Pitt)
	- GLib overrides: Add test case for array variant building (Martin Pitt)
	- Remove cairo.RectangleInt from the foreign module (Tomeu Vizoso)
	- Dont try to guess the transfer if its a boxed (Tomeu Vizoso)
	- The tags can be Empty not None. (Ignacio Casal Quinteiro)
	- Add Pythonic iterators and indexing to GVariant (Martin Pitt)
	- Add GLib.Variant.unpack() (Martin Pitt)
	- Add override for gtk_text_buffer_insert_with_tags (Ignacio Casal Quinteiro)
	- Deduce PYTHON_LIBS in addition to PYTHON_INCLUDES (Simon van der Linden)
	- Kill JD_CHECK_PYTHON_HEADERS (Simon van der Linden)
	- Revert "Override Gtk.Box.pack_start and pack_end to set default values to be compliant with pygtk" (Sebastian PÃ¶lsterl)
	- Revert "Override Gtk.CellLayout.pack_start and pack_end to add default values to be compliant with pygtk" (Sebastian PÃ¶lsterl)
	- Revert "Override Gtk.TreeViewColumn.pack_start, pack_end and set_cell_data_func to add default values to be compliant with pygtk" (Sebastian PÃ¶lsterl)
	- pygi-convert.sh: Handle gtk.combo_box_new_text() (Martin Pitt)
	- Override TreeSortable.set_sort_func and set_default_sort_func to add default values to be pygtk compliant (Sebastian PÃ¶lsterl)
	- Override Gtk.TreeViewColumn.pack_start, pack_end and set_cell_data_func to add default values to be compliant with pygtk (Sebastian PÃ¶lsterl)
	- Override Gtk.CellLayout.pack_start and pack_end to add default values to be compliant with pygtk (Sebastian PÃ¶lsterl)
	- Override Gtk.Paned pack1 and pack2 to add default values to be compliant with pygtk (Sebastian PÃ¶lsterl)
	- Override Gtk.Box.pack_start and pack_end to set default values to be compliant with pygtk (Sebastian PÃ¶lsterl)
	- Handle GObject subclasses in the property helper. (Steve FrÃ©cinaux)
	- Fix handling of unicode for GtkTreeModels (Martin Pitt)
	- In IntrospectionModule and DynamicModule classes, make all instance attributes start with an underscore. (Laszlo Pandy)
	- Amend previous enum wrapping commit to remove redundant setting of __info__ attribute. (Laszlo Pandy)
	- pygi-convert.sh: Handle GdkPixbuf.InterpType (Martin Pitt)
	- Fix wrapping of enums: Create new Python type for each non-gtype enum. (Laszlo Pandy)
	- Use g_vfunc_info_invoke for chaining up in vfuncs (Tomeu Vizoso)
	- Move pyglib_{main_context, option_context, option_group}_new into _PyGLib_API (Simon van der Linden)
	- pygi-convert.sh: Handle Gdk.DragAction (Martin Pitt)
	- pygi-convert.sh: Generalize Gtk.Settings migration (Martin Pitt)
	- pygi-convert.sh: Don't change the name of "glib" submodules (Martin Pitt)
	- Plug another memory leak (Paolo Borelli)
	- Plug a small memory leak. (Paolo Borelli)
	- Override Table.attach() to behave like pygtk (Paolo Borelli)
	- pygi-convert.sh: Convert Pango.WrapMode (Martin Pitt)
	- pygi-convert.sh: Don't change the name of "gtk" submodules (Martin Pitt)
	- Fix the __dir__() methods on DynamicModule and IntrospectionModule (Laszlo Pandy)
	- pygi-convert.sh: handle ReliefStyle (Paolo Borelli)
	- setup.py: fix the provides keyword argument (Dieter Verfaillie)
	- setup.py: use the same spaces-less format for all setup() parameters (Dieter Verfaillie)
	- Add a __repr__() method to DynamicModule. (Laszlo Pandy)
	- Go back to using getattr() in DynamicModule.__getattr__ (Tomeu Vizoso)
	- Change __dir__() to report all the attributes that __getattr__ supports (Laszlo Pandy)
	- Bump the minimum gio dependency (Emilio Pozuelo Monfort)
	- Add test for incorrect attributes in Gdk.Event (Tomeu Vizoso)
	- Don't call getattr again in gi.overrides.Gdk.Event.__getattr__ (Simon van der Linden)
	- Release allocated array of arguments when handling closures (Mike Gorse)
	- Release GIValueInfo when checking an enum argument (Mike Gorse)
	- Respect different type lengths when assigning out-argument pointers. (Eitan Isaacson)
	- Fix stupid name clash (Tomeu Vizoso)
	- Add /usr/share to XDG_DATA_DIRS when running the tests (Tomeu Vizoso)
	- Comment out tests that require SRV lookups (Tomeu Vizoso)
	- Use suppresion file when running valgrind (Tomeu Vizoso)
	- Fix warnings. (Ignacio Casal Quinteiro)
	- Allow comparing Gtk.TreePath to None (Jesse van den Kieboom)
	- handle unicode objects in properties (John (J5) Palmieri)
	- dsextras.py: check if gcc is there when platform is win32 and compiler is mingw32 (Dieter Verfaillie)
	- dsextras.py: be consistent in how distutils imports are done (Dieter Verfaillie)
	- dsextras.py: add have_gcc() function (Dieter Verfaillie)
	- dsextras.py: use distutils.spawn.find_executable for have_pkgconfig() (Dieter Verfaillie)
	- setup.py: fix another case of use True/False instead of 1/0 (Dieter Verfaillie)
	- pygi-convert.sh: improve GtkSourceView conversion (Paolo Borelli)
	- pygi-convert.sh: Gtk.DialogFlags conversion (Paolo Borelli)
	- 	Doc Extractor: Print the gtk-doc blocks sorted by function name. (JosÃ© Alburquerque)
	- pygi-convert.sh: add more Gtk conversions and sort (Paolo Borelli)
	- pygi-convert.sh: convert Atk (Paolo Borelli)
	- pygi-convert.sh: convert a few more Gio types (Paolo Borelli)
	- pygi-convert.sh: more GLib conversion (Paolo Borelli)
	- pygi-convert.sh: remove two cases handled by overrides (Paolo Borelli)
	- Override Gtk.ScrolledWindow constructor (Paolo Borelli)
	- pygi-convert.sh: Fix 'find' syntax (Paolo Borelli)
	- pygi-convert.sh: start handling Gio and GLib (Paolo Borelli)
	- pygi-convert.sh: convert Gdk.ScrollDirection. (Paolo Borelli)
	- Override Pango.Layout constructor. (Paolo Borelli)
	- Remove Pango.FontDescription() conversion. (Paolo Borelli)
	- Override GtkAction and GtkRadioAction constructors. (Paolo Borelli)
	- Override Adjustment constructor to behave like pygtk (Dmitrijs Ledkovs)
	- add secondary_text apis to MessageDialog (John (J5) Palmieri)
	- [gi] get rid of some debug prints and fix error messages (John (J5) Palmieri)
	- Fix demo for override changes. (Paolo Borelli)
	- Override Pango.FontDescription. (Paolo Borelli)
	- Stop checking that all vfuncs are implemented (Tomeu Vizoso)
	- Fix usage of TreeIter api that is now an override. (Paolo Borelli)
	- Fix Gtk.Label(label="Foo") (Paolo Borelli)
	- Fix typo when raising an exception (Paolo Borelli)
	- pygi-convert.sh: Added more conversions (Sebastian PÃ¶lsterl)
	- Override LinkButton constructor to make 'uri' mandatory (Paolo Borelli)
	- Container should be iterable. (Dmitry Morozov)
	- No need to import Gdk (Paolo Borelli)
	- Remove semicolumns (Paolo Borelli)
	- [gi] make sure Gtk.Button override passes all keywords to parent constructor (John (J5) Palmieri)
	- Fix cut&paste error in the Label override (Paolo Borelli)
	- pygi-convert.sh: handle TextWindowType (Paolo Borelli)
	- Override Label constructor to behave like pygtk (Paolo Borelli)
	- Override GtkTable constructor to behave like pygtk (Paolo Borelli)
	- pygi-convert.sh: convert MovementStep (Paolo Borelli)
	- Update Gdk overrides to work with latest Gtk+ 3 (Paolo Borelli)
	- Gtk: add an override for Gtk.main_quit (Johan Dahlin)
	- [gi] handle subtypes when inserting into tree models (John (J5) Palmieri)
	- Override TreeSelection.select_path and TreeView.scroll_to_cell (Paolo Borelli)
	- Override TreePath.__new__ (Paolo Borelli)
	- Override Container to behave like a sequence (Paolo Borelli)
	- refactor Jonathan Matthew recurse vfunc patch so it applys and clean up a bit (John (J5) Palmieri)
	- Recurse up through base classes when setting up vfuncs (Jonathan Matthew)
	- add a profiling torture test for when we fix up invoke (John (J5) Palmieri)
	- moved dynamic and base modules outside of gtk-2.0 directory (John (J5) Palmieri)
	- add test for inout argument count (John (J5) Palmieri)
	- [gi] add check for UNICHAR (John (J5) Palmieri)
	- Support gunichar (Paolo Borelli)
	- pygi-convert.sh: gtk.accel_map -> Gtk.AccelMap._ (Paolo Borelli)
	- pygi-convert.sh: handle "from gtk import gdk" (Paolo Borelli)
	- pygi-convert.sh: add some Pango special cases (Paolo Borelli)
	- Override TextIter (begins|ends|toggles)_tag() (Paolo Borelli)
	- Override TextBuffer.set_text() to make length optional (Paolo Borelli)
	- Override TextBuffer.create_mark() (Paolo Borelli)
	- Fix TextBuffer.get_selection_bounds() override (Paolo Borelli)
	- [gi] fix ActionGroup constructor to allow other keyword properties to be set (John (J5) Palmieri)
	- [gi] require the name parameter when creatin a Gtk.ActionGroup (John (J5) Palmieri)
	- Override UIManager.insert_action_group (Paolo Borelli)
	- Override TreeModel.get() to return a tuple (Paolo Borelli)
	- Make TreeSelection.get_selected_rows compatible with PyGtk (Paolo Borelli)
	- [gi] switch to using sequences/tuples when marshalling cairo_rectangle_int_t (John (J5) Palmieri)
	- [gi] overrides for treeview Drag and Drop (John (J5) Palmieri)
	- [gi] when encountering guint8 arrays treat them as byte arrays (John (J5) Palmieri)
	- pygi-convert.sh: Add pynotify -> Notify (Martin Pitt)
	- pygi-convert.sh: Remove sugar specifics, and allow command line file list (Martin Pitt)
	- pygi-convert.sh: Cover Message and Buttons types (Martin Pitt)
	- [gi] fix actiongroup test since actions are hashed (John (J5) Palmieri)
	- [gi] when converting to UTF-8 accept Python Unicode objects as input (Python 2) (John (J5) Palmieri)
	- Correct a bug in the freeing of memory in pygi-invoke.c. (Damien Caliste)
	- update news for release (John (J5) Palmieri)
	- Implement richcompare for GIBaseInfo (Jonathan Matthew)
	- [gi] add the rectangle_int_t forign cairo type (John (J5) Palmieri)
	- add a foreign type for cairo_rectangle_int_t and allow it to be caller-allocated (John (J5) Palmieri)
	- [gi] add overrides to Gtk.Editable (John (J5) Palmieri)
	- [gi] handle virtual invokers (John (J5) Palmieri)
	- add overrides for the insert* apis of list_store and tree_store (John (J5) Palmieri)
	- fix dialogs overrides which were relying on broken inheritance behavior (John (J5) Palmieri)
	- Add a overrides registry so we can refrence overrides inside the module (John (J5) Palmieri)
	- Merge remote branch 'dieterv/setup-fixes-for-merge' (John Stowers)
	- setup.py: ease maintenance burden for tests installation (Dieter Verfaillie)
	- fix inheritence issues in overrides (John (J5) Palmieri)
	- tests: add runtests-windows.py script (Dieter Verfaillie)
	- pygobject_postinstall.py: remove pygobject-2.0.pc treatment from postinstall as pkg-config on windows figures out the correct prefix at runtime (Dieter Verfaillie)
	- pygobject_postinstall.py: remove shortcut creation (Dieter Verfaillie)
	- setup.py: formatting cleanup, makes things readable (Dieter Verfaillie)
	- setup.py: build and install tests (Dieter Verfaillie)
	- setup.py: install documentation when available on build system (Dieter Verfaillie)
	- setup.py: install pygobject-codegen script (Dieter Verfaillie)
	- setup.py: install fixxref.py script (Dieter Verfaillie)
	- setup.py: rearrange constants (Dieter Verfaillie)
	- setup.py: check python version and pkgconig availability before anything else (Dieter Verfaillie)
	- setup.py: simplify sys.platform != 'win32' detection and error reporting (Dieter Verfaillie)
	- setup.py: rearrange imports (Dieter Verfaillie)
	- README.win32: update build instructions (Dieter Verfaillie)
	- dsextras.py: formatting cleanup, makes things readable (Dieter Verfaillie)
	- dsextras.py: add ggc4 to MSVC compatible struct packing comment (Dieter Verfaillie)
	- dsextras.py: use the pkgc_ functions instead of repeating pgk-config incantations all over the place (Dieter Verfaillie)
	- dsextras.py: add pkgc_get_version and pkgc_get_defs_dir functions (Dieter Verfaillie)
	- dsextras.py: PEP8: Comparisons to singletons like None should always be done with 'is' or 'is not', never the equality operators. (Dieter Verfaillie)
	- dsextras.py: use True/False instead of 1/0 (Dieter Verfaillie)
	- dsextras.py: rearrange imports (Dieter Verfaillie)
	- Add distutils generated build/dist directories and eclipse configuration files to .gitignore (Dieter Verfaillie)
	- [gi] add tests for calling dir on a dynamic module (John (J5) Palmieri)
	- [gi] dir() now works for modules (Deepankar Sharma)
	- Don't check the inner type when comparing gpointers (SimÃ³n Pena)
	- Release GIL when calling into C functions (John (J5) Palmieri)
	- _gi.Repository : Implement missing info bindings. (JosÃ© Aliste)
	- include Python.h so that PY_VERSION_HEX gets defined (John (J5) Palmieri)
	- [gi] make overrides work for python 3.x protocols and alias for python 2.x (John (J5) Palmieri)
	- Override Gtk.Widget.translate_coordinates to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.TreeViewColumn.cell_get_position to not return success value (Sebastian PÃ¶lsterl)
	- Override get_path_at_pos and get_dest_row_at_pos of Gtk.TreeView to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.TreeSortable.get_sort_column_id to not return success value (Sebastian PÃ¶lsterl)
	- Override forward_search and backward_search of Gtk.TextIter to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.TextBuffer.get_selection_bounds to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.RecentInfo.get_application_info to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.IMContext.get_surrounding to not return success value (Sebastian PÃ¶lsterl)
	- Override get_item_at_pos, get_visible_range, get_dest_item_at_pos of Gtk.IconView to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.Container.get_focus_chain to not return success value (Sebastian PÃ¶lsterl)
	- Override Gtk.ComboBox.get_active_iter to not return success value (Sebastian PÃ¶lsterl)
	- [gi] make parameter check less strict when dealing with GValue params (John (J5) Palmieri)
	- Shortcut removal is not needed on post-uninstall (John Stowers)
	- Disable shortcut creation in windows installer (John Stowers)
	- overrides for all subclasses of dialog (John (J5) Palmieri)
	- Make TreeModel behave like in GTK-2.x (Sebastian PÃ¶lsterl)
	- Correctly build GIO on windows (John Stowers)
	- Require Python >= 2.6.0 for Windows build (John Stowers)
	- Fix depreciation warning in dsextras.py (John Stowers)
	- Fix build on windows (John Stowers)
	- Support for GCC4 in Windows distutils build - bug 626548 (Michael Culbertson)
	- Remove obsolete comments in dsextras.py (John Stowers)
	- Broken dsextras.py pkg-config check error message (John Stowers)
	- add compat functions for the deprecated PyCObject api (John (J5) Palmieri)
	- Add __path__ attributes. (Damien Caliste)
	- Override Gtk.TreeSelection.get_selected to not return success value. (Sebastian PÃ¶lsterl)
	- Make row optional in Gtk.TreeStore/ListStore.append override (Vincent Untz)
	- Revert "add compat functions for the deprecated PyCObject api" (John (J5) Palmieri)
	- return NULL instead of -1 which fixes crash when introspection is turned off (John (J5) Palmieri)
	- add compat functions for the deprecated PyCObject api (John (J5) Palmieri)
	- fix commit 7fe83108 which didn't use the compat functions for string handling (John (J5) Palmieri)
	- Python 3 fixes for dsextras and the python.m4 distribution files (John (J5) Palmieri)

2.27.0 10-Nov-2010
	- Implement richcompare for GIBaseInfo (Jonathan Matthew)
        - [gi] add the rectangle_int_t forign cairo type (John (J5) Palmieri)
        - add a foreign type for cairo_rectangle_int_t and allow it to be caller-allocated (John (J5) Palmieri)
        - [gi] add overrides to Gtk.Editable (John (J5) Palmieri)
        - [gi] handle virtual invokers (John (J5) Palmieri)
        - add overrides for the insert* apis of list_store and tree_store (John (J5) Palmieri)
        - fix dialogs overrides which were relying on broken inheritance behavior (John (J5) Palmieri)
        - Add a overrides registry so we can refrence overrides inside the module (John (J5) Palmieri)
        - Merge remote branch 'dieterv/setup-fixes-for-merge' (John Stowers)
        - setup.py: ease maintenance burden for tests installation (Dieter Verfaillie)
        - fix inheritence issues in overrides (John (J5) Palmieri)
        - tests: add runtests-windows.py script (Dieter Verfaillie)
        - pygobject_postinstall.py: remove pygobject-2.0.pc treatment from postinstall as pkg-config on windows figures out the correct prefix at runtime (Dieter Verfaillie)
        - pygobject_postinstall.py: remove shortcut creation (Dieter Verfaillie)
        - setup.py: formatting cleanup, makes things readable (Dieter Verfaillie)
        - setup.py: build and install tests (Dieter Verfaillie)
        - setup.py: install documentation when available on build system (Dieter Verfaillie)
        - setup.py: install pygobject-codegen script (Dieter Verfaillie)
        - setup.py: install fixxref.py script (Dieter Verfaillie)
        - setup.py: rearrange constants (Dieter Verfaillie)
        - setup.py: check python version and pkgconig availability before anything else (Dieter Verfaillie)
        - setup.py: simplify sys.platform != 'win32' detection and error reporting (Dieter Verfaillie)
        - setup.py: rearrange imports (Dieter Verfaillie)
        - README.win32: update build instructions (Dieter Verfaillie)
        - dsextras.py: formatting cleanup, makes things readable (Dieter Verfaillie)
        - dsextras.py: add ggc4 to MSVC compatible struct packing comment (Dieter Verfaillie)
        - dsextras.py: use the pkgc_ functions instead of repeating pgk-config incantations all over the place (Dieter Verfaillie)
        - dsextras.py: add pkgc_get_version and pkgc_get_defs_dir functions (Dieter Verfaillie)
        - dsextras.py: PEP8: Comparisons to singletons like None should always be done with 'is' or 'is not', never the equality operators. (Dieter Verfaillie)
        - dsextras.py: use True/False instead of 1/0 (Dieter Verfaillie)
        - dsextras.py: rearrange imports (Dieter Verfaillie)
        - Add distutils generated build/dist directories and eclipse configuration files to .gitignore (Dieter Verfaillie)
        - [gi] add tests for calling dir on a dynamic module (John (J5) Palmieri)
        - [gi] dir() now works for modules (Deepankar Sharma)
        - Don't check the inner type when comparing gpointers (SimÃ³n Pena)
        - Release GIL when calling into C functions (John (J5) Palmieri)
        - _gi.Repository : Implement missing info bindings. (JosÃ© Aliste)
        - include Python.h so that PY_VERSION_HEX gets defined (John (J5) Palmieri)
        - [gi] make overrides work for python 3.x protocols and alias for python 2.x (John (J5) Palmieri)
        - Override Gtk.Widget.translate_coordinates to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.TreeViewColumn.cell_get_position to not return success value (Sebastian PÃ¶lsterl)
        - Override get_path_at_pos and get_dest_row_at_pos of Gtk.TreeView to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.TreeSortable.get_sort_column_id to not return success value (Sebastian PÃ¶lsterl)
        - Override forward_search and backward_search of Gtk.TextIter to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.TextBuffer.get_selection_bounds to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.RecentInfo.get_application_info to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.IMContext.get_surrounding to not return success value (Sebastian PÃ¶lsterl)
        - Override get_item_at_pos, get_visible_range, get_dest_item_at_pos of Gtk.IconView to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.Container.get_focus_chain to not return success value (Sebastian PÃ¶lsterl)
        - Override Gtk.ComboBox.get_active_iter to not return success value (Sebastian PÃ¶lsterl)
        - [gi] make parameter check less strict when dealing with GValue params (John (J5) Palmieri)
        - Shortcut removal is not needed on post-uninstall (John Stowers)
        - Disable shortcut creation in windows installer (John Stowers)
        - overrides for all subclasses of dialog (John (J5) Palmieri)
        - Make TreeModel behave like in GTK-2.x (Sebastian PÃ¶lsterl)
        - Correctly build GIO on windows (John Stowers)
        - Require Python >= 2.6.0 for Windows build (John Stowers)
        - Fix depreciation warning in dsextras.py (John Stowers)
        - Fix build on windows (John Stowers)
        - Support for GCC4 in Windows distutils build - bug 626548 (Michael Culbertson)
        - Remove obsolete comments in dsextras.py (John Stowers)
        - Broken dsextras.py pkg-config check error message (John Stowers)
        - add compat functions for the deprecated PyCObject api (John (J5) Palmieri)
        - Add __path__ attributes. (Damien Caliste)
        - Override Gtk.TreeSelection.get_selected to not return success value. (Sebastian PÃ¶lsterl)
        - Make row optional in Gtk.TreeStore/ListStore.append override (Vincent Untz)
        - Revert "add compat functions for the deprecated PyCObject api" (John (J5) Palmieri)
        - return NULL instead of -1 which fixes crash when introspection is turned off (John (J5) Palmieri)
        - add compat functions for the deprecated PyCObject api (John (J5) Palmieri)
        - fix commit 7fe83108 which didn't use the compat functions for string handling (John (J5) Palmieri)
        - Python 3 fixes for dsextras and the python.m4 distribution files (John (J5) Palmieri)

2.26.0 24-Sep-2010
        - Wrap g_get_system_{config,data}_dirs () (John Strowers)
	- fixed make check and make dist (John (J5) Palmieri)
        - Disable GI tests when introspection disabled (John Stowers)
        - Wrap g_uri_list_extract_uris. Fixes bug #584431 (Tomeu Vizoso)
        - Fix a few uses of TRUE and FALSE in the docs (Paul Bolle)
        - pygi: always free the invocation_state struct (Damien Caliste)
        - Start implementing something equivalent to g_variant_new (Tomeu Vizoso)
        - fixed typo - missing comma in glib.option module (John (J5) Palmieri)
        - add checks so we can compile under python 3 by setting PYTHON=python3 (John (J5) Palmieri)
        - Rename static methods as functions (Tomeu Vizoso)
        - fix a couple of compiler warnings (John (J5) Palmieri)
        - remove unused code (John (J5) Palmieri)
        - Check the type of the instance object (John (J5) Palmieri)
        - include the correct pycairo version (John (J5) Palmieri)
        - Use PyMapping_Keys to determine if an object is a dict (py3k fix) (John (J5) Palmieri)
        - fix handling of UINT64 and INT64 arguments in py3k (John (J5) Palmieri)
        - properly handle ulongs properties in py3k (John (J5) Palmieri)
        - Specify encoding of tests/test_gi.py (Tomeu Vizoso)
        - use actual unicode in the tests on py3k, not the byte representation (John (J5) Palmieri)
        - s/METH_KEYWORDS/METH_VARARGS|METH_KEYWORDS/ when defining object methods (John (J5) Palmieri)
        - fix subclassing PyLong by calling __new__ correctly (John (J5) Palmieri)
        - minor py3k fixups for python modules (John (J5) Palmieri)
        - minor fixes in tests for py3k compat (John (J5) Palmieri)
        - compilation: Fix syntax error (Colin Walters)
        - Add missing file (Tomeu Vizoso)
        - Add override for GLib.Variant.new_tuple (Tomeu Vizoso)
        - fix for changes in the gi test libraries (John (J5) Palmieri)
        - Gtk.DialogFlags.NO_SEPARATOR has been removed in Gtk 3.0 (John (J5) Palmieri)
        - no need to offset arg positions when is_method is true (John (J5) Palmieri)
        - gi: Add support for more property types (Tomeu Vizoso)
        - use PyObject_SetAttrString, not PyDict_SetItemString when setting __gtype__ (John (J5) Palmieri)
        - Rename GArgument to GIArgument (Tomeu Vizoso)
        - fix up tests so they run in py3k (John (J5) Palmieri)
        - tests: Port to new introspection tests (Colin Walters)
        - we need to specify tp_hash since we overide tp_richcompare (John (J5) Palmieri)
        - working enum/flags/pid subclasses of long (John Ehresman)
        - make vfuncs work in py3k (John (J5) Palmieri)
        - make cairo module compile in py3k (John (J5) Palmieri)
        - fix exceptions so they work in python 3.x (John (J5) Palmieri)
        - make the gi module compile under 3.x (John (J5) Palmieri)
        - fix up testshelper module so it compiles in python 3.x (John (J5) Palmieri)
        - convert to using PYGLIB_DEFINE_TYPE for module objects (John (J5) Palmieri)
        - some more p3k PyString and PyInt eradication in GI (John (J5) Palmieri)
        - pyglib: Fix typo (Leo Singer) (Tomeu Vizoso)
        - Add defines for size_t and ssize_t conversion functions (Gustavo Noronha Silva)
        - pyglib: Fix a compiler warning (Colin Walters)
        - Don't force gtk 2.0 (Tomeu Vizoso)
        - Fix some ref leaks in hook_up_vfunc_implementation() (Steve FrÃ©cinaux)
        - handle strings correctly in gio (John (J5) Palmieri)
        - make giomodule compile under py3k (John (J5) Palmieri)
        - for py3k we need to do some more processing to get bytes from a unicode string (John (J5) Palmieri)
        - use Bytes instead of Unicode when reading io (John (J5) Palmieri)
        - prefix compat macros with PYGLIB (John (J5) Palmieri)
        - Gtk.Button unit tests (John (J5) Palmieri)
        - [Gtk] Add overrides for Button (Johan Dahlin)
        - Make Cairo an optional dependency (Simon van der Linden)
        - Don't import again PyGObject (John Ralls) (Tomeu Vizoso)
        - move to using richcompare slot instead of compare (John (J5) Palmieri)
        - Replace autogen.sh by a newer version (Simon van der Linden)
        - Fix some warnings (Simon van der Linden)
        - Fix caller-allocates emergency free. (Simon van der Linden)
        - Remove useless checks. (Simon van der Linden)
        - Call valgrind with G_SLICE=always-malloc G_DEBUG=gc-friendly (Tomeu Vizoso)
        - Fix some warnings. (Ignacio Casal Quinteiro)
        - Add myself as a maintainer (Simon van der Linden)
        - Properly allocate boxed structs that are (caller-allocates) (Tomeu Vizoso)
        - override gdk.Event to return attribute from the proper event object (Toms Baugis)
        - check if z# needs an int or Py_ssize_t (John (J5) Palmieri)
        - make sure we parse parameters to python object vars not glib vars (John (J5) Palmieri)
        - Make an example and a demo work out of the box (Paul Bolle)
        - make sure caller allocated structs are freed when they go out of scope (John (J5) Palmieri)
        - Revert "override gdk.Event to return attribute from the proper event object." (Tomeu Vizoso)
        - PyGI: properly quit cairo-demo (Paul Bolle)
        - override gdk.Event to return attribute from the proper event object. (Toms Baugis)
        - Clean and improve the test infrastructure (Simon van der Linden)
        - Add some more transformations to pygi-convert.sh (Tomeu Vizoso)
        - Adapt to API changes: g_irepository_enumerate_versions (Tomeu Vizoso)
        - Add GValue<->GArgument marshalling for some more types (Tomeu Vizoso)
        - Chain up with the non-introspection implementation for properties if needed (Tomeu Vizoso)
        - Improve error reporting for missing attributes in introspection modules (Tomeu Vizoso)
        - Implement getting and setting properties using introspection information. (Tomeu Vizoso)
        - Readd Gdk.Rectangle override for Gtk-2.0 (Tomeu Vizoso)
        - Allow specifying a version when loading a typelib (Tomeu Vizoso)
        - treat GFreeFunc as equivalent to GDestroyNotify when scanning callbacks (Jonathan Matthew)
        - Don't use == to compare doubles, use <= and =>. (Simon van der Linden)
        - Allow passing ints as enum args (Tomeu Vizoso)
        - Make error message less ambiguous (Tomeu Vizoso)
        - fix passing in type names as a GType and add gtype unit tests (John (J5) Palmieri)
        - Increase a bit verbosity of tests so people know which test failed (Tomeu Vizoso)
        - Actually add the files for GVariant foreign structs (Tomeu Vizoso)
        - Add foreign struct support for GVariant (Tomeu Vizoso)

2.21.5 12-Jul-2010
        - Shut up some compiler warnings (Florian Müllner)
        - Adjust to API break in GObject-Introspection (Florian Müllner)
        - pass in the demo app so demos can use utility methods like requesting file paths (John (J5) Palmieri)
        - demo fixes to keep up with Gtk+ (John (J5) Palmieri)
        - override test fixes for new GTK+ annotations (John (J5) Palmieri)
        - Fix warning. (Ignacio Casal Quinteiro)
        - fix up treeiter usage due to caller-allocates annotations in gtk+ (John (J5) Palmieri)
        - add entry completion demo (John (J5) Palmieri)
        - string changes (John (J5) Palmieri)
        - add the Entry demo directory and the entry_buffer demo (John (J5) Palmieri)
        - fix loading of demo modules to support sub modules (John (J5) Palmieri)
        - add the ability to have demos in sub catagories (John (J5) Palmieri)
        - Add  __name__ to DynamicModule class. (Jose Aliste)
        - Do not override GdkRectangle. (Ignacio Casal Quinteiro)
        - Add override for TreeModel implementing __len__() (Philip Withnall)

2.21.4 29-Jun-2010
        - Build the cairo shim as a python module so the _gi module stops linking to it (Tomeu Vizoso)
        - add drawing area demo (John (J5) Palmieri)
        - sort the demo list (John (J5) Palmieri)
        - rename iter to treeiter so we aren't using a python reserved word (John (J5) Palmieri)
        - Fixup for change in buffer API (John (J5) Palmieri)
        - add ListStore, TreeStore and TreeViewColumn APIs (John (J5) Palmieri)
        - Add unit test for add_actions user data. (Ignacio Casal Quinteiro)
        - Pass user_data param when adding actions (Paolo Borelli)
        - add an exception type to the try/except block (John (J5) Palmieri)
        - return PyList instead of PyTuple for array, return empty list for NULL arrays (John (J5) Palmieri)
        - Fix 'make distcheck' (Tomeu Vizoso)
        - Allow building pygobject without introspection support by providing --disable-introspection to configure. (Tomeu Vizoso)
        - Make sure that sys.argv is a list and not a sequence. (Tomeu Vizoso)
        - Force loading the GObject typelib so we have available the wrappers for base classes such as GInitiallyUnowned. (Tomeu Vizoso)
        - we shouldn't g_array_free NULL pointers (John (J5) Palmieri)
        - remove unneeded TextIter creation in the tests (John (J5) Palmieri)
        - add override for TextBuffer (John (J5) Palmieri)
        - fix up some build issues (John (J5) Palmieri)
        - make the overrides file git friendly by appending to __all__ after each override (John (J5) Palmieri)
        - Override Dialog constructor and add_buttons method (Paolo Borelli)
        - Merge PyGI (Johan Dahlin)

2.21.3 21-Jun-2010
        - Proper handling of null-ok in virtual methods (Ludovic L'Hours)
        - Fall back to use the floating references API in glib if there isn't a sinkfunc defined. (Tomeu Vizoso)
        - Revert "Drop sinkfuncs." (Tomeu Vizoso)
        - [giounix] Make it possible to compile on glib 2.20 (Johan Dahlin)
        - Release the lock when potentially invoking Python code. (Sjoerd Simons)

2.21.2 10-Jun-2010
        - Drop sinkfuncs. (Tomeu Vizoso)
        - Clear error if we failed the import (Colin Walters)
        - Added missing , to keyword list of gio.GFile.set_attribute (John Ehresman)
        - Fix arg conversion in gio.GFile.set_attribute (John Ehresman)
        - Set constants under python 2.5 or before (John Ehresman)
        - Doc Extractor: Use replacements that make sense for &...; expressions. (José Alburquerque)
        - Add build docs for windows (John Stowers)
        - Setup.py cosmetic tidy (John Stowers)
        - Fix crash when importing gio (John Stowers)
        - Bug 589671 - Dont use generate-constants (John Stowers)
        - Bug 589671 - Fix setup.py for windows build (John Stowers)
        - Include pygsource.h (John Stowers)
        - codegen/docextract_to_xml.py: One more &...; replacement (&nbsp;). (José Alburquerque)
        - codegen/docextract_to_xml.py: Replace some &..; that cause errors. (José Alburquerque)
        - codegen/docextract_to_xml.py: Handle C++ multi-line comments. (José Alburquerque)
        - codegen/docextract.py: Stop final section processing on first match. (José Alburquerque)
        - Update doc extraction tool to handle GObjectIntrospection annotations. (José Alburquerque)
        - Docs: replace gio.IO_ERROR_* with gio.ERROR_* (Paul Bolle)
        - Bug 613341 - pygobject tests seem to require pygtk causing a circular (Gian Mario)
        - Don't raise an error in _pygi_import if pygi support is disabled (Simon van der Linden)
        - Initialize PyGPollFD_Type.fd_obj to NULL (Tomeu Vizoso)
        - Bug 605937 - pygobject: Makefile.am sets $TMPDIR, disrupting distcc (Gian Mario)
        - Wrap gio.Cancellable.make_pollfd() and add a test (Gian Mario)
        - Make cancellable an optional parameter in many methods (Gian Mario)

2.21.1 02-Jan-2010
        - Wrap gio.Volume.eject_with_operation (Gian Mario)
        - Wrap gio.Mount.eject_with_operation (Gian Mario)
        - Wrap gio.Mount.unmount_mountable_with_operation (Gian Mario)
        - Wrap File.unmount_mountable_with_operation (Gian Mario)
        - Wrap gio.File.stop_mountable (Gian Mario)
        - Wrap gio.File.start_mountable (Gian Mario)
        - Wrap gio.File.replace_readwrite_async (Gian Mario)
        - Wrap gio.File.poll_mountable (Gian Mario)
        - Wrap gio.File.open_readwrite_async (Gian Mario)
        - Wrap gio.File.eject_mountable_with_operation (Gian Mario)
        - Wrap gio.File.create_readwrite_async (Gian Mario)
        - Wrap gio.Drive.stop (Gian Mario)
        - Wrap gio.Drive.start (Gian Mario)
        - Wrap gio.SocketListener.accept_socket_async|finish (Gian Mario)
        - Wrap gio.SocketListener.accept_finish (Gian Mario)
        - Wrap gio.SocketListener.accept_async (Gian Mario)
        - Wrap gio.SocketListener.accept_socket (Gian Mario)
        - Wrap gio.SocketListener.accept (Gian Mario)
        - Make cancellable optional in gio.SocketClient.connect_to_host
          (Gian Mario)
        - Wrap gio.SocketListener.add_address (Gian Mario)
        - Wrap gio.SocketClient.connect_to_service_async (Gian Mario)
        - Wrap gio.SocketClient.connect_to_host_async (Gian Mario)
        - Wrap gio.SocketClient.connect_async (Gian Mario)
        - Wrap gio.SocketAddressEnumerator.next_async (Gian Mario)
        - Add a missing object gio.InetSocketAddress new in GIO 2.22
          (Gian Mario)
        - Make cancellable optional for gio.SocketAddressEnumerator.next
          (Gian Mario)
        - Wrap gio.Socket.condition_wait (Gian Mario)
        - Wrap gio.Socket.condition_check (Gian Mario)
        - Wrap gio.Resolver.lookup_service_finish (Gian Mario)
        - Wrap gio.Resolver.lookup_service_async (Gian Mario)
        - Wrap gio.Resolver.lookup_service (Gian Mario)
        - Wrap gio.Resolver.lookup_by_address_async (Gian Mario)
        - Wrap gio.Resolver.lookup_by_name_finish (Gian Mario)
        - Wrap gio.Drive.eject_with_data (Gian Mario)
        - Deprecate old gio.Drive methods (Gian Mario)
        - Wrap gio.Resolver.lookup_by_name (Gian Mario)
        - Make cancellable optional in gio.Resolver.lookup_by_address
          (Gian Mario)
        - Strip g_ prefix for many other functions (Gian Mario)
        - Strip g_ prefix from InetAddress functions (Gian Mario)
        - Fix function name gio.resolver_get_default (Gian Mario)
        - Wrap gio.FileIOStream.query_info_async (Gian Mario)
        - Register enums and flags in PyGI if needed (Tomeu Vizoso, #603534)
        - Wrap gio.IOStream.close_async (Gian Mario)
        - Make cancellable optional in GFile.create_readwrite (Gian Mario)
        - Remove a duplicate entry in gio.defs (Gian Mario)
        - Wrap gio.FileInfo.set_modification_time (Gian Mario)
        - Wrap gio.EmblemedIcon.get_emblems (Gian Mario)
        - Update Enums and Flags with new API (Gian Mario)
        - Fix handling of uchar in pyg_value_from_pyobject (Bastian Winkler)

2.21.0 18-dec-2009
        - pygmainloop: fix use of PySignal_WakeUpFD API for nested loops
          (Philippe Normad, #481569)
        - Add capabilities to import wrappers from pygi (Simon van der Linden)
        - Move threads_init() function from 'gobject' to 'glib' (Paul)
        - Fix wrong minimum checking in float properties (Paul, #587637)
        - Wrap new API added in GIO 2.22 (Gian Mario)
        - Fix bad name when rebuilding the unix source module (Gian Mario)
        - Add the missing limit constants from glibconfig.h
          (Tomeu Vizoso, #603244)
        - Suppress warnings about format conversion
          (Simon van der Linden, #603355)
        - Properly define Connectable as interface type and not object type
          (Gian Mario)
        - Wrap new API added in GIO-UNIX 2.22 (Gian Mario)
        - Wrap g_find_program_in_path (Gian Mario, #598435)
        - Add pygi-external.h into Makefile SOURCES (Gian Mario)

2.20.0 23-sep-2009
        - Allow to use automake 1.11 (Paolo Borelli)
        - Specify programming language in .devhelp file (Frédéric Péters)
        - Plug reference leak of GSource in pyg_main_loop_init (Paul)
        - Updated uninstalled.pc file (Brian Cameron)

2.19.0 10-aug-2009
        - Add macros to help with Python list to/from GList/GSList conversions.
          (John Finlay)
        - GIO docs practically completed (Gian)
        - GFileInfo.list_attributes should accept None/NULL (Gian)
        - Strip out Windows DLL API macros (John Finlay)
        - Document that many functions got moved gobject -> glib (Paul)
        - Allow h2def.py to work when there are tabs or multiple spaces after
          the struct keyword. (Murray Cumming)
        - Fix build when builddir is not the same as srcdir
          (Theppitak Karoonboonyanan)
        - Make gio.Emblem constructor new-style (Paul)
        - Cleanup GIO overrides to use Python function/method names (Paul)
        - Make codegen report errors using Python function/method names (Paul)
        - Fix object type in gio.BufferedInputStream_fill_async (Gian)
        - Wrap gio.BufferedInputStream.fill_async (Gian)
        - Add gio.BufferedOutputStream which was forgotten in the types (Gian)
        - Split overrides for gio.MemoryOutputStream (Gian)
        - Wrap gio.memory_input_stream_new_from_data (Gian)
        - Introduces the girepository module from the former PyBank
          (Simon van der Linden)
        - Add API appeared in 2.20 but not marked as such in gio docs (Gian)
        - Wrap gio.FileOutputStream.query_info_async (Gian)
        - Wrap gio.FileInputStream.query_async (Gian)
        - Install executable codegen parts with executing permissions (Paul)
        - Wrap gio.DataInputStream.read_line_async and read_until_async (Paul)
        - Fix gio.OutputStream.splice_async (Paul)
        - Add GIO 2.20 API and update docs (Gian)

2.18.0 24-may-2009
        - Improve gio docs with some more classes (Gian)
        - Wrap gio.OutputStream.splice_async() (Gian)
        - Add Python ver into installed libpyglib name (Emilio Pozuelo Monfort)
        - Wrap gio.OutputStream.flush_async() (Gian)
        - Use 'Requires.private' for libffi in '.pc' files (Josselin Mouette)
        - Add wrapper for gio.FileAttributeMatcher (Gian)
        - Mark relevant glib.IOChannel methods as METH_NOARGS (Paul)
        - Retire hand-written ChangeLog; autocreate from Git history (Paul)
        - Wrap gio.InputStream.skip_async() (Gian)
        - Add in codegen -n --namespace option and the code to remove dll
          API in headers, added documentation (Siavash Safi)
        - Properly mark glib.get_user_special_dir() as a keywords method (Paul)

2.17.0 30-apr-2009
        - Write a good part of the docs for gio (Gian)
        - Wrap g_mount_guess_content_type g_mount_guess_content_type_finish
          g_mount_guess_content_type_sync (Gian, #580802)
        - Swap first two arguments of gio.File.query_info_async (Paul, #580490)
        - Fix a crash in pyg_type_add_interfaces (Paul, #566571)
        - Remove an empty structure, use sizeof(PyObject)
          instead (Paul, #560591)
        - Wrap four g_get_user_*_dir() functions (Paul, #575999)
        - Remove 'ltihooks.py' as using deprecated Python module (Paul)
        - Code maintenance: add .gitignore files (Paul)
        - CellRendererPixbuf stock-size property has wrong type (Paul, #568499)
        - Add a doap file after git migration (Johan Dahlin)
        - missing dep on libffi in pygobject-2.0.pc (Götz Waschk, #550231)
        - g_volume_monitor_tp_new new function, return the singleton object.
          (Paul, #555613)
        - Remove a DeprecationWarning under python 2.6 (James Westby, #573753)
        - several scripts from codegen directory are not distributed
          (Krzesimir Nowak)
        - g_file_copy_async change argument order to keep it consistent with the
          other methods (Gian)
        - memory leak in gio.File.copy_async (Paul Pogonyshev, #578870)
        - g_file_monitor should accept None for cancellable and set the default
          flag to G_FILE_MONITOR_NONE (Gian)
        - pyg_notify_free needs to ensure it has GIL before calling Py_XDECREF
          (Jonathan Matthew)
        - Wrap g_file_set_display_name_async (Gian)
        - Add a semi-private method to return the option context C object from
          an option context wrapper (Tristan Hill)
        - Converting a negative long Python value to a GUINT64 GValue doesn't
          error out as it should (Gustavo J. A. M. Carneiro, #577999)
        - Wrap g_file_set_attributes_async and
          g_file_set_attributes_finish (Gian)
        - g_file_query_filesystem_info_async fix a typo (Gian)
        - Wrap g_file_query_filesystem_info_async (Gian)
        - Add missing g_file_query_filesystem_info_async and
	  g_file_query_filesystem_info_finish (Gian)
        - Wrap g_file_eject_mountable (Gian)
        - g_file_copy callback cannot be optional (Gian)
        - Swap various kwargs names to reflect the code (Gian)
        - Update the address of the FSF (Tobias Mueller, #577134)
        - Add g_volume_should_automount (Gian)
        - Wrap g_drive_enumerate_identifiers and g_volume_enumerate_identifiers
          (Gian)
	- Add a couple of convinence functions to convert from/to a python list
	  and an array of strings (Gian)
	- Allow setting pytype wrapper class (Mark Lee, John Ehresman, #559001)
	- Wrap g_file_enumerator_close_async (Gian Mario Tagliaretti)

2.16.1 22-feb-2009
        - Apply the patch provided by Cygwin Ports maintainer
          (Paul Pogonyshev, #564018)
        - Bad -I ordering can break build, patch from [dmacks netspace org]
          (Gian Mario Tagliaretti, #566737)
        - Fix keyword list to be in sync with positional arguments
          (Paul, #566744)
        - Add a comment explaining why the two for loops for registering
          interfaces (Gustavo Carneiro)
        - Huge cleanup of GIO overrides (Paul, #566706)
        - gtk.Buildable interface method override is not recognized
          (Paul, #566571)
        - Do not escape the ampersand "&" in entity references. Replace some
          unusual entity references in the output with their literal values.
          (Daniel Elstner, #568485)
        - gio.InputStream.read_async can cause memory corruption.
          (Paul, #567792)
        - Inconsistent use of tabs and spaces in pygtk.py (Paul, #569350)
        - Huge fix of memory leaks in GIO (Paul, Paolo Borelli, Gian, #568427)
        - non-async functions don't release python locks before calling
          blocking C functions (Gian, Gustavo, #556250)
        - Change comment to avoid false positives when grep'ing for deprecated
          gtk functions (Andre Klapper)
        - ltihooks.py updating license header from GPL to LGPL
          (James Henstridge)

2.16.0 04-jan-2009
        - gobject.timeout_add_seconds() not found in docs
          (Paul Pogonyshev, #547119)
        - _wrap_g_output_stream_write_async not adding a reference to the
          buffer passed (Paul, #564102)
        - gio.VolumeMonitor segfaults (Gian Mario Tagliaretti, #555613)
        - Test if `domain' is not-null before using it to avoids segfaults
          (Paul, #561826)
        - g_output_stream_write_all use gsize instead of gssize (Gian)
        - add __repr__ to gio.Drive, gio.Mount and gio.Volume
          (Paul, #530935)
        - Missing AC_CONFIG_MACRO_DIR([m4]) (Loïc Minier, #551227)
        - Make codegen not import when corresponding argument types are not
          registered (Paul, #551056)
        - Fix typos breaking compilation (Frederic Peters #551212)
        - GFile load_contents methods chop data at first \0
          (Jonathan Matthew, #551059) 

2.15.4 3-sep-2008
        - Fix typo in GPointer type registration (Loïc Minier,#550463)
        - support G_TYPE_CLOSURE in codegen (Gian)

2.15.3 31-aug-2008
        - Beginning of porting to 3.0. glib & gobject module ported.
        - Wrap g_app_info_* functions (Gian)
        - Wrap gio.FileAttributeInfo (Gian)
        - Wrap g_vfs_get_supported_uri_schemes (Johan, #545846)
        - Wrap g_file_info_get_modification_time (Johan, #545861)
        - Wrap gio.Volume.mount/eject (Johan)
        - Wrap gio.File.move (Johan)
        - Wrap gio.query_writable_namespaces (Gian, #545920)
        - Separate glib & gobject documentation
        - Wrap GFile.append_to_async (Gian, #545959)
        - Wrap GFile.create_async (Gian, #546020)
        - Change return value from 'gboolean' to 'int' and changed semantics
          to Pythonic (Paul, #544946)
        - Wrap GFile.replace_async and query_info_async (Gian, #546046)
        - GIcon and implementations improvements (Paul, #546135)
        - Improve __repr__ and richcompare for gio classes (Paul)
        - Missing Py_INCREFs for some file async methods (Jonathan Matthew, #546734)
        - File.copy progress_callback does not work (Paul, #546591)
        - add File.replace_contents, replace_contents_async, replace_contents_finish.
          (Jonathan Matthew, #547067)
        - Add GFile.query_default_handler (Gian)
        - fix docstring line length (Jonathan Matthew, #547134)
        - improve runtime type wrapper creation (Paul, #547104)
        - make gio.File more Pythonic (Paul, #546120)
        - No TypeError raised when type is None (Paul, #540376)
        - wrap a few memory stream methods (Paul, #547354)
        - wrap gio.DataInputStream.read_line and ...read_until (Paul, #547484)
        - wrap four important asynchronous methods in gio.Drive and gio.Mount
          (Paul, #547495)
        - gio.InputStream.read() looks broken (Paul, #547494)
        - wrap g_content_types_get_registered() (Paul, #547088)
        - cannot create new threads when pygtk is used (Paul, #547633)
        - an unitialized variable in PyGLib (Paul, #549351)
        - Constructor of gtk.TreeView raises TypeError when model is None
          (Paul, #549191)
        - Fix memory problems reported by valgrind due to invalid tp_basicsize in
          PyGPropsDescr_Type. (Gustavo, #549945)

2.15.2 26-jul-2008
        - New module: glib, which contains the parts of the old
          gobject bindings which are in the glib library.
          MainLoop/MainContext/Sources/GOption and a few others has now moved.
        - Add a new installed library libpyglib-2.0, which contains the extension
          API for third-part modules instead of relying on macros which accesses
          struct fields.
        - Add bindings for gio.File.enumerate_children_async,
          gio.FileEnumerator.next_files_async, gio.Mount.mount,
          gio.File.mount_mountable, gio.File.mount_enclosing_volume,
          gio.File.unmount_mountable, gio.File.copy.
        - Add a new api for mapping a GError domain to an exception and register
          an exception for GIOError.
        - Remove leading IO_* prefix for the gio flags and register a quark
          for the domain.
        - Use GSlice in the glib module and bump required version to 2.14.

2.15.1 15-jul-2008
        - Rename pygtk-codegen-2.0 to pygobject-codegen-2.0 to avoid
          conflicting with PyGTK (Paul Pogonyshev)

2.15.0 15-jul-2008
        - Add GIO bindings (Johan, Mario Tagliaretti, Thomas Leonard)
	- Move codegen from PyGTK (Johan, Paul Pogonyshev, #542821)
	- Add more variables to the .pc files (Damien Carbery, Paul, 
          Dan Winship, #486876)
	- Add pyg_option_group_new to the public API (Johan)
	- Add g_get_application_anme and g_get_progname (Sebastian Rittau)
	- Avoid making wakeups when using Python 2.6 (Johan, Gustavo,
	  Adam Olsen, Josselin Mouette, Philippe Normand, Guido Van Rossum)
	- Only link against libffi when found (Ed Catmur, #496006)
	- Improve gobject.property (Tomeu Vizoso, #523352)
	- Improve enum comparision and warnings (Paul, Phil Dumont, #428732)
	- Many gobject.Source improvements (Bryan Silverthorn)
	- Apply some fixes to make pylint happier (Johan, Simon Schampijer,
	  #523821)
	- Fix error message in pyg_io_add_watch (Juha Sahkangas)
	- Improve h2def.py (Oliver Crete, Murray Cumming, Lauro Moura)

2.14.0 16-sep-2007
	- Fix a Python 2.6 deprecation warning (Johannes Hölzl, #342948)
	- Wrap g_timeout_add_seconds, when compiling with glib 2.14 (Gustavo)
	- Always fully initialize the PyGObject (Ed Catmur, #466082)
	- Fix compilation in Solaris, again (#339924, Gustavo)
	- Fix check for default value in boolean type (Marco Giusti, #470230)
	- Fix new style properties with subclasses (Johan Dahlin, #470718)
	- Docs generation fixes (John Finlay)

2.13.2 07-jul-2007
	- Fix build on opensolaris (Damien Carbery, #339924)
	- Proxy GOption exceptions from Python to C (Johannes Hölzl, #342948)
	- Support G_TYPE_VALUE boxed args/signals
	 (Ed Catmur, Carlos Martin, #351072)
	- pyg_error_exception_check bug fix (Sebastian Granjoux, #449879)
	- Toggle references bug fix (#447271, Gustavo Carneiro)
	- use python-config to get python includes (#448173, Sebastien Bacher)
	- Support GObject properties in new properties API (Gustavo)
	- generate-constants fixes (Muntyan)
        - Allow running autogen.sh from outside $srcdir (Muntyan)

2.13.1 02-may-2007
        - Generic CClosure marshaller using libffi (Johan, #353816)
	- Uninstalled .pc file (Damien Carbery, #385129)
	- Fix leak in GFlags handling (Daniel Berrange, #428726)
	- Use dirname in autogen (Loïc Minier, #409234)
	- Treat None in a GValueArray as pointer/NULL (Ed Catmur, #352209)
	- Toggle reference bug fix in tp_setattro (Gustavo, #434659)
	- Add a simplified helper for creating properties (Johan, Gustavo, #338089)
	- Avoid throwing an exception in GValue converter (James Livingstone,
          Ed Catmur, #374653)
	- Build fix in .pc file (Luca Ferretti, #435132)

2.13.0 23-april-2007
        - Release the GIL in g_object_set_property (Edward Hervey, #395048)
        - Break PyGObject<->GObject reference cycle (Gustavo Carneiro, #320428)
        - use static inline functions for init_pygobject (Gustavo, #419379)
        - Wrap g_set_application_name, g_set_prgname
          (Havoc Pennington, #415853)
        - New pyg_gerror_exception_check API (Gustavo, #425242)
        - New API to get/set multiple properties
          (Gian Mario Tagliaretti, #403212)
        - Misc. bug fixes.

2.12.3 18-november-2006
       - distutils build fixes (Cedric)
       - documentation updates (John)
       - gobject.handler_block_by_func and friends now accept methods 
         (Johan, Dima, #375589)
       - avoid truncating of gparamspec (Yevgen Muntyan, #353943)
       - set __module__ on gobject derived types (Johan, 
         Osmo Salomaa, #376099)
       - Ensure exceptions are raised on errors in gobject.OptionGroup
       	 (Johan, Laszlo Pandy, #364576

2.12.2 3-october-2006
       - Make PyGObject 64-bit safe for Python 2.5 (Gustavo)
       - All headers are now LGPL and not GPL (Johan)
       - Remove a couple of GCC warnings (Gustavo)
       - Revive distutils support (Cedric Gustin)
       - Emission hook reference count bugfix (Gustavo)
       - MSVC/ANSI C compilation fix (John Ehresman)
       - Bump Ctrl-C timeout handler from 100ms to 1000 (Johan)

2.12.1 4-september-2006
       - Corrected version check (Sebastian Dröge, #354364)

2.12.0 4-september-2006
      - Install the html files even when using --disable-docs (#353159, Johan,
        Matthias Clasen)

2.11.4 27-august-2006
      - Include pre-generated html docs in the tarball  (Johan)
      - Fix bug in do_set_property called from constructor (Gustavo, #353039)
      - Fix type registration involving interfaces with signals and/or
        properties (Gustavo)

2.11.3 21-august-2006
      - Documentation updates (John)
      - Documentation build fixes (Johan, John, Gian Mario Tagliaretti)
      - PyGObject can now be compiled using a C++ compiler (Murray Cumming)
      - Type registration bug fix (Gustavo)

2.11.2 8-august-2006
      - Add fixxref.py from PyGTK (Johan)
      - Fix parallel build (#350225, Ed Catmur)

2.11.1 4-august-2006
      - Add John Finlay's reference manual (Johan, John)
      - Fix GOption mem leak (Gustavo)
      - Infrastructure for lazy type registration (Johan)
      - Enum/Flags fixes (Gustavo, John)
      - Eliminate some GCC warnings (Johan)

2.11.0 12-july-2006
      - Add GOption support (#163645, Johannes Hölzl)
      - GObject metaclass converted to Python code (Gustavo)
      - Register GType constants from Python-land (Johan)
      - Distutils updates (John Ehresman, Cedric Gustin)
      - Add support for signal emission hooks (#154845, Johan)
      - g_spawn_close_pid support (Gustavo)
      - Add new APIs do add or disable log redirections (Muntyan, #323786)
      - "sub-sub-type" bug fixed (Gustavo)
      - Coverity report code fixes (Johan)
      - Support retrieving signal and property info from interfaces (Finlay)
      - Support parameters of type G_TYPE_GSTRING in signals (Gustavo)
      - Wrap a few g_filename_* APIs (Gustavo)

2.10.1 11-april-2006
      - uint64 property bug fix (Andy Wingo)
      - Hard code path to 2.0 (Gustavo)
      - Allow only tuples and lists in strv to value (Gustavo)
      - Include dsextras.py in the dist (Johan)

2.10.0 13-march-2006
      - enum/leak fix (Michael Smith)

2.9.0 16-january-2006
      - Signal accumulator support (Gustavo)
      - GObject doc string generation improvements (Gustavo)
      - Discover GInterfaces in runtime (Gustavo)
      - Warn if return value in iowatch callback is not bool (Gustavo)
      - Convert string arrays properly (Christopher Aillon)

2.8.0 9-january-2006
      - Initial release, split of from PyGTK.
      - Updates for Python 2.5's richcompare (Manish Yosh)
      - PyFlags bug fixes (Gustavo)
      - Fix leak in pygobject_new_with_interfaces (Johan)
      - Undeprecate gobject.type_register (Johan)
