/*
 *   tests/medit.c.in
 *
 *   Copyright (C) 2004-2005 by Yevgen Muntyan <muntyan@math.tamu.edu>
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   See COPYING file that comes with this distribution.
 */

#include "mooui/moouiobject.h"
#include "mooedit/mooeditor.h"
#include "editor-ui.h"


static void init_actions (void);

int main (int argc, char **argv)
{
    char *rcfile;
    MooEditor *editor;
    MooEditLangMgr *mgr;
    MooEditWindow *win;
    MooUIXML *xml;

    gtk_init (&argc, &argv);

    init_actions ();

    rcfile = g_build_filename (g_get_home_dir (), ".meditrc", NULL);
    moo_prefs_load (rcfile);

    editor = moo_editor_new ();
    mgr = moo_editor_get_lang_mgr (editor);
    moo_edit_lang_mgr_add_lang_files_dir (mgr, "/usr/share/gtksourceview-1.0/language-specs");
    moo_edit_lang_mgr_add_lang_files_dir (mgr, "@MOO_EDIT_LANG_FILES_DIR@");

    g_signal_connect (editor, "all-windows-closed", G_CALLBACK (gtk_main_quit), NULL);

    xml = moo_editor_get_ui_xml (editor);
    if (!moo_ui_xml_add_ui_from_string (xml, MEDIT_UI, -1, NULL))
        g_error ("%s", G_STRLOC);

    win = moo_editor_new_window (editor);

    if (argc > 1)
        moo_editor_open_file (editor, win, NULL,
                              argv[1], NULL);

    gtk_main ();

    moo_prefs_save (rcfile);

    g_object_unref (editor);
    g_free (rcfile);

    return 0;
}


static void init_actions (void)
{
    GObjectClass *klass = g_type_class_ref (MOO_TYPE_EDIT_WINDOW);

    g_return_if_fail (klass != NULL);

    moo_ui_object_class_new_action (klass,
                                    "id", "SendToTerminal",
                                    "dead", TRUE,
                                    NULL);
    moo_ui_object_class_new_action (klass,
                                    "id", "Terminal",
                                    "dead", TRUE,
                                    NULL);
    moo_ui_object_class_new_action (klass,
                                    "id", "PythonMenu",
                                    "dead", TRUE,
                                    NULL);
    moo_ui_object_class_new_action (klass,
                                    "id", "Preferences",
                                    "dead", TRUE,
                                    NULL);
    moo_ui_object_class_new_action (klass,
                                    "id", "About",
                                    "dead", TRUE,
                                    NULL);
    moo_ui_object_class_new_action (klass,
                                    "id", "Quit",
                                    "dead", TRUE,
                                    NULL);

    g_type_class_unref (klass);
}
