diff --git a/jhbuild/config.py b/jhbuild/config.py
index 4ab415b..fff392f 100644
--- a/jhbuild/config.py
+++ b/jhbuild/config.py
@@ -291,14 +291,11 @@ class Config:
             except:
                 raise FatalError(_('install prefix (%s) can not be created') % self.prefix)
 
-        os.environ['UNMANGLED_LD_LIBRARY_PATH'] = os.environ.get('LD_LIBRARY_PATH', '')
-
         # LD_LIBRARY_PATH
         if self.use_lib64:
             libdir = os.path.join(self.prefix, 'lib64')
         else:
             libdir = os.path.join(self.prefix, 'lib')
-        addpath('LD_LIBRARY_PATH', libdir)
 
         # LDFLAGS and C_INCLUDE_PATH are required for autoconf configure
         # scripts to find modules that do not use pkg-config (such as guile
@@ -319,40 +316,22 @@ class Config:
 
         # PATH
         bindir = os.path.join(self.prefix, 'bin')
-        addpath('PATH', bindir)
 
         # MANPATH
         manpathdir = os.path.join(self.prefix, 'share', 'man')
-        addpath('MANPATH', '')
-        addpath('MANPATH', manpathdir)
 
         # PKG_CONFIG_PATH
-        if os.environ.get('PKG_CONFIG_PATH') is None:
-            # add system pkgconfig lookup-directories by default, as pkg-config
-            # usage spread and is now used by libraries that are out of jhbuild
-            # realm; this also helps when building a single module with
-            # jhbuild.  It is possible to avoid this by setting PKG_CONFIG_PATH
-            # to the empty string.
-            for dirname in ('share', 'lib', 'lib64'):
-                full_name = '/usr/%s/pkgconfig' % dirname
-                if os.path.exists(full_name):
-                    addpath('PKG_CONFIG_PATH', full_name)
         pkgconfigdatadir = os.path.join(self.prefix, 'share', 'pkgconfig')
         pkgconfigdir = os.path.join(libdir, 'pkgconfig')
-        addpath('PKG_CONFIG_PATH', pkgconfigdatadir)
-        addpath('PKG_CONFIG_PATH', pkgconfigdir)
 
         # XDG_DATA_DIRS
         xdgdatadir = os.path.join(self.prefix, 'share')
-        addpath('XDG_DATA_DIRS', xdgdatadir)
 
         # XDG_CONFIG_DIRS
         xdgconfigdir = os.path.join(self.prefix, 'etc', 'xdg')
-        addpath('XDG_CONFIG_DIRS', xdgconfigdir)
 
         # XCURSOR_PATH
         xcursordir = os.path.join(self.prefix, 'share', 'icons')
-        addpath('XCURSOR_PATH', xcursordir)
 
         # ACLOCAL_FLAGS
         aclocaldir = os.path.join(self.prefix, 'share', 'aclocal')
