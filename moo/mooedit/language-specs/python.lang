<?xml version="1.0" encoding="UTF-8"?>
<language id="python" _name="Python" version="2.0" _section="Scripts"
          mimetypes="text/x-python;application/x-python" globs="*.py">

  <styles>
    <style id="special-variables" _name="Special Variables" map-to="def:data-type"/>
    <style id="module-handler" _name="Module handler" map-to="def:character"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="function" _name="Function" map-to="def:keyword"/>
    <style id="builtins" _name="Builtins"/>
    <style id="multiline-string" _name="Multiline string" map-to="def:string"/>
    <style id="string" _name="String" map-to="def:string"/>
  </styles>

  <definitions>
    <context id="string-common">
      <include>
        <context ref="def:escape"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="multiline-double-quoted-string" style-ref="multiline-string">
      <start>\"\"\"</start>
      <end>\"\"\"</end>
        <include>
          <context ref="string-common"/>
        </include>
    </context>

    <context id="multiline-single-quoted-string" style-ref="multiline-string">
      <start>\'\'\'</start>
      <end>\'\'\'</end>
        <include>
          <context ref="string-common"/>
        </include>
    </context>

    <context id="double-quoted-string" style-ref="string" end-at-line-end="true">
      <start>\"</start>
      <end>\"</end>
        <include>
          <context ref="string-common"/>
        </include>
    </context>

    <context id="single-quoted-string" style-ref="string" end-at-line-end="true">
      <start>\'</start>
      <end>\'</end>
        <include>
          <context ref="string-common"/>
        </include>
    </context>

    <context id="python">
      <include>
        <context ref="def:shebang"/>
        <context ref="def:shell-like-comment"/>
        <context ref="def:line-continue"/>
        <context ref="multiline-double-quoted-string"/>
        <context ref="multiline-single-quoted-string"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>

	<context id="special-variables" style-ref="special-variables">
          <keyword>self</keyword>
          <keyword>False</keyword>
          <keyword>None</keyword>
          <keyword>True</keyword>
          <keyword>__name__</keyword>
          <keyword>__debug__</keyword>
	</context>

        <context ref="def:float"/>
        <context ref="def:decimal"/>
        <context ref="def:octal"/>
        <context ref="def:hexadecimal"/>

        <context id="module-handler" style-ref="module-handler">
          <keyword>import</keyword>
          <keyword>from</keyword>
          <keyword>as</keyword>
        </context>

        <context id="function" style-ref="function">
          <keyword>def</keyword>
          <keyword>class</keyword>
          <keyword>return</keyword>
        </context>

        <context id="keyword" style-ref="keyword">
          <keyword>and</keyword>
          <keyword>assert</keyword>
          <keyword>break</keyword>
          <keyword>continue</keyword>
          <keyword>del</keyword>
          <keyword>elif</keyword>
          <keyword>else</keyword>
          <keyword>except</keyword>
          <keyword>exec</keyword>
          <keyword>finally</keyword>
          <keyword>for</keyword>
          <keyword>global</keyword>
          <keyword>if</keyword>
          <keyword>in</keyword>
          <keyword>is</keyword>
          <keyword>lambda</keyword>
          <keyword>not</keyword>
          <keyword>or</keyword>
          <keyword>pass</keyword>
          <keyword>print</keyword>
          <keyword>raise</keyword>
          <keyword>try</keyword>
          <keyword>while</keyword>
          <keyword>yield</keyword>
        </context>

        <context id="builtins" style-ref="builtins">
          <keyword>ArithmeticError</keyword>
          <keyword>AssertionError</keyword>
          <keyword>AttributeError</keyword>
          <keyword>EnvironmentError</keyword>
          <keyword>EOFError</keyword>
          <keyword>Exception</keyword>
          <keyword>FloatingPointError</keyword>
          <keyword>ImportError</keyword>
          <keyword>IndentationError</keyword>
          <keyword>IndexError</keyword>
          <keyword>IOError</keyword>
          <keyword>KeyboardInterrupt</keyword>
          <keyword>KeyError</keyword>
          <keyword>LookupError</keyword>
          <keyword>MemoryError</keyword>
          <keyword>NameError</keyword>
          <keyword>NotImplementedError</keyword>
          <keyword>OSError</keyword>
          <keyword>OverflowError</keyword>
          <keyword>ReferenceError</keyword>
          <keyword>RuntimeError</keyword>
          <keyword>StandardError</keyword>
          <keyword>StopIteration</keyword>
          <keyword>SyntaxError</keyword>
          <keyword>SystemError</keyword>
          <keyword>SystemExit</keyword>
          <keyword>TabError</keyword>
          <keyword>TypeError</keyword>
          <keyword>UnboundLocalError</keyword>
          <keyword>UnicodeDecodeError</keyword>
          <keyword>UnicodeEncodeError</keyword>
          <keyword>UnicodeError</keyword>
          <keyword>UnicodeTranslateError</keyword>
          <keyword>ValueError</keyword>
          <keyword>WindowsError</keyword>
          <keyword>ZeroDivisionError</keyword>

          <keyword>Warning</keyword>
          <keyword>UserWarning</keyword>
          <keyword>DeprecationWarning</keyword>
          <keyword>PendingDeprecationWarning</keyword>
          <keyword>SyntaxWarning</keyword>
          <keyword>OverflowWarning</keyword>
          <keyword>RuntimeWarning</keyword>
          <keyword>FutureWarning</keyword>

          <keyword>__import__</keyword>
          <keyword>abs</keyword>
          <keyword>apply</keyword>
          <keyword>basestring</keyword>
          <keyword>bool</keyword>
          <keyword>buffer</keyword>
          <keyword>callable</keyword>
          <keyword>chr</keyword>
          <keyword>classmethod</keyword>
          <keyword>cmp</keyword>
          <keyword>coerce</keyword>
          <keyword>compile</keyword>
          <keyword>complex</keyword>
          <keyword>delattr</keyword>
          <keyword>dict</keyword>
          <keyword>dir</keyword>
          <keyword>divmod</keyword>
          <keyword>enumerate</keyword>
          <keyword>eval</keyword>
          <keyword>execfile</keyword>
          <keyword>file</keyword>
          <keyword>filter</keyword>
          <keyword>float</keyword>
          <keyword>getattr</keyword>
          <keyword>globals</keyword>
          <keyword>hasattr</keyword>
          <keyword>hash</keyword>
          <keyword>hex</keyword>
          <keyword>id</keyword>
          <keyword>input</keyword>
          <keyword>int</keyword>
          <keyword>intern</keyword>
          <keyword>isinstance</keyword>
          <keyword>issubclass</keyword>
          <keyword>iter</keyword>
          <keyword>len</keyword>
          <keyword>list</keyword>
          <keyword>locals</keyword>
          <keyword>long</keyword>
          <keyword>map</keyword>
          <keyword>max</keyword>
          <keyword>min</keyword>
          <keyword>object</keyword>
          <keyword>oct</keyword>
          <keyword>open</keyword>
          <keyword>ord</keyword>
          <keyword>pow</keyword>
          <keyword>property</keyword>
          <keyword>range</keyword>
          <keyword>raw_input</keyword>
          <keyword>reduce</keyword>
          <keyword>reload</keyword>
          <keyword>repr</keyword>
          <keyword>round</keyword>
          <keyword>setattr</keyword>
          <keyword>slice</keyword>
          <keyword>staticmethod</keyword>
          <keyword>str</keyword>
          <keyword>sum</keyword>
          <keyword>super</keyword>
          <keyword>tuple</keyword>
          <keyword>type</keyword>
          <keyword>unichr</keyword>
          <keyword>unicode</keyword>
          <keyword>vars</keyword>
          <keyword>xrange</keyword>
          <keyword>zip</keyword>
        </context>
      </include>
    </context>
  </definitions>

  <line-comment start="#"/>
</language>
