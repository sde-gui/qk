;; -*- scheme -*-

(define-object Canvas
  (in-module "Foo")
  (parent "GtkLayout")
  (c-name "FooCanvas")
  (gtype-id "FOO_TYPE_CANVAS")
)

(define-object Item
  (in-module "Foo")
  (parent "GtkObject")
  (c-name "FooCanvasItem")
  (gtype-id "FOO_TYPE_CANVAS_ITEM")
)

(define-object Group
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasGroup")
  (gtype-id "FOO_TYPE_CANVAS_GROUP")
)

(define-object Line
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasLine")
  (gtype-id "FOO_TYPE_CANVAS_LINE")
)

(define-object Pixbuf
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasPixbuf")
  (gtype-id "FOO_TYPE_CANVAS_PIXBUF")
)

(define-object Polygon
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasPolygon")
  (gtype-id "FOO_TYPE_CANVAS_POLYGON")
)

(define-object RE
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasRE")
  (gtype-id "FOO_TYPE_CANVAS_RE")
)

(define-object Ellipse
  (in-module "Foo")
  (parent "FooCanvasRE")
  (c-name "FooCanvasEllipse")
  (gtype-id "FOO_TYPE_CANVAS_ELLIPSE")
)

(define-object Rect
  (in-module "Foo")
  (parent "FooCanvasRE")
  (c-name "FooCanvasRect")
  (gtype-id "FOO_TYPE_CANVAS_RECT")
)

(define-object Text
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasText")
  (gtype-id "FOO_TYPE_CANVAS_TEXT")
)

(define-object Widget
  (in-module "Foo")
  (parent "FooCanvasItem")
  (c-name "FooCanvasWidget")
  (gtype-id "FOO_TYPE_CANVAS_WIDGET")
)

(define-boxed Points
  (in-module "Foo")
  (c-name "FooCanvasPoints")
  (gtype-id "FOO_TYPE_CANVAS_POINTS")
)

(define-flags ItemFlags
  (in-module "Foo")
  (c-name "FooCanvasItemFlags")
  (gtype-id "foo_canvas_item_flags_get_type ()")
)

(define-flags UpdateFlags
  (in-module "Foo")
  (c-name "FooCanvasUpdateFlags")
  (gtype-id "foo_canvas_update_flags_get_type ()")
)

;; From foo-canvas.h

; (define-function foo_canvas_item_new
;   (c-name "foo_canvas_item_new")
;   (is-constructor-of "FooCanvasItem")
;   (return-type "FooCanvasItem*")
;   (parameters
;     '("FooCanvasGroup*" "parent")
;     '("GType" "type")
;     '("const-gchar*" "first_arg_name")
;   )
;   (varargs #t)
; )

; (define-method construct
;   (of-object "FooCanvasItem")
;   (c-name "foo_canvas_item_construct")
;   (return-type "none")
;   (parameters
;     '("FooCanvasGroup*" "parent")
;     '("const-gchar*" "first_arg_name")
;     '("va_list" "args")
;   )
; )

; (define-method set
;   (of-object "FooCanvasItem")
;   (c-name "foo_canvas_item_set")
;   (return-type "none")
;   (parameters
;     '("const-gchar*" "first_arg_name")
;   )
;   (varargs #t)
; )

; (define-method set_valist
;   (of-object "FooCanvasItem")
;   (c-name "foo_canvas_item_set_valist")
;   (return-type "none")
;   (parameters
;     '("const-gchar*" "first_arg_name")
;     '("va_list" "args")
;   )
; )

(define-virtual update
  (of-object "FooCanvasItem")
  (return-type "none")
  (parameters
    '("double" "i2w_dx")
    '("double" "i2w_dy")
    '("FooCanvasUpdateFlags" "flags")
  )
)

(define-virtual realize
  (of-object "FooCanvasItem")
  (return-type "none")
)

(define-virtual unrealize
  (of-object "FooCanvasItem")
  (return-type "none")
)

(define-virtual map
  (of-object "FooCanvasItem")
  (return-type "none")
)

(define-virtual unmap
  (of-object "FooCanvasItem")
  (return-type "none")
)

(define-virtual draw
  (of-object "FooCanvasItem")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("GdkEventExpose*" "event")
  )
)

(define-virtual point
  (of-object "FooCanvasItem")
  (return-type "double")
  (parameters
    '("double" "x")
    '("double" "y")
    '("int" "cx")
    '("int" "cy")
    '("FooCanvasItem**" "actual_item" (direction "out"))
  )
)

(define-virtual translate
  (of-object "FooCanvasItem")
  (return-type "none")
  (parameters
    '("double" "dx")
    '("double" "dy")
  )
)

(define-virtual bounds
  (of-object "FooCanvasItem")
  (return-type "none")
  (parameters
    '("double*" "x1" (direction "out"))
    '("double*" "y1" (direction "out"))
    '("double*" "x2" (direction "out"))
    '("double*" "y2" (direction "out"))
  )
)

(define-virtual event
  (of-object "FooCanvasItem")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method move
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_move")
  (return-type "none")
  (parameters
    '("double" "dx")
    '("double" "dy")
  )
)

(define-method raise
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_raise")
  (return-type "none")
  (parameters
    '("int" "positions")
  )
)

(define-method lower
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_lower")
  (return-type "none")
  (parameters
    '("int" "positions")
  )
)

(define-method raise_to_top
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_raise_to_top")
  (return-type "none")
)

(define-method lower_to_bottom
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_lower_to_bottom")
  (return-type "none")
)

(define-method send_behind
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_send_behind")
  (return-type "none")
  (parameters
    '("FooCanvasItem*" "behind_item")
  )
)

(define-method show
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_show")
  (return-type "none")
)

(define-method hide
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_hide")
  (return-type "none")
)

(define-method grab
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_grab")
  (return-type "int")
  (parameters
    '("guint" "event_mask")
    '("GdkCursor*" "cursor")
    '("guint32" "etime")
  )
)

(define-method ungrab
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_ungrab")
  (return-type "none")
  (parameters
    '("guint32" "etime")
  )
)

(define-method w2i
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_w2i")
  (return-type "none")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method i2w
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_i2w")
  (return-type "none")
  (parameters
    '("double*" "x")
    '("double*" "y")
  )
)

(define-method reparent
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_reparent")
  (return-type "none")
  (parameters
    '("FooCanvasGroup*" "new_group")
  )
)

(define-method grab_focus
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_grab_focus")
  (return-type "none")
)

(define-method get_bounds
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_get_bounds")
  (return-type "none")
  (parameters
    '("double*" "x1")
    '("double*" "y1")
    '("double*" "x2")
    '("double*" "y2")
  )
)

(define-method request_update
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_request_update")
  (return-type "none")
)

(define-method request_redraw
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_request_redraw")
  (return-type "none")
)

(define-function foo_canvas_group_new
  (c-name "foo_canvas_group_new")
  (is-constructor-of "FooCanvasGroup")
  (return-type "FooCanvasGroup*")
  (properties
    '("parent")
    '("visible" (optional))
    '("x" (optional))
    '("y" (optional))
  )
)

(define-function foo_canvas_new
  (c-name "foo_canvas_new")
  (is-constructor-of "FooCanvas")
  (return-type "GtkWidget*")
)

(define-virtual draw_background
  (of-object "FooCanvas")
  (return-type "none")
  (parameters
    '("int" "x")
    '("int" "y")
    '("int" "width")
    '("int" "height")
  )
)

(define-method root
  (of-object "FooCanvas")
  (c-name "foo_canvas_root")
  (return-type "FooCanvasGroup*")
)

(define-method set_scroll_region
  (of-object "FooCanvas")
  (c-name "foo_canvas_set_scroll_region")
  (return-type "none")
  (parameters
    '("double" "x1")
    '("double" "y1")
    '("double" "x2")
    '("double" "y2")
  )
)

(define-method get_scroll_region
  (of-object "FooCanvas")
  (c-name "foo_canvas_get_scroll_region")
  (return-type "none")
  (parameters
    '("double*" "x1")
    '("double*" "y1")
    '("double*" "x2")
    '("double*" "y2")
  )
)

(define-method set_pixels_per_unit
  (of-object "FooCanvas")
  (c-name "foo_canvas_set_pixels_per_unit")
  (return-type "none")
  (parameters
    '("double" "n")
  )
)

(define-method set_center_scroll_region
  (of-object "FooCanvas")
  (c-name "foo_canvas_set_center_scroll_region")
  (return-type "none")
  (parameters
    '("gboolean" "center_scroll_region")
  )
)

(define-method scroll_to
  (of-object "FooCanvas")
  (c-name "foo_canvas_scroll_to")
  (return-type "none")
  (parameters
    '("int" "cx")
    '("int" "cy")
  )
)

(define-method get_scroll_offsets
  (of-object "FooCanvas")
  (c-name "foo_canvas_get_scroll_offsets")
  (return-type "none")
  (parameters
    '("int*" "cx")
    '("int*" "cy")
  )
)

(define-method update_now
  (of-object "FooCanvas")
  (c-name "foo_canvas_update_now")
  (return-type "none")
)

(define-method get_item_at
  (of-object "FooCanvas")
  (c-name "foo_canvas_get_item_at")
  (return-type "FooCanvasItem*")
  (parameters
    '("double" "x")
    '("double" "y")
  )
)

(define-method request_redraw
  (of-object "FooCanvas")
  (c-name "foo_canvas_request_redraw")
  (return-type "none")
  (parameters
    '("int" "x1")
    '("int" "y1")
    '("int" "x2")
    '("int" "y2")
  )
)

(define-method w2c_rect_d
  (of-object "FooCanvas")
  (c-name "foo_canvas_w2c_rect_d")
  (return-type "none")
  (parameters
    '("double*" "x1")
    '("double*" "y1")
    '("double*" "x2")
    '("double*" "y2")
  )
)

(define-method w2c
  (of-object "FooCanvas")
  (c-name "foo_canvas_w2c")
  (return-type "none")
  (parameters
    '("double" "wx")
    '("double" "wy")
    '("int*" "cx")
    '("int*" "cy")
  )
)

(define-method w2c_d
  (of-object "FooCanvas")
  (c-name "foo_canvas_w2c_d")
  (return-type "none")
  (parameters
    '("double" "wx")
    '("double" "wy")
    '("double*" "cx")
    '("double*" "cy")
  )
)

(define-method c2w
  (of-object "FooCanvas")
  (c-name "foo_canvas_c2w")
  (return-type "none")
  (parameters
    '("int" "cx")
    '("int" "cy")
    '("double*" "wx")
    '("double*" "wy")
  )
)

; (define-method window_to_world
;   (of-object "FooCanvas")
;   (c-name "foo_canvas_window_to_world")
;   (return-type "none")
;   (parameters
;     '("double" "winx")
;     '("double" "winy")
;     '("double*" "worldx")
;     '("double*" "worldy")
;   )
; )
;
; (define-method world_to_window
;   (of-object "FooCanvas")
;   (c-name "foo_canvas_world_to_window")
;   (return-type "none")
;   (parameters
;     '("double" "worldx")
;     '("double" "worldy")
;     '("double*" "winx")
;     '("double*" "winy")
;   )
; )

(define-method get_color
  (of-object "FooCanvas")
  (c-name "foo_canvas_get_color")
  (return-type "int")
  (parameters
    '("const-char*" "spec")
    '("GdkColor*" "color")
  )
)

(define-method get_color_pixel
  (of-object "FooCanvas")
  (c-name "foo_canvas_get_color_pixel")
  (return-type "gulong")
  (parameters
    '("guint" "rgba")
  )
)

(define-method set_stipple_origin
  (of-object "FooCanvas")
  (c-name "foo_canvas_set_stipple_origin")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
  )
)

;; From foo-canvas-line.h

(define-function foo_canvas_line_new
  (c-name "foo_canvas_line_new")
  (is-constructor-of "FooCanvasLine")
  (return-type "FooCanvasLine*")
  (properties
    '("parent")
    '("visible" (optional))
    '("points" (optional))
    '("fill_color" (optional))
    '("fill_color_gdk" (optional))
    '("fill_stipple" (optional))
    '("width_pixels" (optional))
    '("width_units" (optional))
    '("cap_style" (optional))
    '("join_style" (optional))
    '("line_style" (optional))
    '("first_arrowhead" (optional))
    '("last_arrowhead" (optional))
    '("smooth" (optional))
    '("spline_steps" (optional))
    '("arrow_shape_a" (optional))
    '("arrow_shape_b" (optional))
    '("arrow_shape_c" (optional))
  )
)

;; From foo-canvas-pixbuf.h

(define-function foo_canvas_pixbuf_new
  (c-name "foo_canvas_pixbuf_new")
  (is-constructor-of "FooCanvasPixbuf")
  (return-type "FooCanvasPixbuf*")
  (properties
    '("parent")
    '("visible" (optional))
    '("pixbuf" (optional))
    '("width" (optional))
    '("width_set" (optional))
    '("width_in_pixels" (optional))
    '("height" (optional))
    '("height_set" (optional))
    '("height_in_pixels" (optional))
    '("x" (optional))
    '("x_in_pixels" (optional))
    '("y" (optional))
    '("y_in_pixels" (optional))
    '("anchor" (optional))
    '("interp_type" (optional))
    '("point_ignores_alpha" (optional))
  )
)

;; From foo-canvas-polygon.h

(define-function foo_canvas_polygon_new
  (c-name "foo_canvas_polygon_new")
  (is-constructor-of "FooCanvasPolygon")
  (return-type "FooCanvasPolygon*")
  (properties
    '("parent")
    '("visible" (optional))
    '("points" (optional))
    '("fill_color" (optional))
    '("fill_color_gdk" (optional))
    '("outline_color" (optional))
    '("outline_color_gdk" (optional))
    '("fill_stipple" (optional))
    '("outline_stipple" (optional))
    '("width_pixels" (optional))
    '("width_units" (optional))
  )
)

;; From foo-canvas-rect-ellipse.h

(define-function foo_canvas_rect_new
  (c-name "foo_canvas_rect_new")
  (is-constructor-of "FooCanvasRect")
  (return-type "FooCanvasRect*")
  (properties
    '("parent")
    '("visible" (optional))
    '("x1" (optional))
    '("y1" (optional))
    '("x2" (optional))
    '("y2" (optional))
    '("fill_color" (optional))
    '("fill_color_gdk" (optional))
    '("outline_color" (optional))
    '("outline_color_gdk" (optional))
    '("fill_stipple" (optional))
    '("outline_stipple" (optional))
    '("width_pixels" (optional))
    '("width_units" (optional))
  )
)

(define-function foo_canvas_ellipse_new
  (c-name "foo_canvas_ellipse_new")
  (is-constructor-of "FooCanvasEllipse")
  (return-type "FooCanvasEllipse*")
  (properties
    '("parent")
    '("visible" (optional))
    '("x1" (optional))
    '("y1" (optional))
    '("x2" (optional))
    '("y2" (optional))
    '("fill_color" (optional))
    '("fill_color_gdk" (optional))
    '("outline_color" (optional))
    '("outline_color_gdk" (optional))
    '("fill_stipple" (optional))
    '("outline_stipple" (optional))
    '("width_pixels" (optional))
    '("width_units" (optional))
  )
)

;; From foo-canvas-text.h

(define-function foo_canvas_text_new
  (c-name "foo_canvas_text_new")
  (is-constructor-of "FooCanvasText")
  (return-type "FooCanvasText*")
  (properties
    '("parent")
    '("visible" (optional))
    '("text" (optional))
    '("markup" (optional))
    '("x" (optional))
    '("y" (optional))
    '("font" (optional))
    '("font_desc" (optional))
    '("attributes" (optional))
    '("style" (optional))
    '("variant" (optional))
    '("weight" (optional))
    '("stretch" (optional))
    '("size" (optional))
    '("size_points" (optional))
    '("scale" (optional))
    '("anchor" (optional))
    '("justification" (optional))
    '("clip_width" (optional))
    '("clip_height" (optional))
    '("clip" (optional))
    '("x_offset" (optional))
    '("y_offset" (optional))
    '("y_offset" (optional))
    '("y_offset" (optional))
    '("fill_color" (optional))
    '("fill_color_gdk" (optional))
    '("fill_color_rgba" (optional))
    '("fill_stipple" (optional))
  )
)

;; From foo-canvas-util.h

(define-function foo_canvas_points_new
  (c-name "foo_canvas_points_new")
  (is-constructor-of "FooCanvasPoints")
  (return-type "FooCanvasPoints*")
  (parameters
    '("int" "num_points")
  )
)

(define-function foo_canvas_get_miter_points
  (c-name "foo_canvas_get_miter_points")
  (return-type "int")
  (parameters
    '("double" "x1")
    '("double" "y1")
    '("double" "x2")
    '("double" "y2")
    '("double" "x3")
    '("double" "y3")
    '("double" "width")
    '("double*" "mx1")
    '("double*" "my1")
    '("double*" "mx2")
    '("double*" "my2")
  )
)

(define-function foo_canvas_get_butt_points
  (c-name "foo_canvas_get_butt_points")
  (return-type "none")
  (parameters
    '("double" "x1")
    '("double" "y1")
    '("double" "x2")
    '("double" "y2")
    '("double" "width")
    '("int" "project")
    '("double*" "bx1")
    '("double*" "by1")
    '("double*" "bx2")
    '("double*" "by2")
  )
)

(define-function foo_canvas_polygon_to_point
  (c-name "foo_canvas_polygon_to_point")
  (return-type "double")
  (parameters
    '("double*" "poly")
    '("int" "num_points")
    '("double" "x")
    '("double" "y")
  )
)

(define-method reset_bounds
  (of-object "FooCanvasItem")
  (c-name "foo_canvas_item_reset_bounds")
  (return-type "none")
)

(define-function foo_canvas_update_bbox
  (c-name "foo_canvas_update_bbox")
  (return-type "none")
  (parameters
    '("FooCanvasItem*" "item")
    '("int" "x1")
    '("int" "y1")
    '("int" "x2")
    '("int" "y2")
  )
)

;; From foo-canvas-widget.h

(define-function foo_canvas_widget_new
  (c-name "foo_canvas_widget_new")
  (is-constructor-of "FooCanvasWidget")
  (return-type "FooCanvasWidget*")
  (properties
    '("parent")
    '("visible" (optional))
    '("widget" (optional))
    '("x" (optional))
    '("y" (optional))
    '("width" (optional))
    '("height" (optional))
    '("anchor" (optional))
    '("size_pixels" (optional))
  )
)
