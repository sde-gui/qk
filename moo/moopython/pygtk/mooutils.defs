;; -*- scheme -*-
; object definitions ...

; (define-object AccelButton
;   (in-module "Moo")
;   (parent "GtkButton")
;   (c-name "MooAccelButton")
;   (gtype-id "MOO_TYPE_ACCEL_BUTTON")
; )

; (define-object Action
;   (in-module "Moo")
;   (parent "GtkAction")
;   (c-name "MooAction")
;   (gtype-id "MOO_TYPE_ACTION")
; )

; (define-object ActionBase
;   (in-module "Moo")
;   (c-name "MooActionBase")
;   (gtype-id "MOO_TYPE_ACTION_BASE")
; )

; (define-object ActionCollection
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooActionCollection")
;   (gtype-id "MOO_TYPE_ACTION_COLLECTION")
; )

; (define-object ActionFactory
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooActionFactory")
;   (gtype-id "MOO_TYPE_ACTION_FACTORY")
; )

; (define-object ActionGroup
;   (in-module "Moo")
;   (parent "GtkActionGroup")
;   (c-name "MooActionGroup")
;   (gtype-id "MOO_TYPE_ACTION_GROUP")
; )

(define-object BigPaned
  (in-module "Moo")
  (parent "GtkFrame")
  (c-name "MooBigPaned")
  (gtype-id "MOO_TYPE_BIG_PANED")
)

; (define-object BookmarkMgr
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooBookmarkMgr")
;   (gtype-id "MOO_TYPE_BOOKMARK_MGR")
; )

; (define-object BookmarkView
;   (in-module "Moo")
;   (parent "GtkTreeView")
;   (c-name "MooBookmarkView")
;   (gtype-id "MOO_TYPE_BOOKMARK_VIEW")
; )

; (define-object Cmd
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooCmd")
;   (gtype-id "MOO_TYPE_CMD")
; )

(define-object Combo
  (in-module "Moo")
  (parent "GtkTable")
  (c-name "MooCombo")
  (gtype-id "MOO_TYPE_COMBO")
)

(define-object Entry
  (in-module "Moo")
  (parent "GtkEntry")
  (c-name "MooEntry")
  (gtype-id "MOO_TYPE_ENTRY")
)

(define-object FileDialog
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooFileDialog")
  (gtype-id "MOO_TYPE_FILE_DIALOG")
)

; (define-object FileEntry
;   (in-module "Moo")
;   (parent "MooEntry")
;   (c-name "MooFileEntry")
;   (gtype-id "MOO_TYPE_FILE_ENTRY")
; )
;
; (define-object FileEntryCompletion
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooFileEntryCompletion")
;   (gtype-id "MOO_TYPE_FILE_ENTRY_COMPLETION")
; )

; (define-object FilePropsDialog
;   (in-module "Moo")
;   (parent "GtkDialog")
;   (c-name "MooFilePropsDialog")
;   (gtype-id "MOO_TYPE_FILE_PROPS_DIALOG")
; )

; (define-object FileSystem
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooFileSystem")
;   (gtype-id "MOO_TYPE_FILE_SYSTEM")
; )

; (define-object FileWriter
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooFileWriter")
;   (gtype-id "MOO_TYPE_FILE_WRITER")
; )

(define-object FilterMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooFilterMgr")
  (gtype-id "MOO_TYPE_FILTER_MGR")
)

; (define-object FolderFilter
;   (in-module "Moo")
;   (parent "GtkTreeModelFilter")
;   (c-name "MooFolderFilter")
;   (gtype-id "MOO_TYPE_FOLDER_FILTER")
; )
;
; (define-object FolderModel
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooFolderModel")
;   (gtype-id "MOO_TYPE_FOLDER_MODEL")
; )

(define-object FontButton
  (in-module "Moo")
  (parent "GtkButton")
  (c-name "MooFontButton")
  (gtype-id "MOO_TYPE_FONT_BUTTON")
)

(define-object FontSelection
  (in-module "Moo")
  (parent "GtkVBox")
  (c-name "MooFontSelection")
  (gtype-id "MOO_TYPE_FONT_SELECTION")
)

(define-object FontSelectionDialog
  (in-module "Moo")
  (parent "GtkDialog")
  (c-name "MooFontSelectionDialog")
  (gtype-id "MOO_TYPE_FONT_SELECTION_DIALOG")
)

(define-object GladeXML
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooGladeXML")
  (gtype-id "MOO_TYPE_GLADE_XML")
)

(define-object HistoryCombo
  (in-module "Moo")
  (parent "MooCombo")
  (c-name "MooHistoryCombo")
  (gtype-id "MOO_TYPE_HISTORY_COMBO")
)

(define-object HistoryList
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooHistoryList")
  (gtype-id "MOO_TYPE_HISTORY_LIST")
)

(define-object HistoryMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooHistoryMgr")
  (gtype-id "MOO_TYPE_HISTORY_MGR")
)

; (define-object IconView
;   (in-module "Moo")
;   (parent "GtkVBox")
;   (c-name "MooIconView")
;   (gtype-id "MOO_TYPE_ICON_VIEW")
; )

(define-object LineView
  (in-module "Moo")
  (parent "MooTextView")
  (c-name "MooLineView")
  (gtype-id "MOO_TYPE_LINE_VIEW")
)

(define-object CmdView
  (in-module "Moo")
  (parent "MooLineView")
  (c-name "MooCmdView")
  (gtype-id "MOO_TYPE_CMD_VIEW")
)

; (define-object Menu
;   (in-module "Moo")
;   (parent "GtkMenu")
;   (c-name "MooMenu")
;   (gtype-id "MOO_TYPE_MENU")
; )

; (define-object MenuAction
;   (in-module "Moo")
;   (parent "MooAction")
;   (c-name "MooMenuAction")
;   (gtype-id "MOO_TYPE_MENU_ACTION")
; )

; (define-object MenuMgr
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooMenuMgr")
;   (gtype-id "MOO_TYPE_MENU_MGR")
; )

; (define-object MenuToolButton
;   (in-module "Moo")
;   (parent "GtkToggleToolButton")
;   (c-name "MooMenuToolButton")
;   (gtype-id "MOO_TYPE_MENU_TOOL_BUTTON")
; )

; (define-object Notebook
;   (in-module "Moo")
;   (parent "GtkNotebook")
;   (c-name "MooNotebook")
;   (gtype-id "MOO_TYPE_NOTEBOOK")
; )

(define-object OutputFilter
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooOutputFilter")
  (gtype-id "MOO_TYPE_OUTPUT_FILTER")
)

(define-object Paned
  (in-module "Moo")
  (parent "GtkBin")
  (c-name "MooPaned")
  (gtype-id "MOO_TYPE_PANED")
)

(define-object PrefsDialog
  (in-module "Moo")
  (parent "GtkDialog")
  (c-name "MooPrefsDialog")
  (gtype-id "MOO_TYPE_PREFS_DIALOG")
)

(define-object PrefsPage
  (in-module "Moo")
  (parent "GtkVBox")
  (c-name "MooPrefsPage")
  (gtype-id "MOO_TYPE_PREFS_PAGE")
)

; (define-object RadioAction
;   (in-module "Moo")
;   (parent "GtkRadioAction")
;   (c-name "MooRadioAction")
;   (gtype-id "MOO_TYPE_RADIO_ACTION")
; )
;
; (define-object ToggleAction
;   (in-module "Moo")
;   (parent "GtkToggleAction")
;   (c-name "MooToggleAction")
;   (gtype-id "MOO_TYPE_TOGGLE_ACTION")
; )

; (define-object TreeHelper
;   (in-module "Moo")
;   (parent "GtkObject")
;   (c-name "MooTreeHelper")
;   (gtype-id "MOO_TYPE_TREE_HELPER")
; )

; (define-object TreeView
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooTreeView")
;   (gtype-id "MOO_TYPE_TREE_VIEW")
; )

(define-object UiXml
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooUiXml")
  (gtype-id "MOO_TYPE_UI_XML")
)

; (define-object UndoStack
;   (in-module "Moo")
;   (parent "GObject")
;   (c-name "MooUndoStack")
;   (gtype-id "MOO_TYPE_UNDO_STACK")
; )

(define-object Window
  (in-module "Moo")
  (parent "GtkWindow")
  (c-name "MooWindow")
  (gtype-id "MOO_TYPE_WINDOW")
)

;; Enumerations and flags ...

; (define-enum BookmarkMgrModelColumn
;   (in-module "Moo")
;   (c-name "MooBookmarkMgrModelColumn")
;   (gtype-id "MOO_TYPE_BOOKMARK_MGR_MODEL_COLUMN")
;   (values
;     '("column-bookmark" "MOO_BOOKMARK_MGR_COLUMN_BOOKMARK")
;     '("num-columns" "MOO_BOOKMARK_MGR_NUM_COLUMNS")
;   )
; )

; (define-flags FileFlags
;   (in-module "Moo")
;   (c-name "MooFileFlags")
;   (gtype-id "MOO_TYPE_FILE_FLAGS")
;   (values
;     '("has-stat" "MOO_FILE_HAS_STAT")
;     '("has-mime-type" "MOO_FILE_HAS_MIME_TYPE")
;     '("has-icon" "MOO_FILE_HAS_ICON")
;     '("all-flags" "MOO_FILE_ALL_FLAGS")
;   )
; )
;
; (define-flags FileInfo
;   (in-module "Moo")
;   (c-name "MooFileInfo")
;   (gtype-id "MOO_TYPE_FILE_INFO")
;   (values
;     '("exists" "MOO_FILE_INFO_EXISTS")
;     '("is-dir" "MOO_FILE_INFO_IS_DIR")
;     '("is-hidden" "MOO_FILE_INFO_IS_HIDDEN")
;     '("is-link" "MOO_FILE_INFO_IS_LINK")
;     '("is-block-dev" "MOO_FILE_INFO_IS_BLOCK_DEV")
;     '("is-char-dev" "MOO_FILE_INFO_IS_CHAR_DEV")
;     '("is-fifo" "MOO_FILE_INFO_IS_FIFO")
;     '("is-socket" "MOO_FILE_INFO_IS_SOCKET")
;     '("is-locked" "MOO_FILE_INFO_IS_LOCKED")
;   )
; )

; (define-flags DeleteFileFlags
;   (in-module "Moo")
;   (c-name "MooDeleteFileFlags")
;   (gtype-id "MOO_TYPE_DELETE_FILE_FLAGS")
;   (values
;     '("recursive" "MOO_DELETE_RECURSIVE")
;     '("to-trash" "MOO_DELETE_TO_TRASH")
;   )
; )

; (define-enum FolderModelColumn
;   (in-module "Moo")
;   (c-name "MooFolderModelColumn")
;   (gtype-id "MOO_TYPE_FOLDER_MODEL_COLUMN")
;   (values
;     '("file" "MOO_FOLDER_MODEL_COLUMN_FILE")
;   )
; )
;
; (define-flags FolderModelSortFlags
;   (in-module "Moo")
;   (c-name "MooFolderModelSortFlags")
;   (gtype-id "MOO_TYPE_FOLDER_MODEL_SORT_FLAGS")
;   (values
;     '("case-sensitive" "MOO_FOLDER_MODEL_SORT_CASE_SENSITIVE")
;     '("folders-first" "MOO_FOLDER_MODEL_SORT_FOLDERS_FIRST")
;     '("flags-default" "MOO_FOLDER_MODEL_SORT_FLAGS_DEFAULT")
;   )
; )

; (define-enum IconViewCell
;   (in-module "Moo")
;   (c-name "MooIconViewCell")
;   (gtype-id "MOO_TYPE_ICON_VIEW_CELL")
;   (values
;     '("pixbuf" "MOO_ICON_VIEW_CELL_PIXBUF")
;     '("text" "MOO_ICON_VIEW_CELL_TEXT")
;   )
; )

; (define-enum TreeViewChildType
;   (in-module "Moo")
;   (c-name "MooTreeViewChildType")
;   (gtype-id "MOO_TYPE_TREE_VIEW_CHILD_TYPE")
;   (values
;     '("tree" "MOO_TREE_VIEW_TREE")
;     '("icon" "MOO_TREE_VIEW_ICON")
;   )
; )

(define-enum SaveChangesDialogResponse
  (in-module "Moo")
  (c-name "MooSaveChangesDialogResponse")
  (gtype-id "MOO_TYPE_SAVE_CHANGES_DIALOG_RESPONSE")
  (values
    '("cancel" "MOO_SAVE_CHANGES_RESPONSE_CANCEL")
    '("save" "MOO_SAVE_CHANGES_RESPONSE_SAVE")
    '("dont-save" "MOO_SAVE_CHANGES_RESPONSE_DONT_SAVE")
  )
)

; (define-enum EditOpType
;   (in-module "Moo")
;   (c-name "MooEditOpType")
;   (gtype-id "MOO_TYPE_EDIT_OP_TYPE")
;   (values
;     '("cut" "MOO_EDIT_OP_CUT")
;     '("copy" "MOO_EDIT_OP_COPY")
;     '("paste" "MOO_EDIT_OP_PASTE")
;     '("delete" "MOO_EDIT_OP_DELETE")
;     '("select-all" "MOO_EDIT_OP_SELECT_ALL")
;   )
; )

; (define-enum EncodingComboType
;   (in-module "Moo")
;   (c-name "MooEncodingComboType")
;   (gtype-id "MOO_TYPE_ENCODING_COMBO_TYPE")
;   (values
;     '("open" "MOO_ENCODING_COMBO_OPEN")
;     '("save" "MOO_ENCODING_COMBO_SAVE")
;   )
; )

(define-enum FileDialogType
  (in-module "Moo")
  (c-name "MooFileDialogType")
  (gtype-id "MOO_TYPE_FILE_DIALOG_TYPE")
  (values
    '("open" "MOO_FILE_DIALOG_OPEN")
    '("open-any" "MOO_FILE_DIALOG_OPEN_ANY")
    '("save" "MOO_FILE_DIALOG_SAVE")
    '("open-dir" "MOO_FILE_DIALOG_OPEN_DIR")
  )
)

; (define-flags IconEmblem
;   (in-module "Moo")
;   (c-name "MooIconEmblem")
;   (gtype-id "MOO_TYPE_ICON_EMBLEM")
;   (values
;     '("link" "MOO_ICON_EMBLEM_LINK")
;   )
; )

; (define-enum IconType
;   (in-module "Moo")
;   (c-name "MooIconType")
;   (gtype-id "MOO_TYPE_ICON_TYPE")
;   (values
;     '("mime" "MOO_ICON_MIME")
;     '("home" "MOO_ICON_HOME")
;     '("desktop" "MOO_ICON_DESKTOP")
;     '("trash" "MOO_ICON_TRASH")
;     '("directory" "MOO_ICON_DIRECTORY")
;     '("broken-link" "MOO_ICON_BROKEN_LINK")
;     '("nonexistent" "MOO_ICON_NONEXISTENT")
;     '("block-device" "MOO_ICON_BLOCK_DEVICE")
;     '("character-device" "MOO_ICON_CHARACTER_DEVICE")
;     '("fifo" "MOO_ICON_FIFO")
;     '("socket" "MOO_ICON_SOCKET")
;     '("file" "MOO_ICON_FILE")
;     '("blank" "MOO_ICON_BLANK")
;     '("invalid" "MOO_ICON_INVALID")
;   )
; )

; (define-enum FileEventCode
;   (in-module "Moo")
;   (c-name "MooFileEventCode")
;   (gtype-id "MOO_TYPE_FILE_EVENT_CODE")
;   (values
;     '("changed" "MOO_FILE_EVENT_CHANGED")
;     '("created" "MOO_FILE_EVENT_CREATED")
;     '("deleted" "MOO_FILE_EVENT_DELETED")
;     '("error" "MOO_FILE_EVENT_ERROR")
;   )
; )

; (define-flags FileWriterFlags
;   (in-module "Moo")
;   (c-name "MooFileWriterFlags")
;   (gtype-id "MOO_TYPE_FILE_WRITER_FLAGS")
;   (values
;     '("save-backup" "MOO_FILE_WRITER_SAVE_BACKUP")
;     '("config-mode" "MOO_FILE_WRITER_CONFIG_MODE")
;     '("text-mode" "MOO_FILE_WRITER_TEXT_MODE")
;   )
; )

; (define-enum MarkupNodeType
;   (in-module "Moo")
;   (c-name "MooMarkupNodeType")
;   (gtype-id "MOO_TYPE_MARKUP_NODE_TYPE")
;   (values
;     '("doc-node" "MOO_MARKUP_DOC_NODE")
;     '("element-node" "MOO_MARKUP_ELEMENT_NODE")
;     '("text-node" "MOO_MARKUP_TEXT_NODE")
;     '("comment-node" "MOO_MARKUP_COMMENT_NODE")
;   )
; )

; (define-flags MenuItemFlags
;   (in-module "Moo")
;   (c-name "MooMenuItemFlags")
;   (gtype-id "MOO_TYPE_MENU_ITEM_FLAGS")
;   (values
;     '("toggle" "MOO_MENU_ITEM_TOGGLE")
;     '("radio" "MOO_MENU_ITEM_RADIO")
;     '("activatable" "MOO_MENU_ITEM_ACTIVATABLE")
;     '("separator" "MOO_MENU_ITEM_SEPARATOR")
;     '("use-mnemonic" "MOO_MENU_ITEM_USE_MNEMONIC")
;     '("dont-use-mnemonic" "MOO_MENU_ITEM_DONT_USE_MNEMONIC")
;   )
; )

(define-enum PanePosition
  (in-module "Moo")
  (c-name "MooPanePosition")
  (gtype-id "MOO_TYPE_PANE_POSITION")
  (values
    '("left" "MOO_PANE_POS_LEFT")
    '("right" "MOO_PANE_POS_RIGHT")
    '("top" "MOO_PANE_POS_TOP")
    '("bottom" "MOO_PANE_POS_BOTTOM")
  )
)

; (define-enum SmallIcon
;   (in-module "Moo")
;   (c-name "MooSmallIcon")
;   (gtype-id "MOO_TYPE_SMALL_ICON")
;   (values
;     '("hide" "MOO_SMALL_ICON_HIDE")
;     '("sticky" "MOO_SMALL_ICON_STICKY")
;     '("close" "MOO_SMALL_ICON_CLOSE")
;     '("detach" "MOO_SMALL_ICON_DETACH")
;     '("attach" "MOO_SMALL_ICON_ATTACH")
;     '("keep-on-top" "MOO_SMALL_ICON_KEEP_ON_TOP")
;   )
; )

(define-enum PrefsKind
  (in-module "Moo")
  (c-name "MooPrefsKind")
  (gtype-id "MOO_TYPE_PREFS_KIND")
  (values
    '("rc" "MOO_PREFS_RC")
    '("state" "MOO_PREFS_STATE")
  )
)

; (define-flags CmdFlags
;   (in-module "Moo")
;   (c-name "MooCmdFlags")
;   (gtype-id "MOO_TYPE_CMD_FLAGS")
;   (values
;     '("collect-stdout" "MOO_CMD_COLLECT_STDOUT")
;     '("collect-stderr" "MOO_CMD_COLLECT_STDERR")
;     '("stdout-to-parent" "MOO_CMD_STDOUT_TO_PARENT")
;     '("stderr-to-parent" "MOO_CMD_STDERR_TO_PARENT")
;     '("utf8-output" "MOO_CMD_UTF8_OUTPUT")
;     '("open-console" "MOO_CMD_OPEN_CONSOLE")
;   )
; )

; (define-enum UINodeType
;   (in-module "Moo")
;   (c-name "MooUINodeType")
;   (gtype-id "MOO_TYPE_UI_NODE_TYPE")
;   (values
;     '("container" "MOO_UI_NODE_CONTAINER")
;     '("widget" "MOO_UI_NODE_WIDGET")
;     '("item" "MOO_UI_NODE_ITEM")
;     '("separator" "MOO_UI_NODE_SEPARATOR")
;     '("placeholder" "MOO_UI_NODE_PLACEHOLDER")
;   )
; )

; (define-flags UINodeFlags
;   (in-module "Moo")
;   (c-name "MooUINodeFlags")
;   (gtype-id "MOO_TYPE_UI_NODE_FLAGS")
;   (values
;     '("empty" "MOO_UI_NODE_ENABLE_EMPTY")
;   )
; )

; (define-enum UIWidgetType
;   (in-module "Moo")
;   (c-name "MooUIWidgetType")
;   (gtype-id "MOO_TYPE_UI_WIDGET_TYPE")
;   (values
;     '("menubar" "MOO_UI_MENUBAR")
;     '("menu" "MOO_UI_MENU")
;     '("toolbar" "MOO_UI_TOOLBAR")
;   )
; )

; (define-enum FileError
;   (in-module "Moo")
;   (c-name "MooFileError")
;   (gtype-id "MOO_TYPE_FILE_ERROR")
;   (values
;     '("nonexistent" "MOO_FILE_ERROR_NONEXISTENT")
;     '("not-folder" "MOO_FILE_ERROR_NOT_FOLDER")
;     '("bad-filename" "MOO_FILE_ERROR_BAD_FILENAME")
;     '("failed" "MOO_FILE_ERROR_FAILED")
;     '("already-exists" "MOO_FILE_ERROR_ALREADY_EXISTS")
;     '("access-denied" "MOO_FILE_ERROR_ACCESS_DENIED")
;     '("readonly" "MOO_FILE_ERROR_READONLY")
;     '("different-fs" "MOO_FILE_ERROR_DIFFERENT_FS")
;     '("not-implemented" "MOO_FILE_ERROR_NOT_IMPLEMENTED")
;   )
; )


;; From moofileview.h

(define-function file_view_get_type
  (c-name "moo_file_view_get_type")
  (return-type "GType")
)

(define-method chdir
  (of-object "MooFileView")
  (c-name "moo_file_view_chdir")
  (return-type "gboolean")
  (parameters
    '("GFile*" "dir")
    '("GError**" "error")
  )
)

(define-method chdir_path
  (of-object "MooFileView")
  (c-name "moo_file_view_chdir_path")
  (return-type "gboolean")
  (parameters
    '("const-char*" "dir")
    '("GError**" "error")
  )
)

(define-method get_ui_xml
  (of-object "MooFileView")
  (c-name "moo_file_view_get_ui_xml")
  (return-type "MooUiXml*")
)

(define-method get_actions
  (of-object "MooFileView")
  (c-name "moo_file_view_get_actions")
  (return-type "MooActionCollection*")
)

(define-method focus_files
  (of-object "MooFileView")
  (c-name "moo_file_view_focus_files")
  (return-type "none")
)



;; From moofileview-tools.h



;; From moofolder.h



;; From moofoldermodel.h



;; From mooiconview.h



;; From mootreeview.h



;; From moohistorymgr.h

(define-function history_mgr_parse_error_quark
  (c-name "moo_history_mgr_parse_error_quark")
  (return-type "GQuark")
)

(define-function history_mgr_get_type
  (c-name "moo_history_mgr_get_type")
  (return-type "GType")
)

(define-method add_file
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_add_file")
  (return-type "none")
  (parameters
    '("MooHistoryItem*" "item")
  )
)

(define-method update_file
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_update_file")
  (return-type "none")
  (parameters
    '("MooHistoryItem*" "item")
  )
)

(define-method add_uri
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_add_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method remove_uri
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_remove_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method find_uri
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_find_uri")
  (return-type "MooHistoryItem*")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method shutdown
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_shutdown")
  (return-type "none")
)

(define-method get_n_items
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_get_n_items")
  (return-type "guint")
)

(define-method create_menu
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_create_menu")
  (return-type "GtkWidget*")
  (parameters
    '("MooHistoryCallback" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method create_dialog
  (of-object "MooHistoryMgr")
  (c-name "moo_history_mgr_create_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("MooHistoryCallback" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function history_item_new
  (c-name "moo_history_item_new")
  (is-constructor-of "MooHistoryItem")
  (return-type "MooHistoryItem*")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "first_key")
  )
  (varargs #t)
)

(define-method copy
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_copy")
  (return-type "MooHistoryItem*")
)

(define-method free
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_free")
  (return-type "none")
)

(define-method set
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_set")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "value")
  )
)

(define-method get
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_get")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-method get_uri
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_get_uri")
  (return-type "const-char*")
)

(define-method foreach
  (of-object "MooHistoryItem")
  (c-name "moo_history_item_foreach")
  (return-type "none")
  (parameters
    '("GDataForeachFunc" "func")
    '("gpointer" "user_data")
  )
)



; ;; From mooaccel.h
;
; (define-function accel_translate_event
;   (c-name "moo_accel_translate_event")
;   (return-type "none")
;   (parameters
;     '("GtkWidget*" "widget")
;     '("GdkEventKey*" "event")
;     '("guint*" "keyval")
;     '("GdkModifierType*" "mods")
;   )
; )
;
; (define-function accel_check_event
;   (c-name "moo_accel_check_event")
;   (return-type "gboolean")
;   (parameters
;     '("GtkWidget*" "widget")
;     '("GdkEventKey*" "event")
;     '("guint" "keyval")
;     '("GdkModifierType" "mods")
;   )
; )



;; From mooactionbase.h

(define-function action_base_get_type
  (c-name "moo_action_base_get_type")
  (return-type "GType")
)



;; From mooactioncollection.h

(define-function action_collection_get_type
  (c-name "moo_action_collection_get_type")
  (return-type "GType")
)

(define-function action_collection_new
  (c-name "moo_action_collection_new")
  (is-constructor-of "MooActionCollection")
  (return-type "MooActionCollection*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "display_name")
  )
)

(define-method get_name
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_get_name")
  (return-type "const-char*")
)

(define-method add_group
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_add_group")
  (return-type "GtkActionGroup*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "display_name")
  )
)

(define-method get_group
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_get_group")
  (return-type "GtkActionGroup*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method remove_group
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_remove_group")
  (return-type "none")
  (parameters
    '("GtkActionGroup*" "group")
  )
)

(define-method get_groups
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_get_groups")
  (return-type "const-GSList*")
)

(define-method get_action
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method remove_action
  (of-object "MooActionCollection")
  (c-name "moo_action_collection_remove_action")
  (return-type "none")
  (parameters
    '("GtkAction*" "action")
  )
)



;; From mooactionfactory.h

(define-function action_factory_get_type
  (c-name "moo_action_factory_get_type")
  (return-type "GType")
)

(define-function action_factory_new_func
  (c-name "moo_action_factory_new_func")
  (return-type "MooActionFactory*")
  (parameters
    '("MooActionFactoryFunc" "factory_func")
    '("gpointer" "data")
  )
)

(define-function action_factory_new_a
  (c-name "moo_action_factory_new_a")
  (return-type "MooActionFactory*")
  (parameters
    '("GType" "object_type")
    '("GParameter*" "params")
    '("guint" "n_params")
  )
)

(define-method create_action
  (of-object "MooActionFactory")
  (c-name "moo_action_factory_create_action")
  (return-type "GtkAction*")
  (parameters
    '("gpointer" "data")
    '("const-char*" "additional_prop_name")
  )
  (varargs #t)
)

(define-function action_group_add_action
  (c-name "moo_action_group_add_action")
  (return-type "GtkAction*")
  (parameters
    '("GtkActionGroup*" "group")
    '("const-char*" "name")
    '("const-char*" "first_prop_name")
  )
  (varargs #t)
)



;; From mooactiongroup.h



;; From mooaction.h

(define-function action_get_type
  (c-name "moo_action_get_type")
  (return-type "GType")
)

(define-function toggle_action_get_type
  (c-name "moo_toggle_action_get_type")
  (return-type "GType")
)

(define-function radio_action_get_type
  (c-name "moo_radio_action_get_type")
  (return-type "GType")
)



;; From mooaction-private.h



;; From mooappinput.h



; ;; From mooapp-ipc.h
;
; (define-function ipc_register_client
;   (c-name "moo_ipc_register_client")
;   (return-type "none")
;   (parameters
;     '("GObject*" "object")
;     '("const-char*" "id")
;     '("MooDataCallback" "callback")
;   )
; )
;
; (define-function ipc_unregister_client
;   (c-name "moo_ipc_unregister_client")
;   (return-type "none")
;   (parameters
;     '("GObject*" "object")
;     '("const-char*" "id")
;   )
; )
;
; (define-function ipc_send
;   (c-name "moo_ipc_send")
;   (return-type "none")
;   (parameters
;     '("GObject*" "sender")
;     '("const-char*" "id")
;     '("const-char*" "data")
;     '("gssize" "len")
;   )
; )



;; From mooatom.h

(define-function atom_uri_list
  (c-name "moo_atom_uri_list")
  (return-type "GdkAtom")
)



;; From moobigpaned.h

(define-function big_paned_get_type
  (c-name "moo_big_paned_get_type")
  (return-type "GType")
)

(define-function big_paned_new
  (c-name "moo_big_paned_new")
  (is-constructor-of "MooBigPaned")
  (return-type "GtkWidget*")
)

(define-method set_pane_order
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_set_pane_order")
  (return-type "none")
  (parameters
    '("int*" "order")
  )
)

(define-method set_config
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_set_config")
  (return-type "none")
  (parameters
    '("const-char*" "config_string")
  )
)

(define-method get_config
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_config")
  (return-type "char*")
)

(define-method find_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_find_pane")
  (return-type "MooPane*")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("MooPaned**" "child_paned")
  )
)

(define-method add_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_add_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_remove_child")
  (return-type "none")
)

(define-method get_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_child")
  (return-type "GtkWidget*")
)

(define-method insert_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_insert_pane")
  (return-type "MooPane*")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("const-char*" "pane_id")
    '("MooPaneLabel*" "pane_label")
    '("MooPanePosition" "position")
    '("int" "index_")
  )
)

(define-method remove_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_remove_pane")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method lookup_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_lookup_pane")
  (return-type "MooPane*")
  (parameters
    '("const-char*" "pane_id")
  )
)

(define-method get_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_pane")
  (return-type "GtkWidget*")
  (parameters
    '("MooPanePosition" "position")
    '("int" "index_")
  )
)

(define-method reorder_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_reorder_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("MooPanePosition" "new_position")
    '("int" "new_index")
  )
)

(define-method get_paned
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_paned")
  (return-type "MooPaned*")
  (parameters
    '("MooPanePosition" "position")
  )
)

(define-method open_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_open_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method hide_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_hide_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method present_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_present_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method attach_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_attach_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method detach_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_detach_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)



;; From mooclosure.h

(define-function closure_get_type
  (c-name "moo_closure_get_type")
  (return-type "GType")
)

(define-function closure_alloc
  (c-name "moo_closure_alloc")
  (return-type "MooClosure*")
  (parameters
    '("gsize" "size")
    '("MooClosureCall" "call")
    '("MooClosureDestroy" "destroy")
  )
)

(define-method ref
  (of-object "MooClosure")
  (c-name "moo_closure_ref")
  (return-type "MooClosure*")
)

(define-method ref_sink
  (of-object "MooClosure")
  (c-name "moo_closure_ref_sink")
  (return-type "MooClosure*")
)

(define-method unref
  (of-object "MooClosure")
  (c-name "moo_closure_unref")
  (return-type "none")
)

(define-method sink
  (of-object "MooClosure")
  (c-name "moo_closure_sink")
  (return-type "none")
)

(define-method invoke
  (of-object "MooClosure")
  (c-name "moo_closure_invoke")
  (return-type "none")
)

(define-method invalidate
  (of-object "MooClosure")
  (c-name "moo_closure_invalidate")
  (return-type "none")
)



;; From moocombo.h

(define-function combo_get_type
  (c-name "moo_combo_get_type")
  (return-type "GType")
)

(define-function combo_new
  (c-name "moo_combo_new")
  (is-constructor-of "MooCombo")
  (return-type "GtkWidget*")
)

(define-function combo_new_text
  (c-name "moo_combo_new_text")
  (return-type "GtkWidget*")
)

(define-method add_text
  (of-object "MooCombo")
  (c-name "moo_combo_add_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method popup
  (of-object "MooCombo")
  (c-name "moo_combo_popup")
  (return-type "none")
)

(define-method popdown
  (of-object "MooCombo")
  (c-name "moo_combo_popdown")
  (return-type "none")
)

(define-method popup_shown
  (of-object "MooCombo")
  (c-name "moo_combo_popup_shown")
  (return-type "gboolean")
)

(define-method update_popup
  (of-object "MooCombo")
  (c-name "moo_combo_update_popup")
  (return-type "none")
)

(define-method set_active_iter
  (of-object "MooCombo")
  (c-name "moo_combo_set_active_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_active_iter
  (of-object "MooCombo")
  (c-name "moo_combo_get_active_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_active
  (of-object "MooCombo")
  (c-name "moo_combo_set_active")
  (return-type "none")
  (parameters
    '("int" "row")
  )
)

(define-method get_model
  (of-object "MooCombo")
  (c-name "moo_combo_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_model
  (of-object "MooCombo")
  (c-name "moo_combo_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method set_row_separator_func
  (of-object "MooCombo")
  (c-name "moo_combo_set_row_separator_func")
  (return-type "none")
  (parameters
    '("MooComboRowSeparatorFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_text_column
  (of-object "MooCombo")
  (c-name "moo_combo_set_text_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_text_column
  (of-object "MooCombo")
  (c-name "moo_combo_get_text_column")
  (return-type "int")
)

(define-method set_get_text_func
  (of-object "MooCombo")
  (c-name "moo_combo_set_get_text_func")
  (return-type "none")
  (parameters
    '("MooComboGetTextFunc" "func")
    '("gpointer" "data")
  )
)

(define-method get_text_at_iter
  (of-object "MooCombo")
  (c-name "moo_combo_get_text_at_iter")
  (return-type "char*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_use_button
  (of-object "MooCombo")
  (c-name "moo_combo_set_use_button")
  (return-type "none")
  (parameters
    '("gboolean" "use")
  )
)

(define-method entry_set_text
  (of-object "MooCombo")
  (c-name "moo_combo_entry_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method entry_get_text
  (of-object "MooCombo")
  (c-name "moo_combo_entry_get_text")
  (return-type "const-char*")
)

(define-method select_region
  (of-object "MooCombo")
  (c-name "moo_combo_select_region")
  (return-type "none")
  (parameters
    '("int" "start")
    '("int" "end")
  )
)

(define-method entry_set_activates_default
  (of-object "MooCombo")
  (c-name "moo_combo_entry_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)



;; From moocompat.h



;; From moodialogs.h

(define-function font_dialog
  (c-name "moo_font_dialog")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "title")
    '("const-char*" "start_font")
    '("gboolean" "fixed_width")
  )
)

(define-function overwrite_file_dialog
  (c-name "moo_overwrite_file_dialog")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "display_name")
    '("const-char*" "display_dirname")
  )
)

(define-function save_changes_dialog
  (c-name "moo_save_changes_dialog")
  (return-type "MooSaveChangesDialogResponse")
  (parameters
    '("const-char*" "display_name")
    '("GtkWidget*" "parent")
  )
)

(define-function position_window_at_pointer
  (c-name "moo_position_window_at_pointer")
  (return-type "none")
  (parameters
    '("GtkWidget*" "window")
    '("GtkWidget*" "parent")
  )
)

(define-function window_set_parent
  (c-name "moo_window_set_parent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "window")
    '("GtkWidget*" "parent")
  )
)

(define-function error_dialog
  (c-name "moo_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "text")
    '("const-char*" "secondary_text")
  )
)

(define-function info_dialog
  (c-name "moo_info_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "text")
    '("const-char*" "secondary_text")
  )
)

(define-function warning_dialog
  (c-name "moo_warning_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "text")
    '("const-char*" "secondary_text")
  )
)



; ;; From mooeditops.h
;
; (define-function edit_ops_get_type
;   (c-name "moo_edit_ops_get_type")
;   (return-type "GType")
; )
;
; (define-function undo_ops_get_type
;   (c-name "moo_undo_ops_get_type")
;   (return-type "GType")
; )
;
; (define-function edit_ops_can_do_op_changed
;   (c-name "moo_edit_ops_can_do_op_changed")
;   (return-type "none")
;   (parameters
;     '("GObject*" "obj")
;     '("MooEditOpType" "type")
;   )
; )
;
; (define-function undo_ops_can_undo_changed
;   (c-name "moo_undo_ops_can_undo_changed")
;   (return-type "none")
;   (parameters
;     '("GObject*" "obj")
;   )
; )
;
; (define-function undo_ops_can_redo_changed
;   (c-name "moo_undo_ops_can_redo_changed")
;   (return-type "none")
;   (parameters
;     '("GObject*" "obj")
;   )
; )



;; From mooentry.h

(define-function entry_get_type
  (c-name "moo_entry_get_type")
  (return-type "GType")
)

(define-function entry_new
  (c-name "moo_entry_new")
  (is-constructor-of "MooEntry")
  (return-type "GtkWidget*")
)

(define-method undo
  (of-object "MooEntry")
  (c-name "moo_entry_undo")
  (return-type "none")
)

(define-method redo
  (of-object "MooEntry")
  (c-name "moo_entry_redo")
  (return-type "none")
)

(define-method begin_undo_group
  (of-object "MooEntry")
  (c-name "moo_entry_begin_undo_group")
  (return-type "none")
)

(define-method end_undo_group
  (of-object "MooEntry")
  (c-name "moo_entry_end_undo_group")
  (return-type "none")
)

(define-method clear_undo
  (of-object "MooEntry")
  (c-name "moo_entry_clear_undo")
  (return-type "none")
)

(define-method set_use_special_chars_menu
  (of-object "MooEntry")
  (c-name "moo_entry_set_use_special_chars_menu")
  (return-type "none")
  (parameters
    '("gboolean" "use")
  )
)



;; From moo-environ.h



;; From moofiledialog.h

(define-function file_dialog_get_type
  (c-name "moo_file_dialog_get_type")
  (return-type "GType")
)

(define-function file_dialog_new
  (c-name "moo_file_dialog_new")
  (is-constructor-of "MooFileDialog")
  (return-type "MooFileDialog*")
  (parameters
    '("MooFileDialogType" "type")
    '("GtkWidget*" "parent")
    '("gboolean" "multiple")
    '("const-char*" "title")
    '("GFile*" "start_loc")
    '("const-char*" "start_name")
  )
)

(define-method set_filter_mgr_id
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_filter_mgr_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
  )
)

(define-method run
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_run")
  (return-type "gboolean")
)

(define-method get_file
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_file")
  (return-type "GFile*")
)

(define-method get_files
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_files")
  (return-type "MooFileArray*")
)

(define-method get_uri
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_uri")
  (return-type "char*")
)

(define-method get_uris
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_uris")
  (return-type "char**")
)

(define-method set_current_folder_uri
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_current_folder_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method get_current_folder_uri
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_current_folder_uri")
  (return-type "const-char*")
)

(define-method set_remember_size
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_remember_size")
  (return-type "none")
  (parameters
    '("const-char*" "prefs_key")
  )
)

(define-method set_check_name_func
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_check_name_func")
  (return-type "none")
  (parameters
    '("MooFileDialogCheckNameFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method set_extra_widget
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_extra_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_encoding
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_encoding")
  (return-type "none")
  (parameters
    '("const-char*" "encoding")
  )
)

(define-method get_encoding
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_encoding")
  (return-type "const-char*")
)

(define-method set_help_id
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_help_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
  )
)

(define-function file_dialog
  (c-name "moo_file_dialog")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "parent")
    '("MooFileDialogType" "type")
    '("const-char*" "basename_utf8")
    '("const-char*" "title")
    '("const-char*" "start_dir")
  )
)

(define-function file_dialogp
  (c-name "moo_file_dialogp")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "parent")
    '("MooFileDialogType" "type")
    '("const-char*" "basename_utf8")
    '("const-char*" "title")
    '("const-char*" "prefs_key")
    '("const-char*" "alternate_prefs_key")
  )
)



;; From moofileicon.h

(define-method for_file
  (of-object "MooFileIcon")
  (c-name "moo_file_icon_for_file")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method get_pixbuf
  (of-object "MooFileIcon")
  (c-name "moo_file_icon_get_pixbuf")
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkIconSize" "size")
  )
)

(define-function get_icon_for_path
  (c-name "moo_get_icon_for_path")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-char*" "path")
    '("GtkWidget*" "widget")
    '("GtkIconSize" "size")
  )
)

(define-function file_icon_new
  (c-name "moo_file_icon_new")
  (is-constructor-of "MooFileIcon")
  (return-type "MooFileIcon*")
)

(define-method copy
  (of-object "MooFileIcon")
  (c-name "moo_file_icon_copy")
  (return-type "MooFileIcon*")
)

(define-method free
  (of-object "MooFileIcon")
  (c-name "moo_file_icon_free")
  (return-type "none")
)



;; From moofilewatch.h

(define-function file_watch_get_type
  (c-name "moo_file_watch_get_type")
  (return-type "GType")
)

(define-function file_event_get_type
  (c-name "moo_file_event_get_type")
  (return-type "GType")
)

(define-function file_watch_new
  (c-name "moo_file_watch_new")
  (is-constructor-of "MooFileWatch")
  (return-type "MooFileWatch*")
  (parameters
    '("GError**" "error")
  )
)

(define-method ref
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_ref")
  (return-type "MooFileWatch*")
)

(define-method unref
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_unref")
  (return-type "none")
)

(define-method close
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_close")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method create_monitor
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_create_monitor")
  (return-type "guint")
  (parameters
    '("const-char*" "filename")
    '("MooFileWatchCallback" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
    '("GError**" "error")
  )
)

(define-method cancel_monitor
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_cancel_monitor")
  (return-type "none")
  (parameters
    '("guint" "monitor_id")
  )
)



;; From moofilewriter.h

(define-function file_reader_new
  (c-name "moo_file_reader_new")
  (is-constructor-of "MooFileReader")
  (return-type "MooFileReader*")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-function text_reader_new
  (c-name "moo_text_reader_new")
  (is-constructor-of "MooTextReader")
  (return-type "MooFileReader*")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-method read
  (of-object "MooFileReader")
  (c-name "moo_file_reader_read")
  (return-type "gboolean")
  (parameters
    '("char*" "buf")
    '("gsize" "buf_size")
    '("gsize*" "size_read")
    '("GError**" "error")
  )
)

(define-method close
  (of-object "MooFileReader")
  (c-name "moo_file_reader_close")
  (return-type "none")
)

(define-function file_writer_new
  (c-name "moo_file_writer_new")
  (is-constructor-of "MooFileWriter")
  (return-type "MooFileWriter*")
  (parameters
    '("const-char*" "filename")
    '("MooFileWriterFlags" "flags")
    '("GError**" "error")
  )
)

(define-function file_writer_new_for_file
  (c-name "moo_file_writer_new_for_file")
  (return-type "MooFileWriter*")
  (parameters
    '("GFile*" "file")
    '("MooFileWriterFlags" "flags")
    '("GError**" "error")
  )
)

(define-function config_writer_new
  (c-name "moo_config_writer_new")
  (is-constructor-of "MooConfigWriter")
  (return-type "MooFileWriter*")
  (parameters
    '("const-char*" "filename")
    '("gboolean" "save_backup")
    '("GError**" "error")
  )
)

(define-function string_writer_new
  (c-name "moo_string_writer_new")
  (is-constructor-of "MooStringWriter")
  (return-type "MooFileWriter*")
)

(define-method write
  (of-object "MooFileWriter")
  (c-name "moo_file_writer_write")
  (return-type "gboolean")
  (parameters
    '("const-char*" "data")
    '("gssize" "len")
  )
)

(define-method printf
  (of-object "MooFileWriter")
  (c-name "moo_file_writer_printf")
  (return-type "gboolean")
  (parameters
    '("const-char*" "fmt")
  )
  (varargs #t)
)

(define-method close
  (of-object "MooFileWriter")
  (c-name "moo_file_writer_close")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-function string_writer_get_string
  (c-name "moo_string_writer_get_string")
  (return-type "const-char*")
  (parameters
    '("MooFileWriter*" "writer")
    '("gsize*" "len")
  )
)



;; From moofilewriter-private.h



;; From moofiltermgr.h

(define-function filter_mgr_get_type
  (c-name "moo_filter_mgr_get_type")
  (return-type "GType")
)

(define-function filter_mgr_new
  (c-name "moo_filter_mgr_new")
  (is-constructor-of "MooFilterMgr")
  (return-type "MooFilterMgr*")
)

(define-function filter_mgr_default
  (c-name "moo_filter_mgr_default")
  (return-type "MooFilterMgr*")
)

(define-method init_filter_combo
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_init_filter_combo")
  (return-type "none")
  (parameters
    '("GtkComboBox*" "combo")
    '("const-char*" "user_id")
  )
)

(define-method attach
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_attach")
  (return-type "none")
  (parameters
    '("GtkFileChooser*" "filechooser")
    '("GtkWidget*" "box")
    '("const-char*" "user_id")
  )
)

(define-method get_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-char*" "user_id")
  )
)

(define-method set_last_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_set_last_filter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-char*" "user_id")
  )
)

(define-method get_null_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_null_filter")
  (return-type "GtkFileFilter*")
)

(define-method get_last_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_last_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method new_user_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_new_user_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "glob")
    '("const-char*" "user_id")
  )
)

(define-method new_builtin_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_new_builtin_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "description")
    '("const-char*" "glob")
    '("const-char*" "user_id")
    '("int" "position")
  )
)



;; From moofontsel.h

(define-function font_selection_get_type
  (c-name "moo_font_selection_get_type")
  (return-type "GType")
)

(define-function font_selection_new
  (c-name "moo_font_selection_new")
  (is-constructor-of "MooFontSelection")
  (return-type "GtkWidget*")
)

(define-method get_font_name
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_get_font_name")
  (return-type "gchar*")
)

(define-method set_font_name
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_monospace
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_set_monospace")
  (return-type "none")
  (parameters
    '("gboolean" "monospace")
  )
)

(define-method set_filter_visible
  (of-object "MooFontSelection")
  (c-name "moo_font_selection_set_filter_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-function font_selection_dialog_get_type
  (c-name "moo_font_selection_dialog_get_type")
  (return-type "GType")
)

(define-function font_selection_dialog_new
  (c-name "moo_font_selection_dialog_new")
  (is-constructor-of "MooFontSelectionDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_font_name
  (of-object "MooFontSelectionDialog")
  (c-name "moo_font_selection_dialog_get_font_name")
  (return-type "gchar*")
)

(define-method set_font_name
  (of-object "MooFontSelectionDialog")
  (c-name "moo_font_selection_dialog_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "MooFontSelectionDialog")
  (c-name "moo_font_selection_dialog_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "MooFontSelectionDialog")
  (c-name "moo_font_selection_dialog_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-function font_button_get_type
  (c-name "moo_font_button_get_type")
  (return-type "GType")
)

(define-function font_button_new
  (c-name "moo_font_button_new")
  (is-constructor-of "MooFontButton")
  (return-type "GtkWidget*")
)

(define-function font_button_new_with_font
  (c-name "moo_font_button_new_with_font")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_title
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_title")
  (return-type "const-gchar*")
)

(define-method set_title
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_use_font
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_use_font")
  (return-type "gboolean")
)

(define-method set_use_font
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_use_font")
  (return-type "none")
  (parameters
    '("gboolean" "use_font")
  )
)

(define-method get_use_size
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_use_size")
  (return-type "gboolean")
)

(define-method set_use_size
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_use_size")
  (return-type "none")
  (parameters
    '("gboolean" "use_size")
  )
)

(define-method get_font_name
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_font_name")
  (return-type "const-gchar*")
)

(define-method set_font_name
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_show_style
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_show_style")
  (return-type "gboolean")
)

(define-method set_show_style
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_show_style")
  (return-type "none")
  (parameters
    '("gboolean" "show_style")
  )
)

(define-method get_show_size
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_show_size")
  (return-type "gboolean")
)

(define-method set_show_size
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_show_size")
  (return-type "none")
  (parameters
    '("gboolean" "show_size")
  )
)

(define-method get_monospace
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_monospace")
  (return-type "gboolean")
)

(define-method set_monospace
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_monospace")
  (return-type "none")
  (parameters
    '("gboolean" "monospace")
  )
)

(define-method get_filter_visible
  (of-object "MooFontButton")
  (c-name "moo_font_button_get_filter_visible")
  (return-type "gboolean")
)

(define-method set_filter_visible
  (of-object "MooFontButton")
  (c-name "moo_font_button_set_filter_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)



;; From mooglade.h

(define-function glade_xml_get_type
  (c-name "moo_glade_xml_get_type")
  (return-type "GType")
)

(define-function glade_xml_new_empty
  (c-name "moo_glade_xml_new_empty")
  (return-type "MooGladeXML*")
  (parameters
    '("const-char*" "domain")
  )
)

(define-function glade_xml_register_type
  (c-name "moo_glade_xml_register_type")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
)

(define-method map_class
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_class")
  (return-type "none")
  (parameters
    '("const-char*" "class_name")
    '("GType" "use_type")
  )
)

(define-method map_id
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("GType" "use_type")
  )
)

(define-method map_custom
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_custom")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("MooGladeCreateFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_signal_func
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_set_signal_func")
  (return-type "none")
  (parameters
    '("MooGladeSignalFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method set_prop_func
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_set_prop_func")
  (return-type "none")
  (parameters
    '("MooGladePropFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method set_property
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_set_property")
  (return-type "none")
  (parameters
    '("const-char*" "widget")
    '("const-char*" "prop_name")
    '("const-char*" "value")
  )
)

(define-method parse_file
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_parse_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "root")
    '("GError**" "error")
  )
)

(define-method parse_memory
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_parse_memory")
  (return-type "gboolean")
  (parameters
    '("const-char*" "buffer")
    '("int" "size")
    '("const-char*" "root")
    '("GError**" "error")
  )
)

(define-method fill_widget
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_fill_widget")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "target")
    '("const-char*" "buffer")
    '("int" "size")
    '("const-char*" "target_name")
    '("GError**" "error")
  )
)

(define-function glade_xml_new
  (c-name "moo_glade_xml_new")
  (is-constructor-of "MooGladeXml")
  (return-type "MooGladeXML*")
  (parameters
    '("const-char*" "file")
    '("const-char*" "root")
    '("const-char*" "domain")
    '("GError**" "error")
  )
)

(define-function glade_xml_new_from_buf
  (c-name "moo_glade_xml_new_from_buf")
  (return-type "MooGladeXML*")
  (parameters
    '("const-char*" "buffer")
    '("int" "size")
    '("const-char*" "root")
    '("const-char*" "domain")
    '("GError**" "error")
  )
)

(define-method get_widget
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_get_widget")
  (return-type "gpointer")
  (parameters
    '("const-char*" "id")
  )
)

(define-method get_root
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_get_root")
  (return-type "GtkWidget*")
)



;; From moohelp.h

(define-function help_open
  (c-name "moo_help_open")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function help_open_any
  (c-name "moo_help_open_any")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function help_open_id
  (c-name "moo_help_open_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("GtkWidget*" "parent")
  )
)

(define-function help_set_id
  (c-name "moo_help_set_id")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "id")
  )
)

(define-function help_set_func
  (c-name "moo_help_set_func")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean-(*" "func")
  )
)

(define-function help_set_func_full
  (c-name "moo_help_set_func_full")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("MooHelpFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "notify")
  )
)

(define-function help_connect_keys
  (c-name "moo_help_connect_keys")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From moohistorycombo.h

(define-function history_combo_get_type
  (c-name "moo_history_combo_get_type")
  (return-type "GType")
)

(define-function history_combo_new
  (c-name "moo_history_combo_new")
  (is-constructor-of "MooHistoryCombo")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method set_list
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_set_list")
  (return-type "none")
  (parameters
    '("MooHistoryList*" "list")
  )
)

(define-method get_list
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_get_list")
  (return-type "MooHistoryList*")
)

(define-method add_text
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_add_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method commit
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_commit")
  (return-type "none")
)



;; From moohistorylist.h

(define-function history_list_get_type
  (c-name "moo_history_list_get_type")
  (return-type "GType")
)

(define-function history_list_item_get_type
  (c-name "moo_history_list_item_get_type")
  (return-type "GType")
)

(define-function history_list_new
  (c-name "moo_history_list_new")
  (is-constructor-of "MooHistoryList")
  (return-type "MooHistoryList*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-function history_list_get
  (c-name "moo_history_list_get")
  (return-type "MooHistoryList*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method get_model
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_model")
  (return-type "GtkTreeModel*")
)

(define-method add
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add")
  (return-type "none")
  (parameters
    '("const-char*" "item")
  )
)

(define-method add_filename
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method add_full
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_full")
  (return-type "none")
  (parameters
    '("const-char*" "item")
    '("const-char*" "display_item")
  )
)

(define-method get_last_item
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_last_item")
  (return-type "char*")
)

(define-method remove
  (of-object "MooHistoryList")
  (c-name "moo_history_list_remove")
  (return-type "none")
  (parameters
    '("const-char*" "item")
  )
)

(define-method set_display_func
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_display_func")
  (return-type "none")
  (parameters
    '("MooHistoryDisplayFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_tip_func
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_tip_func")
  (return-type "none")
  (parameters
    '("MooHistoryDisplayFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_compare_func
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_compare_func")
  (return-type "none")
  (parameters
    '("MooHistoryCompareFunc" "func")
    '("gpointer" "data")
  )
)

(define-function history_list_display_basename
  (c-name "moo_history_list_display_basename")
  (return-type "char*")
  (parameters
    '("const-char*" "entry")
    '("gpointer" "data")
  )
)

(define-function history_list_display_filename
  (c-name "moo_history_list_display_filename")
  (return-type "char*")
  (parameters
    '("const-char*" "entry")
    '("gpointer" "data")
  )
)

(define-method get_item
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_item")
  (return-type "MooHistoryListItem*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method find
  (of-object "MooHistoryList")
  (c-name "moo_history_list_find")
  (return-type "gboolean")
  (parameters
    '("const-char*" "text")
    '("GtkTreeIter*" "iter")
  )
)

(define-method is_empty
  (of-object "MooHistoryList")
  (c-name "moo_history_list_is_empty")
  (return-type "gboolean")
)

(define-method n_user_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_n_user_entries")
  (return-type "guint")
)

(define-method get_max_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_max_entries")
  (return-type "guint")
)

(define-method set_max_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_max_entries")
  (return-type "none")
  (parameters
    '("guint" "num")
  )
)

(define-method add_builtin
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_builtin")
  (return-type "none")
  (parameters
    '("const-char*" "item")
    '("const-char*" "display_item")
  )
)

(define-method get_menu_mgr
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_menu_mgr")
  (return-type "MooMenuMgr*")
)

(define-function history_list_item_new
  (c-name "moo_history_list_item_new")
  (is-constructor-of "MooHistoryListItem")
  (return-type "MooHistoryListItem*")
  (parameters
    '("const-char*" "data")
    '("const-char*" "display")
    '("gboolean" "builtin")
  )
)

(define-method copy
  (of-object "MooHistoryListItem")
  (c-name "moo_history_list_item_copy")
  (return-type "MooHistoryListItem*")
)

(define-method free
  (of-object "MooHistoryListItem")
  (c-name "moo_history_list_item_free")
  (return-type "none")
)



;; From mooi18n.h

(define-function gettext
  (c-name "moo_gettext")
  (return-type "const-char*")
  (parameters
    '("const-char*" "string")
  )
)

(define-function pgettext
  (c-name "moo_pgettext")
  (return-type "const-char*")
  (parameters
    '("const-char*" "msgctxtid")
    '("gsize" "msgidoffset")
  )
)

(define-function pgettext2
  (c-name "moo_pgettext2")
  (return-type "const-char*")
  (parameters
    '("const-char*" "context")
    '("const-char*" "msgctxtid")
  )
)

(define-function dpgettext
  (c-name "moo_dpgettext")
  (return-type "const-char*")
  (parameters
    '("const-char*" "domain")
    '("const-char*" "msgctxtid")
    '("gsize" "msgidoffset")
  )
)



;; From moolist.h



;; From moomarkup.h

(define-function markup_doc_get_type
  (c-name "moo_markup_doc_get_type")
  (return-type "GType")
)

(define-function MOO_MARKUP_NODE_CHECK_CAST
  (c-name "MOO_MARKUP_NODE_CHECK_CAST")
  (return-type "MooMarkupNode*")
  (parameters
    '("gpointer" "node")
  )
)

(define-function MOO_MARKUP_DOC_CHECK_CAST
  (c-name "MOO_MARKUP_DOC_CHECK_CAST")
  (return-type "MooMarkupDoc*")
  (parameters
    '("gpointer" "node")
  )
)

(define-function MOO_MARKUP_ELEMENT_CHECK_CAST
  (c-name "MOO_MARKUP_ELEMENT_CHECK_CAST")
  (return-type "MooMarkupElement*")
  (parameters
    '("gpointer" "node")
  )
)

(define-function MOO_MARKUP_TEXT_CHECK_CAST
  (c-name "MOO_MARKUP_TEXT_CHECK_CAST")
  (return-type "MooMarkupText*")
  (parameters
    '("gpointer" "node")
  )
)

(define-function MOO_MARKUP_COMMENT_CHECK_CAST
  (c-name "MOO_MARKUP_COMMENT_CHECK_CAST")
  (return-type "MooMarkupComment*")
  (parameters
    '("gpointer" "node")
  )
)

(define-function markup_doc_new
  (c-name "moo_markup_doc_new")
  (is-constructor-of "MooMarkupDoc")
  (return-type "MooMarkupDoc*")
  (parameters
    '("const-char*" "name")
  )
)

(define-function markup_parse_file
  (c-name "moo_markup_parse_file")
  (return-type "MooMarkupDoc*")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-function markup_parse_memory
  (c-name "moo_markup_parse_memory")
  (return-type "MooMarkupDoc*")
  (parameters
    '("const-char*" "buffer")
    '("int" "size")
    '("GError**" "error")
  )
)

(define-function markup_write_pretty
  (c-name "moo_markup_write_pretty")
  (return-type "gboolean")
  (parameters
    '("MooMarkupDoc*" "doc")
    '("MooFileWriter*" "writer")
    '("guint" "indent")
  )
)

(define-method get_string
  (of-object "MooMarkupNode")
  (c-name "moo_markup_node_get_string")
  (return-type "char*")
)

(define-method ref
  (of-object "MooMarkupDoc")
  (c-name "moo_markup_doc_ref")
  (return-type "MooMarkupDoc*")
)

(define-method unref
  (of-object "MooMarkupDoc")
  (c-name "moo_markup_doc_unref")
  (return-type "none")
)

(define-function markup_get_root_element
  (c-name "moo_markup_get_root_element")
  (return-type "MooMarkupNode*")
  (parameters
    '("MooMarkupDoc*" "doc")
    '("const-char*" "name")
  )
)

(define-function markup_get_element
  (c-name "moo_markup_get_element")
  (return-type "MooMarkupNode*")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "path")
  )
)

(define-function markup_get_prop
  (c-name "moo_markup_get_prop")
  (return-type "const-char*")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
  )
)

(define-function markup_set_prop
  (c-name "moo_markup_set_prop")
  (return-type "none")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
    '("const-char*" "val")
  )
)

(define-function markup_int_prop
  (c-name "moo_markup_int_prop")
  (return-type "int")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
    '("int" "default_val")
  )
)

(define-function markup_uint_prop
  (c-name "moo_markup_uint_prop")
  (return-type "guint")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
    '("guint" "default_val")
  )
)

(define-function markup_bool_prop
  (c-name "moo_markup_bool_prop")
  (return-type "gboolean")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
    '("gboolean" "default_val")
  )
)

(define-function markup_set_bool_prop
  (c-name "moo_markup_set_bool_prop")
  (return-type "none")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "prop_name")
    '("gboolean" "val")
  )
)

(define-function markup_set_content
  (c-name "moo_markup_set_content")
  (return-type "none")
  (parameters
    '("MooMarkupNode*" "node")
    '("const-char*" "text")
  )
)

(define-function markup_get_content
  (c-name "moo_markup_get_content")
  (return-type "const-char*")
  (parameters
    '("MooMarkupNode*" "node")
  )
)

(define-method get_path
  (of-object "MooMarkupElement")
  (c-name "moo_markup_element_get_path")
  (return-type "char*")
)

(define-function markup_delete_node
  (c-name "moo_markup_delete_node")
  (return-type "none")
  (parameters
    '("MooMarkupNode*" "node")
  )
)

(define-function markup_create_root_element
  (c-name "moo_markup_create_root_element")
  (return-type "MooMarkupNode*")
  (parameters
    '("MooMarkupDoc*" "doc")
    '("const-char*" "name")
  )
)

(define-function markup_create_element
  (c-name "moo_markup_create_element")
  (return-type "MooMarkupNode*")
  (parameters
    '("MooMarkupNode*" "parent")
    '("const-char*" "path")
  )
)

(define-function markup_create_text_element
  (c-name "moo_markup_create_text_element")
  (return-type "MooMarkupNode*")
  (parameters
    '("MooMarkupNode*" "parent")
    '("const-char*" "path")
    '("const-char*" "content")
  )
)

(define-function parse_markup_file
  (c-name "moo_parse_markup_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("const-GMarkupParser*" "parser")
    '("gpointer" "data")
    '("GError**" "error")
  )
)



;; From moomenuaction.h

(define-function menu_action_get_type
  (c-name "moo_menu_action_get_type")
  (return-type "GType")
)

(define-function menu_action_new
  (c-name "moo_menu_action_new")
  (is-constructor-of "MooMenuAction")
  (return-type "GtkAction*")
  (parameters
    '("const-char*" "id")
    '("const-char*" "label")
  )
)

(define-method get_mgr
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_get_mgr")
  (return-type "MooMenuMgr*")
)

(define-method set_mgr
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_set_mgr")
  (return-type "none")
  (parameters
    '("MooMenuMgr*" "mgr")
  )
)

(define-method set_func
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_set_func")
  (return-type "none")
  (parameters
    '("MooMenuFunc" "func")
  )
)

(define-method set_menu_data
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_set_menu_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("gboolean" "is_object")
  )
)



;; From moomenu.h

(define-function menu_get_type
  (c-name "moo_menu_get_type")
  (return-type "GType")
)

(define-function menu_new
  (c-name "moo_menu_new")
  (is-constructor-of "MooMenu")
  (return-type "GtkWidget*")
)



;; From moomenumgr.h

(define-function menu_mgr_get_type
  (c-name "moo_menu_mgr_get_type")
  (return-type "GType")
)

(define-function menu_item_flags_get_type
  (c-name "moo_menu_item_flags_get_type")
  (return-type "GType")
)

(define-function menu_mgr_new
  (c-name "moo_menu_mgr_new")
  (is-constructor-of "MooMenuMgr")
  (return-type "MooMenuMgr*")
)

(define-method insert
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_insert")
  (return-type "int")
  (parameters
    '("const-char*" "parent_id")
    '("int" "position")
    '("const-char*" "item_id")
    '("const-char*" "label")
    '("const-char*" "tip")
    '("MooMenuItemFlags" "flags")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method append
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_append")
  (return-type "int")
  (parameters
    '("const-char*" "parent_id")
    '("const-char*" "item_id")
    '("const-char*" "label")
    '("const-char*" "tip")
    '("MooMenuItemFlags" "flags")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method insert_separator
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_insert_separator")
  (return-type "int")
  (parameters
    '("const-char*" "parent_id")
    '("int" "position")
  )
)

(define-method remove
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_remove")
  (return-type "none")
  (parameters
    '("const-char*" "parent_id")
    '("guint" "position")
  )
)

(define-method set_active
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_set_active")
  (return-type "none")
  (parameters
    '("const-char*" "item_id")
    '("gboolean" "active")
  )
)

(define-method create_item
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_create_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
    '("MooMenuItemFlags" "flags")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_use_mnemonic
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_set_use_mnemonic")
  (return-type "none")
  (parameters
    '("gboolean" "use")
  )
)

(define-method set_show_tooltips
  (of-object "MooMenuMgr")
  (c-name "moo_menu_mgr_set_show_tooltips")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)



;; From moomenutoolbutton.h

(define-function menu_tool_button_get_type
  (c-name "moo_menu_tool_button_get_type")
  (return-type "GType")
)

(define-function menu_tool_button_new
  (c-name "moo_menu_tool_button_new")
  (is-constructor-of "MooMenuToolButton")
  (return-type "GtkWidget*")
)

(define-method set_menu
  (of-object "MooMenuToolButton")
  (c-name "moo_menu_tool_button_set_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu")
  )
)

(define-method get_menu
  (of-object "MooMenuToolButton")
  (c-name "moo_menu_tool_button_get_menu")
  (return-type "GtkWidget*")
)



;; From moo-mime.h

(define-function mime_type_unknown
  (c-name "moo_mime_type_unknown")
  (return-type "const-char*")
)

(define-function get_mime_type_for_file
  (c-name "moo_get_mime_type_for_file")
  (return-type "const-char*")
  (parameters
    '("const-char*" "filename")
    '("struct-stat*" "statbuf")
  )
)

(define-function get_mime_type_for_filename
  (c-name "moo_get_mime_type_for_filename")
  (return-type "const-char*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function mime_type_is_subclass
  (c-name "moo_mime_type_is_subclass")
  (return-type "gboolean")
  (parameters
    '("const-char*" "mime_type")
    '("const-char*" "base")
  )
)

(define-function mime_type_list_parents
  (c-name "moo_mime_type_list_parents")
  (return-type "const-char**")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-function mime_shutdown
  (c-name "moo_mime_shutdown")
  (return-type "none")
)



;; From moonotebook.h

(define-function notebook_get_type
  (c-name "moo_notebook_get_type")
  (return-type "GType")
)

(define-function notebook_new
  (c-name "moo_notebook_new")
  (is-constructor-of "MooNotebook")
  (return-type "GtkWidget*")
)

(define-method insert_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_insert_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("gint" "position")
  )
)

(define-method remove_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_remove_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method set_action_widget
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean" "right")
  )
)

(define-method get_action_widget
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_action_widget")
  (return-type "GtkWidget*")
  (parameters
    '("gboolean" "right")
  )
)

(define-method get_current_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_current_page")
  (return-type "gint")
)

(define-method get_nth_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "page_num")
  )
)

(define-method get_n_pages
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_n_pages")
  (return-type "gint")
)

(define-method page_num
  (of-object "MooNotebook")
  (c-name "moo_notebook_page_num")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_current_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method set_show_border
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_show_border")
  (return-type "none")
  (parameters
    '("gboolean" "show_border")
  )
)

(define-method get_show_border
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_show_border")
  (return-type "gboolean")
)

(define-method set_show_tabs
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_show_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "show_tabs")
  )
)

(define-method get_show_tabs
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_show_tabs")
  (return-type "gboolean")
)

(define-method get_tab_label
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_tab_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_label
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_tab_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method set_tab_label_text
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_tab_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-char*" "tab_text")
  )
)

(define-method get_tab_label_text
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_tab_label_text")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_event_tab
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_event_tab")
  (return-type "int")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method reorder_child
  (of-object "MooNotebook")
  (c-name "moo_notebook_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-method enable_popup
  (of-object "MooNotebook")
  (c-name "moo_notebook_enable_popup")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method enable_reordering
  (of-object "MooNotebook")
  (c-name "moo_notebook_enable_reordering")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)



;; From mooonce.h



;; From moopaned.h

(define-function paned_get_type
  (c-name "moo_paned_get_type")
  (return-type "GType")
)

(define-function pane_position_get_type
  (c-name "moo_pane_position_get_type")
  (return-type "GType")
)

(define-function paned_new
  (c-name "moo_paned_new")
  (is-constructor-of "MooPaned")
  (return-type "GtkWidget*")
  (parameters
    '("MooPanePosition" "pane_position")
  )
)

(define-method insert_pane
  (of-object "MooPaned")
  (c-name "moo_paned_insert_pane")
  (return-type "MooPane*")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("MooPaneLabel*" "pane_label")
    '("int" "position")
  )
)

(define-method remove_pane
  (of-object "MooPaned")
  (c-name "moo_paned_remove_pane")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method n_panes
  (of-object "MooPaned")
  (c-name "moo_paned_n_panes")
  (return-type "guint")
)

(define-method list_panes
  (of-object "MooPaned")
  (c-name "moo_paned_list_panes")
  (return-type "GSList*")
)

(define-method get_nth_pane
  (of-object "MooPaned")
  (c-name "moo_paned_get_nth_pane")
  (return-type "MooPane*")
  (parameters
    '("guint" "n")
  )
)

(define-method get_pane_num
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane_num")
  (return-type "int")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_pane
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane")
  (return-type "MooPane*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_sticky_pane
  (of-object "MooPaned")
  (c-name "moo_paned_set_sticky_pane")
  (return-type "none")
  (parameters
    '("gboolean" "sticky")
  )
)

(define-method set_pane_size
  (of-object "MooPaned")
  (c-name "moo_paned_set_pane_size")
  (return-type "none")
  (parameters
    '("int" "size")
  )
)

(define-method get_pane_size
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane_size")
  (return-type "int")
)

(define-method get_button_box_size
  (of-object "MooPaned")
  (c-name "moo_paned_get_button_box_size")
  (return-type "int")
)

(define-method get_open_pane
  (of-object "MooPaned")
  (c-name "moo_paned_get_open_pane")
  (return-type "MooPane*")
)

(define-method is_open
  (of-object "MooPaned")
  (c-name "moo_paned_is_open")
  (return-type "gboolean")
)

(define-method open_pane
  (of-object "MooPaned")
  (c-name "moo_paned_open_pane")
  (return-type "none")
  (parameters
    '("MooPane*" "pane")
  )
)

(define-method present_pane
  (of-object "MooPaned")
  (c-name "moo_paned_present_pane")
  (return-type "none")
  (parameters
    '("MooPane*" "pane")
  )
)

(define-method hide_pane
  (of-object "MooPaned")
  (c-name "moo_paned_hide_pane")
  (return-type "none")
)

(define-method attach_pane
  (of-object "MooPaned")
  (c-name "moo_paned_attach_pane")
  (return-type "none")
  (parameters
    '("MooPane*" "pane")
  )
)

(define-method detach_pane
  (of-object "MooPaned")
  (c-name "moo_paned_detach_pane")
  (return-type "none")
  (parameters
    '("MooPane*" "pane")
  )
)



;; From moopane.h

(define-function pane_get_type
  (c-name "moo_pane_get_type")
  (return-type "GType")
)

(define-function pane_label_get_type
  (c-name "moo_pane_label_get_type")
  (return-type "GType")
)

(define-function pane_params_get_type
  (c-name "moo_pane_params_get_type")
  (return-type "GType")
)

(define-method get_id
  (of-object "MooPane")
  (c-name "moo_pane_get_id")
  (return-type "const-char*")
)

(define-method set_label
  (of-object "MooPane")
  (c-name "moo_pane_set_label")
  (return-type "none")
  (parameters
    '("MooPaneLabel*" "label")
  )
)

(define-method get_label
  (of-object "MooPane")
  (c-name "moo_pane_get_label")
  (return-type "MooPaneLabel*")
)

(define-method set_frame_markup
  (of-object "MooPane")
  (c-name "moo_pane_set_frame_markup")
  (return-type "none")
  (parameters
    '("const-char*" "markup")
  )
)

(define-method set_frame_text
  (of-object "MooPane")
  (c-name "moo_pane_set_frame_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_params
  (of-object "MooPane")
  (c-name "moo_pane_set_params")
  (return-type "none")
  (parameters
    '("MooPaneParams*" "params")
  )
)

(define-method get_params
  (of-object "MooPane")
  (c-name "moo_pane_get_params")
  (return-type "MooPaneParams*")
)

(define-method set_detachable
  (of-object "MooPane")
  (c-name "moo_pane_set_detachable")
  (return-type "none")
  (parameters
    '("gboolean" "detachable")
  )
)

(define-method get_detachable
  (of-object "MooPane")
  (c-name "moo_pane_get_detachable")
  (return-type "gboolean")
)

(define-method set_removable
  (of-object "MooPane")
  (c-name "moo_pane_set_removable")
  (return-type "none")
  (parameters
    '("gboolean" "removable")
  )
)

(define-method get_removable
  (of-object "MooPane")
  (c-name "moo_pane_get_removable")
  (return-type "gboolean")
)

(define-method get_child
  (of-object "MooPane")
  (c-name "moo_pane_get_child")
  (return-type "GtkWidget*")
)

(define-method get_index
  (of-object "MooPane")
  (c-name "moo_pane_get_index")
  (return-type "int")
)

(define-method open
  (of-object "MooPane")
  (c-name "moo_pane_open")
  (return-type "none")
)

(define-method present
  (of-object "MooPane")
  (c-name "moo_pane_present")
  (return-type "none")
)

(define-method attach
  (of-object "MooPane")
  (c-name "moo_pane_attach")
  (return-type "none")
)

(define-method detach
  (of-object "MooPane")
  (c-name "moo_pane_detach")
  (return-type "none")
)

(define-method set_drag_dest
  (of-object "MooPane")
  (c-name "moo_pane_set_drag_dest")
  (return-type "none")
)

(define-method unset_drag_dest
  (of-object "MooPane")
  (c-name "moo_pane_unset_drag_dest")
  (return-type "none")
)

(define-function pane_params_new
  (c-name "moo_pane_params_new")
  (is-constructor-of "MooPaneParams")
  (return-type "MooPaneParams*")
  (parameters
    '("GdkRectangle*" "window_position")
    '("gboolean" "detached")
    '("gboolean" "maximized")
    '("gboolean" "keep_on_top")
  )
)

(define-method copy
  (of-object "MooPaneParams")
  (c-name "moo_pane_params_copy")
  (return-type "MooPaneParams*")
)

(define-method free
  (of-object "MooPaneParams")
  (c-name "moo_pane_params_free")
  (return-type "none")
)

(define-function pane_label_new
  (c-name "moo_pane_label_new")
  (is-constructor-of "MooPaneLabel")
  (return-type "MooPaneLabel*")
  (parameters
    '("const-char*" "icon_stock_id")
    '("GdkPixbuf*" "pixbuf")
    '("const-char*" "label")
    '("const-char*" "window_title")
  )
)

(define-method copy
  (of-object "MooPaneLabel")
  (c-name "moo_pane_label_copy")
  (return-type "MooPaneLabel*")
)

(define-method free
  (of-object "MooPaneLabel")
  (c-name "moo_pane_label_free")
  (return-type "none")
)



;; From mooprefsdialog.h

(define-function prefs_dialog_get_type
  (c-name "moo_prefs_dialog_get_type")
  (return-type "GType")
)

(define-function prefs_dialog_new
  (c-name "moo_prefs_dialog_new")
  (is-constructor-of "MooPrefsDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
  )
)

(define-method run
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_run")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
  )
)

(define-method append_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_append_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method remove_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_remove_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method insert_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_insert_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("int" "position")
  )
)



;; From mooprefs.h

(define-function prefs_load
  (c-name "moo_prefs_load")
  (return-type "gboolean")
  (parameters
    '("char**" "sys_files")
    '("const-char*" "file_rc")
    '("const-char*" "file_state")
    '("GError**" "error")
  )
)

(define-function prefs_save
  (c-name "moo_prefs_save")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_rc")
    '("const-char*" "file_state")
    '("GError**" "error")
  )
)

(define-function prefs_get_markup
  (c-name "moo_prefs_get_markup")
  (return-type "MooMarkupDoc*")
  (parameters
    '("MooPrefsKind" "prefs_kind")
  )
)

(define-function prefs_new_key
  (c-name "moo_prefs_new_key")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("GType" "value_type")
    '("const-GValue*" "default_value")
    '("MooPrefsKind" "prefs_kind")
  )
)

(define-function prefs_delete_key
  (c-name "moo_prefs_delete_key")
  (return-type "none")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_key_type
  (c-name "moo_prefs_get_key_type")
  (return-type "GType")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_key_registered
  (c-name "moo_prefs_key_registered")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_list_keys
  (c-name "moo_prefs_list_keys")
  (return-type "GSList*")
  (parameters
    '("MooPrefsKind" "prefs_kind")
  )
)

(define-function prefs_get
  (c-name "moo_prefs_get")
  (return-type "const-GValue*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_default
  (c-name "moo_prefs_get_default")
  (return-type "const-GValue*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_set
  (c-name "moo_prefs_set")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GValue*" "value")
  )
)

(define-function prefs_set_default
  (c-name "moo_prefs_set_default")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GValue*" "value")
  )
)

(define-function prefs_new_key_bool
  (c-name "moo_prefs_new_key_bool")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("gboolean" "default_val")
  )
)

(define-function prefs_new_key_int
  (c-name "moo_prefs_new_key_int")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "default_val")
  )
)

(define-function prefs_new_key_string
  (c-name "moo_prefs_new_key_string")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "default_val")
  )
)

(define-function prefs_create_key
  (c-name "moo_prefs_create_key")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("MooPrefsKind" "prefs_kind")
    '("GType" "value_type")
  )
  (varargs #t)
)

(define-function prefs_make_key
  (c-name "moo_prefs_make_key")
  (return-type "char*")
  (parameters
    '("const-char*" "first_comp")
  )
  (varargs #t)
)

(define-function prefs_make_keyv
  (c-name "moo_prefs_make_keyv")
  (return-type "char*")
  (parameters
    '("const-char*" "first_comp")
    '("va_list" "var_args")
  )
)

(define-function prefs_get_string
  (c-name "moo_prefs_get_string")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_filename
  (c-name "moo_prefs_get_filename")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_file
  (c-name "moo_prefs_get_file")
  (return-type "GFile*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_bool
  (c-name "moo_prefs_get_bool")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_int
  (c-name "moo_prefs_get_int")
  (return-type "int")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_set_string
  (c-name "moo_prefs_set_string")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "val")
  )
)

(define-function prefs_set_filename
  (c-name "moo_prefs_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "val")
  )
)

(define-function prefs_set_file
  (c-name "moo_prefs_set_file")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("GFile*" "val")
  )
)

(define-function prefs_set_int
  (c-name "moo_prefs_set_int")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "val")
  )
)

(define-function prefs_set_bool
  (c-name "moo_prefs_set_bool")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("gboolean" "val")
  )
)



;; From mooprefspage.h

(define-function prefs_page_get_type
  (c-name "moo_prefs_page_get_type")
  (return-type "GType")
)

(define-function prefs_page_new
  (c-name "moo_prefs_page_new")
  (is-constructor-of "MooPrefsPage")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "label")
    '("const-char*" "icon_stock_id")
  )
)

(define-method set_callbacks
  (of-object "MooPrefsPage")
  (c-name "moo_prefs_page_set_callbacks")
  (return-type "none")
  (parameters
    '("MooPrefsPageInitUi" "init_ui")
    '("MooPrefsPageInit" "init")
    '("MooPrefsPageApply" "apply")
  )
)

(define-method bind_setting
  (of-object "MooPrefsPage")
  (c-name "moo_prefs_page_bind_setting")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "setting")
  )
)

(define-method add_page
  (of-object "MooPrefsPage")
  (c-name "moo_prefs_page_add_page")
  (return-type "none")
  (parameters
    '("MooPrefsPage*" "child_page")
  )
)



;; From moospawn.h



;; From moostat.h

(define-function g_stat
  (c-name "g_stat")
  (return-type "return")
  (parameters
  )
)

(define-function g_lstat
  (c-name "g_lstat")
  (return-type "return")
  (parameters
  )
)



;; From moostock.h



;; From mootypedecl-macros.h



;; From mootype-macros.h



;; From moouixml.h

(define-function ui_xml_get_type
  (c-name "moo_ui_xml_get_type")
  (return-type "GType")
)

(define-function ui_node_get_type
  (c-name "moo_ui_node_get_type")
  (return-type "GType")
)

(define-function ui_xml_new
  (c-name "moo_ui_xml_new")
  (is-constructor-of "MooUiXml")
  (return-type "MooUiXml*")
)

(define-method add_ui_from_string
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_add_ui_from_string")
  (return-type "none")
  (parameters
    '("const-char*" "buffer")
    '("gssize" "length")
  )
)

(define-method get_node
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_get_node")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "path")
  )
)

(define-method find_placeholder
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_find_placeholder")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_path
  (of-object "MooUINode")
  (c-name "moo_ui_node_get_path")
  (return-type "char*")
)

(define-method get_child
  (of-object "MooUINode")
  (c-name "moo_ui_node_get_child")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "path")
  )
)

(define-method create_widget
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_create_widget")
  (return-type "gpointer")
  (parameters
    '("MooUIWidgetType" "type")
    '("const-char*" "path")
    '("MooActionCollection*" "actions")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method get_widget
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "toplevel")
    '("const-char*" "path")
  )
)

(define-method new_merge_id
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_new_merge_id")
  (return-type "guint")
)

(define-method add_item
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_add_item")
  (return-type "MooUINode*")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "name")
    '("const-char*" "action")
    '("int" "position")
  )
)

(define-method insert_after
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert_after")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("MooUINode*" "after")
    '("const-char*" "markup")
  )
)

(define-method insert_before
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert_before")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("MooUINode*" "before")
    '("const-char*" "markup")
  )
)

(define-method insert
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("int" "position")
    '("const-char*" "markup")
  )
)

(define-method insert_markup_after
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert_markup_after")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "after")
    '("const-char*" "markup")
  )
)

(define-method insert_markup_before
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert_markup_before")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "before")
    '("const-char*" "markup")
  )
)

(define-method insert_markup
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_insert_markup")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("int" "position")
    '("const-char*" "markup")
  )
)

(define-method remove_ui
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_remove_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
  )
)

(define-method remove_node
  (of-object "MooUiXml")
  (c-name "moo_ui_xml_remove_node")
  (return-type "none")
  (parameters
    '("MooUINode*" "node")
  )
)



;; From mooundo.h

(define-function undo_stack_get_type
  (c-name "moo_undo_stack_get_type")
  (return-type "GType")
)

(define-function undo_stack_new
  (c-name "moo_undo_stack_new")
  (is-constructor-of "MooUndoStack")
  (return-type "MooUndoStack*")
  (parameters
    '("gpointer" "document")
  )
)

(define-function undo_action_register
  (c-name "moo_undo_action_register")
  (return-type "guint")
  (parameters
    '("MooUndoActionClass*" "klass")
  )
)

(define-method add_action
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_add_action")
  (return-type "none")
  (parameters
    '("guint" "type")
    '("MooUndoAction*" "action")
  )
)

(define-method clear
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_clear")
  (return-type "none")
)

(define-method freeze
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_thaw")
  (return-type "none")
)

(define-method frozen
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_frozen")
  (return-type "gboolean")
)

(define-method new_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_new_group")
  (return-type "none")
)

(define-method start_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_start_group")
  (return-type "none")
)

(define-method end_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_end_group")
  (return-type "none")
)

(define-method undo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_undo")
  (return-type "none")
)

(define-method redo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_redo")
  (return-type "none")
)

(define-method can_undo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_can_undo")
  (return-type "gboolean")
)

(define-method can_redo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_can_redo")
  (return-type "gboolean")
)



; ;; From mooutils-gobject.h
;
; (define-function bind_sensitive
;   (c-name "moo_bind_sensitive")
;   (return-type "none")
;   (parameters
;     '("GtkWidget*" "toggle_btn")
;     '("GtkWidget*" "dependent")
;     '("gboolean" "invert")
;   )
; )
;
; (define-function bind_bool_property
;   (c-name "moo_bind_bool_property")
;   (return-type "guint")
;   (parameters
;     '("gpointer" "target")
;     '("const-char*" "target_prop")
;     '("gpointer" "source")
;     '("const-char*" "source_prop")
;     '("gboolean" "invert")
;   )
; )



;; From mooutils-misc.h

(define-function open_url
  (c-name "moo_open_url")
  (return-type "gboolean")
  (parameters
    '("const-char*" "url")
  )
)

(define-function open_email
  (c-name "moo_open_email")
  (return-type "gboolean")
  (parameters
    '("const-char*" "address")
    '("const-char*" "subject")
    '("const-char*" "body")
  )
)

(define-function open_file
  (c-name "moo_open_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "path")
  )
)

(define-function window_present
  (c-name "moo_window_present")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
    '("guint32" "stamp")
  )
)

(define-function log_window_show
  (c-name "moo_log_window_show")
  (return-type "none")
)

(define-function log_window_hide
  (c-name "moo_log_window_hide")
  (return-type "none")
)

(define-function set_log_func_window
  (c-name "moo_set_log_func_window")
  (return-type "none")
  (parameters
    '("gboolean" "show_now")
  )
)

(define-function set_log_func_file
  (c-name "moo_set_log_func_file")
  (return-type "none")
  (parameters
    '("const-char*" "log_file")
  )
)

(define-function set_log_func_silent
  (c-name "moo_set_log_func_silent")
  (return-type "none")
)

(define-function reset_log_func
  (c-name "moo_reset_log_func")
  (return-type "none")
)

; (define-function enable_win32_error_message
;   (c-name "moo_enable_win32_error_message")
;   (return-type "none")
; )

(define-function set_user_data_dir
  (c-name "moo_set_user_data_dir")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-function set_display_app_name
  (c-name "moo_set_display_app_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-function get_display_app_name
  (c-name "moo_get_display_app_name")
  (return-type "const-char*")
)

(define-function make_user_data_dir
  (c-name "moo_make_user_data_dir")
  (return-type "gboolean")
  (parameters
    '("const-char*" "path")
  )
)

(define-function get_user_data_dir
  (c-name "moo_get_user_data_dir")
  (return-type "char*")
)

(define-function get_user_data_file
  (c-name "moo_get_user_data_file")
  (return-type "char*")
  (parameters
    '("const-char*" "basename")
  )
)

(define-function get_named_user_data_file
  (c-name "moo_get_named_user_data_file")
  (return-type "char*")
  (parameters
    '("const-char*" "basename")
  )
)

(define-function save_user_data_file
  (c-name "moo_save_user_data_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "basename")
    '("const-char*" "content")
    '("gssize" "len")
    '("GError**" "error")
  )
)

(define-function get_user_cache_dir
  (c-name "moo_get_user_cache_dir")
  (return-type "char*")
)

(define-function get_user_cache_file
  (c-name "moo_get_user_cache_file")
  (return-type "char*")
  (parameters
    '("const-char*" "basename")
  )
)

(define-function save_user_cache_file
  (c-name "moo_save_user_cache_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "basename")
    '("const-char*" "content")
    '("gssize" "len")
    '("GError**" "error")
  )
)

(define-function save_config_file
  (c-name "moo_save_config_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "content")
    '("gssize" "len")
    '("GError**" "error")
  )
)

(define-function get_data_dirs
  (c-name "moo_get_data_dirs")
  (return-type "char**")
)

(define-function get_lib_dirs
  (c-name "moo_get_lib_dirs")
  (return-type "char**")
)

(define-function get_data_subdirs
  (c-name "moo_get_data_subdirs")
  (return-type "char**")
  (parameters
    '("const-char*" "subdir")
  )
)

(define-function get_sys_data_subdirs
  (c-name "moo_get_sys_data_subdirs")
  (return-type "char**")
  (parameters
    '("const-char*" "subdir")
  )
)

(define-function get_lib_subdirs
  (c-name "moo_get_lib_subdirs")
  (return-type "char**")
  (parameters
    '("const-char*" "subdir")
  )
)

(define-function get_data_and_lib_subdirs
  (c-name "moo_get_data_and_lib_subdirs")
  (return-type "char**")
  (parameters
    '("const-char*" "subdir")
  )
)

(define-function getenv_bool
  (c-name "moo_getenv_bool")
  (return-type "gboolean")
  (parameters
    '("const-char*" "var")
  )
)

(define-function tempnam
  (c-name "moo_tempnam")
  (return-type "char*")
)

; (define-function cleanup
;   (c-name "moo_cleanup")
;   (return-type "none")
; )
;
; (define-function get_locale_dir
;   (c-name "moo_get_locale_dir")
;   (return-type "const-char*")
; )
;
; (define-function selection_data_set_pointer
;   (c-name "moo_selection_data_set_pointer")
;   (return-type "none")
;   (parameters
;     '("GtkSelectionData*" "data")
;     '("GdkAtom" "type")
;     '("gpointer" "ptr")
;   )
; )

; (define-function selection_data_get_pointer
;   (c-name "moo_selection_data_get_pointer")
;   (return-type "gpointer")
;   (parameters
;     '("GtkSelectionData*" "data")
;     '("GdkAtom" "type")
;   )
; )

(define-method init
  (of-object "MooLineReader")
  (c-name "moo_line_reader_init")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("gssize" "len")
  )
)

(define-method get_line
  (of-object "MooLineReader")
  (c-name "moo_line_reader_get_line")
  (return-type "const-char*")
  (parameters
    '("gsize*" "line_len")
    '("gsize*" "lt_len")
  )
)

; (define-function find_line_end
;   (c-name "moo_find_line_end")
;   (return-type "gboolean")
;   (parameters
;     '("const-char*" "string")
;     '("gssize" "len")
;     '("gsize*" "le_start")
;     '("gsize*" "le_len")
;   )
; )

; (define-function strnsplit_lines
;   (c-name "moo_strnsplit_lines")
;   (return-type "char**")
;   (parameters
;     '("const-char*" "string")
;     '("gssize" "len")
;     '("guint*" "n_tokens")
;   )
; )

; (define-function splitlines
;   (c-name "moo_splitlines")
;   (return-type "char**")
;   (parameters
;     '("const-char*" "string")
;   )
; )

; (define-function idle_add_full
;   (c-name "moo_idle_add_full")
;   (return-type "guint")
;   (parameters
;     '("gint" "priority")
;     '("GSourceFunc" "function")
;     '("gpointer" "data")
;     '("GDestroyNotify" "notify")
;   )
; )
;
; (define-function idle_add
;   (c-name "moo_idle_add")
;   (return-type "guint")
;   (parameters
;     '("GSourceFunc" "function")
;     '("gpointer" "data")
;   )
; )

; (define-function win32_get_dll_dir
;   (c-name "moo_win32_get_dll_dir")
;   (return-type "char*")
;   (parameters
;     '("const-char*" "dll")
;   )
; )



;; From mooutils-thread.h

(define-function async_job_new
  (c-name "moo_async_job_new")
  (is-constructor-of "MooAsyncJob")
  (return-type "MooAsyncJob*")
  (parameters
    '("MooAsyncJobCallback" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "data_notify")
  )
)

(define-method start
  (of-object "MooAsyncJob")
  (c-name "moo_async_job_start")
  (return-type "none")
)

(define-method cancel
  (of-object "MooAsyncJob")
  (c-name "moo_async_job_cancel")
  (return-type "none")
)

(define-method ref
  (of-object "MooAsyncJob")
  (c-name "moo_async_job_ref")
  (return-type "none")
)

(define-method unref
  (of-object "MooAsyncJob")
  (c-name "moo_async_job_unref")
  (return-type "none")
)



;; From mooutils-treeview.h



;; From moowindow.h

(define-function window_get_type
  (c-name "moo_window_get_type")
  (return-type "GType")
)

(define-method close
  (of-object "MooWindow")
  (c-name "moo_window_close")
  (return-type "gboolean")
)

(define-method apply_prefs
  (of-object "MooWindow")
  (c-name "moo_window_apply_prefs")
  (return-type "none")
)

(define-method message
  (of-object "MooWindow")
  (c-name "moo_window_message")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_edit_ops_widget
  (of-object "MooWindow")
  (c-name "moo_window_set_edit_ops_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_id
  (of-object "MooWindowClass")
  (c-name "moo_window_class_set_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "name")
  )
)

(define-method new_action
  (of-object "MooWindowClass")
  (c-name "moo_window_class_new_action")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "group")
  )
  (varargs #t)
)

(define-method new_action_custom
  (of-object "MooWindowClass")
  (c-name "moo_window_class_new_action_custom")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("const-char*" "group")
    '("MooWindowActionFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method find_action
  (of-object "MooWindowClass")
  (c-name "moo_window_class_find_action")
  (return-type "gboolean")
  (parameters
    '("const-char*" "id")
  )
)

(define-method remove_action
  (of-object "MooWindowClass")
  (c-name "moo_window_class_remove_action")
  (return-type "none")
  (parameters
    '("const-char*" "id")
  )
)

(define-method new_group
  (of-object "MooWindowClass")
  (c-name "moo_window_class_new_group")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("const-char*" "display_name")
  )
)

(define-method find_group
  (of-object "MooWindowClass")
  (c-name "moo_window_class_find_group")
  (return-type "gboolean")
  (parameters
    '("const-char*" "name")
  )
)

(define-method remove_group
  (of-object "MooWindowClass")
  (c-name "moo_window_class_remove_group")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_ui_xml
  (of-object "MooWindow")
  (c-name "moo_window_get_ui_xml")
  (return-type "MooUiXml*")
)

(define-method set_ui_xml
  (of-object "MooWindow")
  (c-name "moo_window_set_ui_xml")
  (return-type "none")
  (parameters
    '("MooUiXml*" "xml")
  )
)

(define-method get_actions
  (of-object "MooWindow")
  (c-name "moo_window_get_actions")
  (return-type "MooActionCollection*")
)

(define-method get_action
  (of-object "MooWindow")
  (c-name "moo_window_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-char*" "action")
  )
)

(define-method set_global_accels
  (of-object "MooWindow")
  (c-name "moo_window_set_global_accels")
  (return-type "none")
  (parameters
    '("gboolean" "global")
  )
)

(define-function window_set_default_geometry
  (c-name "moo_window_set_default_geometry")
  (return-type "none")
  (parameters
    '("const-char*" "geometry")
  )
)



;; From moocmdview.h

(define-function cmd_view_get_type
  (c-name "moo_cmd_view_get_type")
  (return-type "GType")
)

(define-function cmd_view_new
  (c-name "moo_cmd_view_new")
  (is-constructor-of "MooCmdView")
  (return-type "GtkWidget*")
)

(define-method set_filter
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_set_filter")
  (return-type "none")
  (parameters
    '("MooOutputFilter*" "filter")
  )
)

(define-method add_filter_dirs
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_add_filter_dirs")
  (return-type "none")
  (parameters
    '("char**" "dirs")
  )
)

(define-method run_command
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_run_command")
  (return-type "gboolean")
  (parameters
    '("const-char*" "cmd")
    '("const-char*" "working_dir")
    '("const-char*" "job_name")
  )
)

(define-method run_command_full
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_run_command_full")
  (return-type "gboolean")
  (parameters
    '("const-char*" "cmd")
    '("const-char*" "display_cmd")
    '("const-char*" "working_dir")
    '("char**" "envp")
    '("const-char*" "job_name")
  )
)

(define-method abort
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_abort")
  (return-type "none")
)

(define-method running
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_running")
  (return-type "gboolean")
)



;; From mooeditwindowoutput.h

(define-method present_output
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_present_output")
  (return-type "none")
)

(define-method get_output
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_get_output")
  (return-type "GtkWidget*")
)

(define-method get_output_pane
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_get_output_pane")
  (return-type "GtkWidget*")
)



;; From moolineview.h

(define-function line_view_get_type
  (c-name "moo_line_view_get_type")
  (return-type "GType")
)

(define-function line_view_data_get_type
  (c-name "moo_line_view_data_get_type")
  (return-type "GType")
)

(define-function line_view_new
  (c-name "moo_line_view_new")
  (is-constructor-of "MooLineView")
  (return-type "GtkWidget*")
)

(define-method set_data
  (of-object "MooLineView")
  (c-name "moo_line_view_set_data")
  (return-type "none")
  (parameters
    '("int" "line")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_line_data
  (of-object "MooLineView")
  (c-name "moo_line_view_set_line_data")
  (return-type "none")
  (parameters
    '("int" "line")
    '("const-GValue*" "data")
  )
)

(define-method set_boxed
  (of-object "MooLineView")
  (c-name "moo_line_view_set_boxed")
  (return-type "none")
  (parameters
    '("int" "line")
    '("GType" "type")
    '("gpointer" "data")
  )
)

(define-method get_data
  (of-object "MooLineView")
  (c-name "moo_line_view_get_data")
  (return-type "gpointer")
  (parameters
    '("int" "line")
  )
)

(define-method get_line_data
  (of-object "MooLineView")
  (c-name "moo_line_view_get_line_data")
  (return-type "gboolean")
  (parameters
    '("int" "line")
    '("GValue*" "dest")
  )
)

(define-method get_boxed
  (of-object "MooLineView")
  (c-name "moo_line_view_get_boxed")
  (return-type "gpointer")
  (parameters
    '("int" "line")
    '("GType" "type")
  )
)

(define-method create_tag
  (of-object "MooLineView")
  (c-name "moo_line_view_create_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "tag_name")
    '("const-char*" "first_property_name")
  )
  (varargs #t)
)

(define-method lookup_tag
  (of-object "MooLineView")
  (c-name "moo_line_view_lookup_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "tag_name")
  )
)

(define-method clear
  (of-object "MooLineView")
  (c-name "moo_line_view_clear")
  (return-type "none")
)

(define-method start_line
  (of-object "MooLineView")
  (c-name "moo_line_view_start_line")
  (return-type "int")
)

(define-method write
  (of-object "MooLineView")
  (c-name "moo_line_view_write")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("gssize" "len")
    '("GtkTextTag*" "tag")
  )
)

(define-method end_line
  (of-object "MooLineView")
  (c-name "moo_line_view_end_line")
  (return-type "none")
)

(define-method write_line
  (of-object "MooLineView")
  (c-name "moo_line_view_write_line")
  (return-type "int")
  (parameters
    '("const-char*" "text")
    '("gssize" "len")
    '("GtkTextTag*" "tag")
  )
)

(define-method set_cursor
  (of-object "MooLineView")
  (c-name "moo_line_view_set_cursor")
  (return-type "none")
  (parameters
    '("int" "line")
    '("MooTextCursor" "cursor")
  )
)



;; From moooutputfilter.h

(define-function output_filter_get_type
  (c-name "moo_output_filter_get_type")
  (return-type "GType")
)

(define-function file_line_data_get_type
  (c-name "moo_file_line_data_get_type")
  (return-type "GType")
)

(define-function file_line_data_new
  (c-name "moo_file_line_data_new")
  (is-constructor-of "MooFileLineData")
  (return-type "MooFileLineData*")
  (parameters
    '("const-char*" "file")
    '("int" "line")
    '("int" "character")
  )
)

(define-method free
  (of-object "MooFileLineData")
  (c-name "moo_file_line_data_free")
  (return-type "none")
)

(define-method set_view
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_set_view")
  (return-type "none")
  (parameters
    '("MooLineView*" "view")
  )
)

(define-method get_view
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_get_view")
  (return-type "MooLineView*")
)

(define-method stdout_line
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_stdout_line")
  (return-type "gboolean")
  (parameters
    '("const-char*" "line")
  )
)

(define-method stderr_line
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_stderr_line")
  (return-type "gboolean")
  (parameters
    '("const-char*" "line")
  )
)

(define-method cmd_start
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_cmd_start")
  (return-type "none")
  (parameters
    '("const-char*" "working_dir")
  )
)

(define-method cmd_exit
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_cmd_exit")
  (return-type "gboolean")
  (parameters
    '("int" "status")
  )
)

(define-method set_active_file
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_set_active_file")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method add_active_dirs
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_add_active_dirs")
  (return-type "none")
  (parameters
    '("char**" "dirs")
  )
)

(define-method get_active_file
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_get_active_file")
  (return-type "const-char*")
)

(define-method set_window
  (of-object "MooOutputFilter")
  (c-name "moo_output_filter_set_window")
  (return-type "none")
  (parameters
    '("gpointer" "window")
  )
)


