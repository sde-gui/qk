;; kate: lang scheme; strip on;
;; hand-edited

; object definitions ...
(define-object EditWindow
  (in-module "Moo")
  (parent "MooWindow")
  (c-name "MooEditWindow")
  (gtype-id "MOO_TYPE_EDIT_WINDOW")
  (fields
    '("MooBigPaned*" "paned")
  )
)

(define-object Editor
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooEditor")
  (gtype-id "MOO_TYPE_EDITOR")
)

(define-object Indenter
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooIndenter")
  (gtype-id "MOO_TYPE_INDENTER")
)

(define-object LangMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooLangMgr")
  (gtype-id "MOO_TYPE_LANG_MGR")
)

(define-object TextBuffer
  (in-module "Moo")
  (parent "GtkTextBuffer")
  (c-name "MooTextBuffer")
  (gtype-id "MOO_TYPE_TEXT_BUFFER")
)

(define-object TextView
  (in-module "Moo")
  (parent "GtkTextView")
  (c-name "MooTextView")
  (gtype-id "MOO_TYPE_TEXT_VIEW")
)

(define-object LineView
  (in-module "Moo")
  (parent "MooTextView")
  (c-name "MooLineView")
  (gtype-id "MOO_TYPE_LINE_VIEW")
)

(define-object CmdView
  (in-module "Moo")
  (parent "MooLineView")
  (c-name "MooCmdView")
  (gtype-id "MOO_TYPE_CMD_VIEW")
)

(define-object Edit
  (in-module "Moo")
  (parent "MooTextView")
  (c-name "MooEdit")
  (gtype-id "MOO_TYPE_EDIT")
)

(define-object LineMark
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooLineMark")
  (gtype-id "MOO_TYPE_LINE_MARK")
)

(define-object Fold
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooFold")
  (gtype-id "MOO_TYPE_FOLD")
)


(define-boxed Lang
  (in-module "Moo")
  (c-name "MooLang")
  (gtype-id "MOO_TYPE_LANG")
  (copy-func "moo_lang_ref")
  (release-func "moo_lang_unref")
  (fields
    '("char*" "id")
    '("char*" "display_name")
    '("char*" "section")
    '("char*" "version")
    '("char*" "author")
    '("GSList*" "mime_types")
    '("GSList*" "extensions")
    '("char*" "brackets")
    '("char*" "line_comment")
    '("char*" "block_comment_start")
    '("char*" "block_comment_end")
    '("char*" "sample")
  )
)

(define-boxed TextStyle
  (in-module "Moo")
  (c-name "MooTextStyle")
  (gtype-id "MOO_TYPE_TEXT_STYLE")
  (copy-func "moo_text_style_copy")
  (release-func "moo_text_style_free")
  (fields
    '("char*" "default_style")
    '("GdkColor" "foreground")
    '("GdkColor" "background")
    '("gboolean" "bold")
    '("gboolean" "italic")
    '("gboolean" "underline")
    '("gboolean" "strikethrough")
    '("gboolean" "modified")
    '("MooTextStyleMask" "mask")
  )
)


(include "mooplugin.defs")
(include "mooeditor.defs")

;; Enumerations and flags ...

(define-enum EditOnExternalChanges
  (in-module "Moo")
  (c-name "MooEditOnExternalChanges")
  (gtype-id "MOO_TYPE_EDIT_ON_EXTERNAL_CHANGES")
  (values
    '("dont-watch-file" "MOO_EDIT_DONT_WATCH_FILE")
    '("always-alert" "MOO_EDIT_ALWAYS_ALERT")
    '("always-reload" "MOO_EDIT_ALWAYS_RELOAD")
    '("reload-if-safe" "MOO_EDIT_RELOAD_IF_SAFE")
  )
)

(define-flags EditStatus
  (in-module "Moo")
  (c-name "MooEditStatus")
  (gtype-id "MOO_TYPE_EDIT_STATUS")
  (values
    '("modified-on-disk" "MOO_EDIT_MODIFIED_ON_DISK")
    '("deleted" "MOO_EDIT_DELETED")
    '("changed-on-disk" "MOO_EDIT_CHANGED_ON_DISK")
    '("modified" "MOO_EDIT_MODIFIED")
    '("clean" "MOO_EDIT_CLEAN")
  )
)

(define-flags TextSearchFlags
  (in-module "Moo")
  (c-name "MooTextSearchFlags")
  (gtype-id "MOO_TYPE_TEXT_SEARCH_FLAGS")
  (values
    '("caseless" "MOO_TEXT_SEARCH_CASELESS")
    '("regex" "MOO_TEXT_SEARCH_REGEX")
  )
)

(define-flags TextReplaceResponse
  (in-module "Moo")
  (c-name "MooTextReplaceResponse")
  (gtype-id "MOO_TYPE_TEXT_REPLACE_RESPONSE")
  (values
    '("stop" "MOO_TEXT_REPLACE_STOP")
    '("skip" "MOO_TEXT_REPLACE_SKIP")
    '("do-replace" "MOO_TEXT_REPLACE_DO_REPLACE")
    '("all" "MOO_TEXT_REPLACE_ALL")
  )
)

(define-flags TextStyleMask
  (in-module "Moo")
  (c-name "MooTextStyleMask")
  (gtype-id "MOO_TYPE_TEXT_STYLE_MASK")
  (values
    '("foreground" "MOO_TEXT_STYLE_FOREGROUND")
    '("background" "MOO_TEXT_STYLE_BACKGROUND")
    '("bold" "MOO_TEXT_STYLE_BOLD")
    '("italic" "MOO_TEXT_STYLE_ITALIC")
    '("underline" "MOO_TEXT_STYLE_UNDERLINE")
    '("strikethrough" "MOO_TEXT_STYLE_STRIKETHROUGH")
  )
)

(define-enum TextSelectionType
  (in-module "Moo")
  (c-name "MooTextSelectionType")
  (gtype-id "MOO_TYPE_TEXT_SELECTION_TYPE")
  (values
    '("chars" "MOO_TEXT_SELECT_CHARS")
    '("words" "MOO_TEXT_SELECT_WORDS")
    '("lines" "MOO_TEXT_SELECT_LINES")
  )
)


;; From moocmdview.h

(define-function moo_cmd_view_new
  (c-name "moo_cmd_view_new")
  (is-constructor-of "MooCmdView")
  (return-type "GtkWidget*")
)

(define-method run_command
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_run_command")
  (return-type "gboolean")
  (parameters
    '("const-char*" "cmd")
    '("const-char*" "job_name" (null-ok) (default "NULL"))
  )
)

(define-method abort
  (of-object "MooCmdView")
  (c-name "moo_cmd_view_abort")
  (return-type "none")
)



;; From mooedit.h

(define-method get_editor
  (of-object "MooEdit")
  (c-name "moo_edit_get_editor")
  (return-type "MooEditor*")
)

(define-method get_filename
  (of-object "MooEdit")
  (c-name "moo_edit_get_filename")
  (return-type "const-char*")
)

(define-method get_basename
  (of-object "MooEdit")
  (c-name "moo_edit_get_basename")
  (return-type "const-char*")
)

(define-method get_display_filename
  (of-object "MooEdit")
  (c-name "moo_edit_get_display_filename")
  (return-type "const-char*")
)

(define-method get_display_basename
  (of-object "MooEdit")
  (c-name "moo_edit_get_display_basename")
  (return-type "const-char*")
)

(define-method get_encoding
  (of-object "MooEdit")
  (c-name "moo_edit_get_encoding")
  (return-type "const-char*")
)

(define-method set_modified
  (of-object "MooEdit")
  (c-name "moo_edit_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "modified")
  )
)

(define-method get_clean
  (of-object "MooEdit")
  (c-name "moo_edit_get_clean")
  (return-type "gboolean")
)

(define-method set_clean
  (of-object "MooEdit")
  (c-name "moo_edit_set_clean")
  (return-type "none")
  (parameters
    '("gboolean" "clean")
  )
)

(define-method get_status
  (of-object "MooEdit")
  (c-name "moo_edit_get_status")
  (return-type "MooEditStatus")
)

(define-method status_changed
  (of-object "MooEdit")
  (c-name "moo_edit_status_changed")
  (return-type "none")
)

(define-method get_readonly
  (of-object "MooEdit")
  (c-name "moo_edit_get_readonly")
  (return-type "gboolean")
)

(define-method set_readonly
  (of-object "MooEdit")
  (c-name "moo_edit_set_readonly")
  (return-type "none")
  (parameters
    '("gboolean" "readonly")
  )
)

(define-function moo_edit_file_info_new
  (c-name "moo_edit_file_info_new")
  (is-constructor-of "MooEditFileInfo")
  (return-type "MooEditFileInfo*")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "encoding" (null-ok) (default "NULL"))
  )
)

(define-method copy
  (of-object "MooEditFileInfo")
  (c-name "moo_edit_file_info_copy")
  (return-type "MooEditFileInfo*")
)

(define-method free
  (of-object "MooEditFileInfo")
  (c-name "moo_edit_file_info_free")
  (return-type "none")
)

(define-method close
  (of-object "MooEdit")
  (c-name "moo_edit_close")
  (parameters
    '("gboolean" "ask_confirm" (null-ok) (default "TRUE"))
  )
  (return-type "gboolean")
  (docstring "close(ask_confirm=True) -> bool - closes document.\n"
             "\n"
             "If ask_confirm is False, closes document. Otherwise, checks\n"
             "whether document is saved, and ask user confirmation if needed.")
)

(define-method save
  (of-object "MooEdit")
  (c-name "moo_edit_save")
  (parameters
    '("GError**" "error")
  )
  (return-type "gboolean")
  (docstring "save() -> None - saves document.\n"
             "\n"
             "Saves document and raises gobject.GError on error.\n"
             "Note that document must have filename, i.e. it should have \n"
             "been saved before or opened from disk. Otherwise it will present\n"
             "Save As dialog."
  )
)

(define-method save_as
  (of-object "MooEdit")
  (c-name "moo_edit_save_as")
  (return-type "none")
  (parameters
    '("const-char*" "filename" (null-ok) (default "NULL"))
    '("const-char*" "encoding" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
  (docstring "save_as([filename, encoding]) -> None - saves document with new name.\n"
             "\n"
             "Saves document and raises gobject.GError on error.\n"
             "If filename is not specified, then it presents Save As \n"
             "dialog asking user for name to use."
  )
)

(define-method save_copy
  (of-object "MooEdit")
  (c-name "moo_edit_save_copy")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "encoding" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
  (docstring "save_copy(filename, [encoding]) -> None - saves copy of document.\n"
             "\n"
             "Saves document contents with given name, and raises gobject.GError on\n"
             "error."
  )
)


;; From mooeditprefs.h

(define-function moo_edit_prefs_page_new
  (c-name "moo_edit_prefs_page_new")
  (is-constructor-of "MooEditPrefsPage")
  (return-type "GtkWidget*")
  (parameters
    '("MooEditor*" "editor")
  )
)

(define-function moo_edit_colors_prefs_page_new
  (c-name "moo_edit_colors_prefs_page_new")
  (is-constructor-of "MooEditColorsPrefsPage")
  (return-type "GtkWidget*")
  (parameters
    '("MooEditor*" "editor")
  )
)

(define-function moo_edit_setting
  (c-name "moo_edit_setting")
  (return-type "const-char*")
  (parameters
    '("const-char*" "setting_name")
  )
)



;; From mooeditwindow.h

(define-method get_active_doc
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_get_active_doc")
  (return-type "MooEdit*")
)

(define-method set_active_doc
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_set_active_doc")
  (return-type "none")
  (parameters
    '("MooEdit*" "edit")
  )
)

(define-method list_docs
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_list_docs")
  (return-type "GSList*")
)

(define-method num_docs
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_num_docs")
  (return-type "guint")
)

(define-method set_title_prefix
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_set_title_prefix")
  (return-type "none")
  (parameters
    '("const-char*" "prefix" (null-ok))
  )
)

(define-method add_pane
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_add_pane")
  (return-type "gboolean")
  (parameters
    '("const-char*" "user_id")
    '("GtkWidget*" "widget")
    '("MooPaneLabel*" "label")
    '("MooPanePosition" "position")
  )
)

(define-method remove_pane
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_remove_pane")
  (return-type "gboolean")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method get_pane
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_get_pane")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method add_stop_client
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_add_stop_client")
  (return-type "none")
  (parameters
    '("GObject*" "client")
  )
)

(define-method remove_stop_client
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_remove_stop_client")
  (return-type "none")
  (parameters
    '("GObject*" "client")
  )
)

(define-method abort_jobs
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_abort_jobs")
  (return-type "none")
)


;; From mooindenter.h

(define-function moo_indenter_new
  (c-name "moo_indenter_new")
  (is-constructor-of "MooIndenter")
  (return-type "MooIndenter*")
  (parameters
    '("MooEdit*" "doc")
    '("const-char*" "name")
  )
)

(define-method make_space
  (of-object "MooIndenter")
  (c-name "moo_indenter_make_space")
  (return-type "char*")
  (parameters
    '("guint" "len")
    '("guint" "start")
  )
)

(define-method character
  (of-object "MooIndenter")
  (c-name "moo_indenter_character")
  (return-type "none")
  (parameters
    '("gunichar" "inserted_char")
    '("GtkTextIter*" "where")
  )
)

(define-method tab
  (of-object "MooIndenter")
  (c-name "moo_indenter_tab")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method shift_lines
  (of-object "MooIndenter")
  (c-name "moo_indenter_shift_lines")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
    '("guint" "first_line")
    '("guint" "last_line")
    '("int" "direction")
  )
)

(define-function moo_iter_get_blank_offset
  (c-name "moo_iter_get_blank_offset")
  (return-type "int")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("guint" "tab_width")
  )
)

(define-function moo_text_iter_get_prev_stop
  (c-name "moo_text_iter_get_prev_stop")
  (return-type "guint")
  (parameters
    '("const-GtkTextIter*" "start")
    '("guint" "tab_width")
    '("guint" "offset")
    '("gboolean" "same_line")
  )
)



;; From moolangmgr.h

(define-function moo_lang_mgr_new
  (c-name "moo_lang_mgr_new")
  (is-constructor-of "MooLangMgr")
  (return-type "MooLangMgr*")
)

(define-method get_available_langs
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_available_langs")
  (return-type "GSList*")
)

(define-method get_sections
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_sections")
  (return-type "GSList*")
)

(define-method get_lang_for_file
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_lang_for_file")
  (return-type "MooLang*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method get_lang_for_filename
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_lang_for_filename")
  (return-type "MooLang*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method get_lang_for_mime_type
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_lang_for_mime_type")
  (return-type "MooLang*")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-method get_lang
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_lang")
  (return-type "MooLang*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_context
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_context")
  (return-type "MooContext*")
  (parameters
    '("const-char*" "lang_name")
    '("const-char*" "ctx_name")
  )
)

(define-method list_schemes
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_list_schemes")
  (return-type "GSList*")
)

(define-method get_style
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_style")
  (return-type "MooTextStyle*")
  (parameters
    '("const-char*" "lang_name")
    '("const-char*" "style_name")
    '("MooTextStyleScheme*" "scheme")
  )
)

(define-method get_active_scheme
  (of-object "MooLangMgr")
  (c-name "moo_lang_mgr_get_active_scheme")
  (return-type "MooTextStyleScheme*")
)



;; From moolineview.h

(define-function moo_line_view_new
  (c-name "moo_line_view_new")
  (is-constructor-of "MooLineView")
  (return-type "GtkWidget*")
)

(define-method set_line_data
  (of-object "MooLineView")
  (c-name "moo_line_view_set_line_data")
  (return-type "none")
  (parameters
    '("int" "line")
    '("const-GValue*" "data")
  )
)

(define-method get_line_data
  (of-object "MooLineView")
  (c-name "moo_line_view_get_line_data")
  (return-type "gboolean")
  (parameters
    '("int" "line")
    '("const-GValue*" "data")
  )
)

(define-method create_tag
  (of-object "MooLineView")
  (c-name "moo_line_view_create_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "tag_name")
    '("const-char*" "first_property_name")
  )
  (varargs #t)
)

(define-method lookup_tag
  (of-object "MooLineView")
  (c-name "moo_line_view_lookup_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "tag_name")
  )
)

(define-method clear
  (of-object "MooLineView")
  (c-name "moo_line_view_clear")
  (return-type "none")
)

(define-method start_line
  (of-object "MooLineView")
  (c-name "moo_line_view_start_line")
  (return-type "int")
)

(define-method write
  (of-object "MooLineView")
  (c-name "moo_line_view_write")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("gssize" "len" (null-ok) (default "-1"))
    '("GtkTextTag*" "tag" (null-ok) (default "NULL"))
  )
)

(define-method end_line
  (of-object "MooLineView")
  (c-name "moo_line_view_end_line")
  (return-type "none")
)

(define-method write_line
  (of-object "MooLineView")
  (c-name "moo_line_view_write_line")
  (return-type "int")
  (parameters
    '("const-char*" "text")
    '("gssize" "len" (null-ok) (default "-1"))
    '("GtkTextTag*" "tag" (null-ok) (default "NULL"))
  )
)



;; From mootextbuffer.h

(define-function moo_text_buffer_new
  (c-name "moo_text_buffer_new")
  (is-constructor-of "MooTextBuffer")
  (return-type "GtkTextBuffer*")
  (parameters
    '("GtkTextTagTable*" "table")
  )
)

(define-method set_lang
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_set_lang")
  (return-type "none")
  (parameters
    '("MooLang*" "lang" (null-ok))
  )
)

(define-method get_lang
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_get_lang")
  (return-type "MooLang*")
)

(define-method set_highlight
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_set_highlight")
  (return-type "none")
  (parameters
    '("gboolean" "highlight")
  )
)

(define-method get_highlight
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_get_highlight")
  (return-type "gboolean")
)

(define-method set_bracket_match_style
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_set_bracket_match_style")
  (return-type "none")
  (parameters
    '("const-MooTextStyle*" "style")
  )
)

(define-method set_bracket_mismatch_style
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_set_bracket_mismatch_style")
  (return-type "none")
  (parameters
    '("const-MooTextStyle*" "style")
  )
)

(define-method set_brackets
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_set_brackets")
  (return-type "none")
  (parameters
    '("const-char*" "brackets")
  )
)

(define-method has_text
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_has_text")
  (return-type "gboolean")
)

(define-method has_selection
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_has_selection")
  (return-type "gboolean")
)

(define-method apply_scheme
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_apply_scheme")
  (return-type "none")
  (parameters
    '("MooTextStyleScheme*" "scheme" (null-ok))
  )
)

(define-method add_line_mark
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_add_line_mark")
  (return-type "none")
  (parameters
    '("MooLineMark*" "mark")
    '("int" "line" (null-ok) (default "0"))
  )
)

(define-method delete_line_mark
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_delete_line_mark")
  (return-type "none")
  (parameters
    '("MooLineMark*" "mark")
  )
)

(define-method move_line_mark
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_move_line_mark")
  (return-type "none")
  (parameters
    '("MooLineMark*" "mark")
    '("int" "line")
  )
)

(define-method get_line_marks_in_range
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_get_line_marks_in_range")
  (return-type "GSList*")
  (parameters
    '("int" "first_line")
    '("int" "last_line")
  )
)

(define-method add_fold
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_add_fold")
  (return-type "MooFold*")
  (parameters
    '("int" "first_line")
    '("int" "last_line")
  )
)

(define-method delete_fold
  (of-object "MooTextBuffer")
  (c-name "moo_text_buffer_delete_fold")
  (return-type "none")
  (parameters
    '("MooFold*" "fold")
  )
)


;; From mootextiter.h

(define-function moo_text_iter_find_matching_bracket
  (c-name "moo_text_iter_find_matching_bracket")
  (return-type "MooBracketMatchType")
  (parameters
    '("GtkTextIter*" "iter")
    '("int" "limit")
  )
)

(define-function moo_text_iter_at_bracket
  (c-name "moo_text_iter_at_bracket")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)



;; From mootextstyle.h

(define-function moo_text_style_new
  (c-name "moo_text_style_new")
  (is-constructor-of "MooTextStyle")
  (return-type "MooTextStyle*")
  (parameters
    '("const-char*" "default_style" (null-ok) (default "NULL"))
    '("const-GdkColor*" "foreground")
    '("const-GdkColor*" "background")
    '("gboolean" "bold")
    '("gboolean" "italic")
    '("gboolean" "underline")
    '("gboolean" "strikethrough")
    '("MooTextStyleMask" "mask")
    '("gboolean" "modified")
  )
)

(define-method copy_content
  (of-object "MooTextStyle")
  (c-name "moo_text_style_copy_content")
  (return-type "none")
  (parameters
    '("const-MooTextStyle*" "src")
  )
)

(define-method compose
  (of-object "MooTextStyle")
  (c-name "moo_text_style_compose")
  (return-type "none")
  (parameters
    '("const-MooTextStyle*" "src")
  )
)



;; From mootextstylescheme.h

(define-function moo_text_style_scheme_new_empty
  (c-name "moo_text_style_scheme_new_empty")
  (return-type "MooTextStyleScheme*")
  (parameters
    '("const-char*" "name")
    '("MooTextStyleScheme*" "base")
  )
)

(define-function moo_text_style_scheme_new_default
  (c-name "moo_text_style_scheme_new_default")
  (return-type "MooTextStyleScheme*")
)

(define-method copy
  (of-object "MooTextStyleScheme")
  (c-name "moo_text_style_scheme_copy")
  (return-type "MooTextStyleScheme*")
)

(define-method list_default
  (of-object "MooTextStyleScheme")
  (c-name "moo_text_style_scheme_list_default")
  (return-type "GSList*")
)

(define-method compose
  (of-object "MooTextStyleScheme")
  (c-name "moo_text_style_scheme_compose")
  (return-type "none")
  (parameters
    '("const-char*" "language_name" (null-ok))
    '("const-char*" "style_name")
    '("const-MooTextStyle*" "style")
  )
)

(define-method set
  (of-object "MooTextStyleScheme")
  (c-name "moo_text_style_scheme_set")
  (return-type "none")
  (parameters
    '("const-char*" "language_name" (null-ok))
    '("const-char*" "style_name")
    '("const-MooTextStyle*" "style")
  )
)

(define-method get
  (of-object "MooTextStyleScheme")
  (c-name "moo_text_style_scheme_get")
  (return-type "const-MooTextStyle*")
  (parameters
    '("const-char*" "language_name" (null-ok))
    '("const-char*" "style_name")
  )
)



;; From mootextview.h

(define-function moo_text_view_new
  (c-name "moo_text_view_new")
  (is-constructor-of "MooTextView")
  (return-type "MooTextView*")
)

(define-method select_all
  (of-object "MooTextView")
  (c-name "moo_text_view_select_all")
  (return-type "none")
)

(define-method get_selection
  (of-object "MooTextView")
  (c-name "moo_text_view_get_selection")
  (return-type "char*")
)

(define-method get_text
  (of-object "MooTextView")
  (c-name "moo_text_view_get_text")
  (return-type "char*")
)

(define-method has_selection
  (of-object "MooTextView")
  (c-name "moo_text_view_has_selection")
  (return-type "gboolean")
)

(define-method has_text
  (of-object "MooTextView")
  (c-name "moo_text_view_has_text")
  (return-type "gboolean")
)

(define-method delete_selection
  (of-object "MooTextView")
  (c-name "moo_text_view_delete_selection")
  (return-type "none")
)

(define-method can_redo
  (of-object "MooTextView")
  (c-name "moo_text_view_can_redo")
  (return-type "gboolean")
)

(define-method can_undo
  (of-object "MooTextView")
  (c-name "moo_text_view_can_undo")
  (return-type "gboolean")
)

(define-method redo
  (of-object "MooTextView")
  (c-name "moo_text_view_redo")
  (return-type "gboolean")
)

(define-method undo
  (of-object "MooTextView")
  (c-name "moo_text_view_undo")
  (return-type "gboolean")
)

(define-method begin_not_undoable_action
  (of-object "MooTextView")
  (c-name "moo_text_view_begin_not_undoable_action")
  (return-type "none")
)

(define-method end_not_undoable_action
  (of-object "MooTextView")
  (c-name "moo_text_view_end_not_undoable_action")
  (return-type "none")
)

;; (define-method goto_line
;;   (of-object "MooTextView")
;;   (c-name "moo_text_view_goto_line")
;;   (return-type "none")
;;   (parameters
;;     '("int" "line")
;;   )
;; )

(define-method set_font_from_string
  (of-object "MooTextView")
  (c-name "moo_text_view_set_font_from_string")
  (return-type "none")
  (parameters
    '("const-char*" "font")
  )
)

(define-method get_indenter
  (of-object "MooTextView")
  (c-name "moo_text_view_get_indenter")
  (return-type "MooIndenter*")
)

(define-method set_indenter
  (of-object "MooTextView")
  (c-name "moo_text_view_set_indenter")
  (return-type "none")
  (parameters
    '("MooIndenter*" "indenter")
  )
)

(define-method move_cursor
  (of-object "MooTextView")
  (c-name "moo_text_view_move_cursor")
  (return-type "none")
  (parameters
    '("int" "line")
    '("int" "character")
    '("gboolean" "in_idle")
  )
)

(define-method set_highlight_current_line
  (of-object "MooTextView")
  (c-name "moo_text_view_set_highlight_current_line")
  (return-type "none")
  (parameters
    '("gboolean" "highlight")
  )
)

(define-method set_current_line_color
  (of-object "MooTextView")
  (c-name "moo_text_view_set_current_line_color")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color")
  )
)

(define-method set_cursor_color
  (of-object "MooTextView")
  (c-name "moo_text_view_set_cursor_color")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color")
  )
)

(define-method apply_scheme
  (of-object "MooTextView")
  (c-name "moo_text_view_apply_scheme")
  (return-type "none")
  (parameters
    '("MooTextStyleScheme*" "scheme")
  )
)

(define-method lookup_tag
  (of-object "MooTextView")
  (c-name "moo_text_view_lookup_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method set_lang
  (of-object "MooTextView")
  (c-name "moo_text_view_set_lang")
  (return-type "none")
  (parameters
    '("MooLang*" "lang" (null-ok))
  )
)

(define-method add_child_in_border
  (of-object "MooTextView")
  (c-name "moo_text_view_add_child_in_border")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextWindowType" "which_border")
  )
)


;; From mootextsearch.h

(define-function search_forward
  (c-name "moo_text_search_forward")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-char*" "str")
    '("MooTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "end" (null-ok))
  )
)

(define-function search_backward
  (c-name "moo_text_search_backward")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-char*" "str")
    '("MooTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "end" (null-ok))
  )
)

(define-function replace_all
  (c-name "moo_text_replace_all")
  (return-type "int")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
    '("const-char*" "text")
    '("const-char*" "replacement")
    '("MooTextSearchFlags" "flags")
  )
)

(define-function replace_all_interactive
  (c-name "moo_text_replace_all_interactive")
  (return-type "int")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
    '("const-char*" "text")
    '("const-char*" "replacement")
    '("MooTextSearchFlags" "flags")
    '("MooTextReplaceFunc" "func")
    '("gpointer" "data")
  )
)



;; From moo/mooedit/moolinemark.h

(define-function moo_line_mark_new
  (c-name "moo_line_mark_new")
  (is-constructor-of "MooLineMark")
  (return-type "MooLineMark*")
  (properties
    '("name" (optional))
    '("visible" (optional))
    '("stock_id" (optional))
    '("pixbuf" (optional))
    '("background" (optional))
    '("background_gdk" (optional))
  )
)

(define-method set_background_gdk
  (of-object "MooLineMark")
  (c-name "moo_line_mark_set_background_gdk")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color")
  )
)

(define-method set_background
  (of-object "MooLineMark")
  (c-name "moo_line_mark_set_background")
  (return-type "none")
  (parameters
    '("const-char*" "color")
  )
)

(define-method set_name
  (of-object "MooLineMark")
  (c-name "moo_line_mark_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_name
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_name")
  (return-type "const-char*")
)

(define-method get_line
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_line")
  (return-type "int")
)

(define-method get_buffer
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_buffer")
  (return-type "MooTextBuffer*")
)

(define-method get_visible
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_visible")
  (return-type "gboolean")
)

(define-method set_stock_id
  (of-object "MooLineMark")
  (c-name "moo_line_mark_set_stock_id")
  (return-type "none")
  (parameters
    '("const-char*" "stock_id")
  )
)

(define-method set_pixbuf
  (of-object "MooLineMark")
  (c-name "moo_line_mark_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method get_stock_id
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_stock_id")
  (return-type "const-char*")
)

(define-method get_pixbuf
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_background_gc
  (of-object "MooLineMark")
  (c-name "moo_line_mark_get_background_gc")
  (return-type "GdkGC*")
)
