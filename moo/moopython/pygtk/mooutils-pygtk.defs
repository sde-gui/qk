;; kate: lang scheme; strip on;
;; Hand-edited

(define-object BigPaned
  (in-module "Moo")
  (parent "GtkFrame")
  (c-name "MooBigPaned")
  (gtype-id "MOO_TYPE_BIG_PANED")
)

(define-object Combo
  (in-module "Moo")
  (parent "GtkTable")
  (c-name "MooCombo")
  (gtype-id "MOO_TYPE_COMBO")
)

(define-object Entry
  (in-module "Moo")
  (parent "GtkEntry")
  (c-name "MooEntry")
  (gtype-id "MOO_TYPE_ENTRY")
)

(define-boxed FileWatch
  (in-module "Moo")
  (c-name "MooFileWatch")
  (gtype-id "MOO_TYPE_FILE_WATCH")
)

(define-object FilterMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooFilterMgr")
  (gtype-id "MOO_TYPE_FILTER_MGR")
)

(define-object GladeXML
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooGladeXML")
  (gtype-id "MOO_TYPE_GLADE_XML")
  (final "true")
)

(define-object HistoryEntry
  (in-module "Moo")
  (parent "MooCombo")
  (c-name "MooHistoryCombo")
  (gtype-id "MOO_TYPE_HISTORY_COMBO")
)

(define-object HistoryList
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooHistoryList")
  (gtype-id "MOO_TYPE_HISTORY_LIST")
)

(define-object MenuMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooMenuMgr")
  (gtype-id "MOO_TYPE_MENU_MGR")
)

(define-object Notebook
  (in-module "Moo")
  (parent "GtkContainer")
  (c-name "MooNotebook")
  (gtype-id "MOO_TYPE_NOTEBOOK")
)

(define-object Paned
  (in-module "Moo")
  (parent "GtkBin")
  (c-name "MooPaned")
  (gtype-id "MOO_TYPE_PANED")
  (fields
    '("GtkWidget*" "button_box")
  )
)

(define-object PrefsDialog
  (in-module "Moo")
  (parent "GtkDialog")
  (c-name "MooPrefsDialog")
  (gtype-id "MOO_TYPE_PREFS_DIALOG")
)

(define-object PrefsDialogPage
  (in-module "Moo")
  (parent "GtkVBox")
  (c-name "MooPrefsDialogPage")
  (gtype-id "MOO_TYPE_PREFS_DIALOG_PAGE")
  (fields
    '("char*" "label")
    '("GdkPixbuf*" "icon")
    '("char*" "icon_stock_id")
    '("GSList*" "widgets")
    '("gboolean" "auto_apply")
;;     xml may not be wrapped
;;     '("MooGladeXML*" "xml")
  )
)

(define-object Window
  (in-module "Moo")
  (parent "GtkWindow")
  (c-name "MooWindow")
  (gtype-id "MOO_TYPE_WINDOW")
  (fields
    '("GtkAccelGroup*" "accel_group")
    '("GtkWidget*" "menubar")
    '("GtkWidget*" "toolbar")
    '("GtkWidget*" "vbox")
  )
)

(define-interface ActionBase
  (in-module "Moo")
  (c-name "MooActionBase")
  (gtype-id "MOO_TYPE_ACTION_BASE")
  (prerequisite "GtkAction")
)

(define-object ActionCollection
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooActionCollection")
  (gtype-id "MOO_TYPE_ACTION_COLLECTION")
)

(define-object Action
  (in-module "Moo")
  (parent "GtkAction")
  (c-name "MooAction")
  (gtype-id "MOO_TYPE_ACTION")
)

(define-object ToggleAction
  (in-module "Moo")
  (parent "GtkToggleAction")
  (c-name "MooToggleAction")
  (gtype-id "MOO_TYPE_TOGGLE_ACTION")
)

(define-object RadioAction
  (in-module "Moo")
  (parent "GtkRadioAction")
  (c-name "MooRadioAction")
  (gtype-id "MOO_TYPE_RADIO_ACTION")
)

(define-object MenuAction
  (in-module "Moo")
  (parent "MooAction")
  (c-name "MooMenuAction")
  (gtype-id "MOO_TYPE_MENU_ACTION")
)

(define-object UIXML
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooUIXML")
  (gtype-id "MOO_TYPE_UI_XML")
)

(define-object UndoStack
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooUndoStack")
  (gtype-id "MOO_TYPE_UNDO_STACK")
)

(define-object FileDialog
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooFileDialog")
  (gtype-id "MOO_TYPE_FILE_DIALOG")
)


(define-pointer UINode
  (in-module "Moo")
  (c-name "MooUINode")
  (gtype-id "MOO_TYPE_UI_NODE")
)

(define-boxed PaneLabel
  (in-module "Moo")
  (c-name "MooPaneLabel")
  (gtype-id "MOO_TYPE_PANE_LABEL")
  (copy-func "moo_pane_label_copy")
  (release-func "moo_pane_label_free")
)

(define-boxed PaneParams
  (in-module "Moo")
  (c-name "MooPaneParams")
  (gtype-id "MOO_TYPE_PANE_PARAMS")
  (copy-func "moo_pane_params_copy")
  (release-func "moo_pane_params_free")
)

(define-boxed HistoryItem
  (in-module "Moo")
  (c-name "MooHistoryItem")
  (gtype-id "MOO_TYPE_HISTORY_ITEM")
  (copy-func "moo_history_item_copy")
  (release-func "moo_history_item_free")
  (fields
    '("char*" "data")
    '("char*" "display")
    '("gboolean" "builtin")
  )
)

(define-boxed Closure
  (in-module "Moo")
  (c-name "MooClosure")
  (gtype-id "MOO_TYPE_CLOSURE")
  (copy-func "moo_closure_ref")
  (release-func "moo_closure_unref")
)

(define-boxed FileEvent
  (in-module "Moo")
  (c-name "MooFileEvent")
  (gtype-id "MOO_TYPE_FILE_EVENT")
  (fields
    '("MooFileEventCode" "code")
    '("int" "monitor_id")
    '("char*" "filename")
    '("GError*" "error")
  )
)


(include "moofileview.defs")


;; Enumerations and flags ...

(define-enum UIWidgetType
  (in-module "Moo")
  (c-name "MooUIWidgetType")
  (gtype-id "MOO_TYPE_UI_WIDGET_TYPE")
)

(define-enum FileDialogType
  (in-module "Moo")
  (c-name "MooFileDialogType")
  (gtype-id "MOO_TYPE_FILE_DIALOG_TYPE")
)

(define-enum FileEventCode
  (in-module "Moo")
  (c-name "MooFileEventCode")
  (gtype-id "MOO_TYPE_FILE_EVENT_CODE")
)

(define-enum PanePosition
  (in-module "Moo")
  (c-name "MooPanePosition")
  (gtype-id "MOO_TYPE_PANE_POSITION")
)

(define-flags PrefsMatchType
  (in-module "Moo")
  (c-name "MooPrefsMatchType")
  (gtype-id "MOO_TYPE_PREFS_MATCH_TYPE")
)

(define-enum PrefsType
  (in-module "Moo")
  (c-name "MooPrefsType")
  (gtype-id "MOO_TYPE_PREFS_TYPE")
)

(define-enum DataDirType
  (in-module "Moo")
  (c-name "MooDataDirType")
  (gtype-id "MOO_TYPE_DATA_DIR_TYPE")
)


;; From ../mooutils/moocombo.h

(define-function moo_combo_new
  (c-name "moo_combo_new")
  (is-constructor-of "MooCombo")
  (return-type "GtkWidget*")
)

(define-function moo_combo_new_text
  (c-name "moo_combo_new_text")
  (return-type "GtkWidget*")
)

(define-method add_text
  (of-object "MooCombo")
  (c-name "moo_combo_add_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method popup
  (of-object "MooCombo")
  (c-name "moo_combo_popup")
  (return-type "none")
)

(define-method popdown
  (of-object "MooCombo")
  (c-name "moo_combo_popdown")
  (return-type "none")
)

(define-method popup_shown
  (of-object "MooCombo")
  (c-name "moo_combo_popup_shown")
  (return-type "gboolean")
)

(define-method update_popup
  (of-object "MooCombo")
  (c-name "moo_combo_update_popup")
  (return-type "none")
)

(define-method set_active_iter
  (of-object "MooCombo")
  (c-name "moo_combo_set_active_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_active_iter
  (of-object "MooCombo")
  (c-name "moo_combo_get_active_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_model
  (of-object "MooCombo")
  (c-name "moo_combo_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_model
  (of-object "MooCombo")
  (c-name "moo_combo_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method set_row_separator_func
  (of-object "MooCombo")
  (c-name "moo_combo_set_row_separator_func")
  (return-type "none")
  (parameters
    '("MooComboRowSeparatorFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_text_column
  (of-object "MooCombo")
  (c-name "moo_combo_set_text_column")
  (return-type "none")
  (parameters
    '("int" "column")
  )
)

(define-method get_text_column
  (of-object "MooCombo")
  (c-name "moo_combo_get_text_column")
  (return-type "int")
)

(define-method set_get_text_func
  (of-object "MooCombo")
  (c-name "moo_combo_set_get_text_func")
  (return-type "none")
  (parameters
    '("MooComboGetTextFunc" "func")
    '("gpointer" "data")
  )
)

(define-method get_text_at_iter
  (of-object "MooCombo")
  (c-name "moo_combo_get_text_at_iter")
  (return-type "char*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_use_button
  (of-object "MooCombo")
  (c-name "moo_combo_set_use_button")
  (return-type "none")
  (parameters
    '("gboolean" "use")
  )
)

(define-method entry_set_text
  (of-object "MooCombo")
  (c-name "moo_combo_entry_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method entry_get_text
  (of-object "MooCombo")
  (c-name "moo_combo_entry_get_text")
  (return-type "const-char*")
)

(define-method select_region
  (of-object "MooCombo")
  (c-name "moo_combo_select_region")
  (return-type "none")
  (parameters
    '("int" "start")
    '("int" "end")
  )
)



;; From ../mooutils/moodialogs.h

(define-function font_dialog
  (c-name "moo_font_dialog")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "parent")
    '("const-char*" "title")
    '("const-char*" "start_font")
    '("gboolean" "fixed_width")
  )
)

(define-function error_dialog
  (c-name "moo_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("const-char*" "text")
    '("const-char*" "secondary_text" (null-ok) (default "NULL"))
  )
)

(define-function info_dialog
  (c-name "moo_info_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("const-char*" "text")
    '("const-char*" "secondary_text" (null-ok) (default "NULL"))
  )
)

(define-function warning_dialog
  (c-name "moo_warning_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("const-char*" "text")
    '("const-char*" "secondary_text" (null-ok) (default "NULL"))
  )
)



;; From ../mooutils/mooentry.h

(define-function moo_entry_new
  (c-name "moo_entry_new")
  (is-constructor-of "MooEntry")
  (return-type "GtkWidget*")
)

(define-method undo
  (of-object "MooEntry")
  (c-name "moo_entry_undo")
  (return-type "none")
)

(define-method redo
  (of-object "MooEntry")
  (c-name "moo_entry_redo")
  (return-type "none")
)

(define-method begin_undo_group
  (of-object "MooEntry")
  (c-name "moo_entry_begin_undo_group")
  (return-type "none")
)

(define-method end_undo_group
  (of-object "MooEntry")
  (c-name "moo_entry_end_undo_group")
  (return-type "none")
)

(define-method clear_undo
  (of-object "MooEntry")
  (c-name "moo_entry_clear_undo")
  (return-type "none")
)


;; From ../mooutils/moofileutils.h

(define-function open_url
  (c-name "moo_open_url")
  (return-type "gboolean")
  (parameters
    '("const-char*" "url")
  )
)

(define-function open_email
  (c-name "moo_open_email")
  (return-type "gboolean")
  (parameters
    '("const-char*" "address")
    '("const-char*" "subject")
    '("const-char*" "body")
  )
)



;; From ../mooutils/moofilewatch.h

(define-function moo_file_watch_new
  (c-name "moo_file_watch_new")
  (is-constructor-of "MooFileWatch")
  (return-type "MooFileWatch*")
  (parameters
    '("GError**" "error")
  )
)

(define-method close
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_close")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method create_monitor
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_create_monitor")
  (return-type "guint")
  (parameters
    '("const-char*" "filename")
    '("MooFileWatchCallback" "callback")
    '("gpointer" "data")
    '("GDestroyNotify" "data_notify")
    '("GError**" "error")
  )
)

(define-method cancel_monitor
  (of-object "MooFileWatch")
  (c-name "moo_file_watch_cancel_monitor")
  (return-type "none")
  (parameters
    '("guint" "monitor_id")
  )
)



;; From ../mooutils/moofiltermgr.h

(define-function moo_filter_mgr_new
  (c-name "moo_filter_mgr_new")
  (is-constructor-of "MooFilterMgr")
  (return-type "MooFilterMgr*")
)

(define-method init_filter_combo
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_init_filter_combo")
  (return-type "none")
  (parameters
    '("MooCombo*" "combo")
    '("const-char*" "user_id")
  )
)

; (define-method attach
;   (of-object "MooFilterMgr")
;   (c-name "moo_filter_mgr_attach")
;   (return-type "none")
;   (parameters
;     '("GtkFileChooser*" "filechooser")
;     '("const-char*" "user_id")
;   )
; )

(define-method get_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-char*" "user_id")
  )
)

(define-method set_last_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_set_last_filter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-char*" "user_id")
  )
)

(define-method get_null_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_null_filter")
  (return-type "GtkFileFilter*")
)

(define-method get_last_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_get_last_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "user_id")
  )
)

(define-method new_user_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_new_user_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "glob")
    '("const-char*" "user_id")
  )
)

(define-method new_builtin_filter
  (of-object "MooFilterMgr")
  (c-name "moo_filter_mgr_new_builtin_filter")
  (return-type "GtkFileFilter*")
  (parameters
    '("const-char*" "description")
    '("const-char*" "glob")
    '("const-char*" "user_id")
    '("int" "position")
  )
)



;; From ../mooutils/mooglade.h

(define-function moo_glade_xml_new_empty
  (c-name "moo_glade_xml_new_empty")
  (return-type "MooGladeXML*")
  (is-constructor-of "MooGladeXML")
  (parameters
    '("const-char*" "domain" (null-ok) (default "NULL"))
  )
)

(define-method map_class
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_class")
  (return-type "none")
  (parameters
    '("const-char*" "class_name")
    '("GType" "use_type")
  )
)

(define-method map_id
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_id")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("GType" "use_type")
  )
)

(define-method map_custom
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_custom")
  (return-type "none")
  (parameters
    '("const-char*" "id")
    '("MooGladeCreateFunc" "func")
    '("gpointer" "data")
  )
)

(define-method map_signal
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_map_signal")
  (return-type "none")
  (parameters
    '("MooGladeSignalFunc" "func")
    '("gpointer" "data")
  )
)

(define-method parse_file
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_parse_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "root")
    '("GError**" "error")
  )
)

(define-method parse_memory
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_parse_memory")
  (return-type "gboolean")
  (parameters
    '("const-char*" "buffer")
    '("int" "size" (null-ok) (default "-1"))
    '("const-char*" "root" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)

(define-method fill_widget
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_fill_widget")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "target")
    '("const-char*" "buffer")
    '("const-char*" "target_name")
    '("GError**" "error")
  )
)

(define-function moo_glade_xml_new
  (c-name "moo_glade_xml_new")
  (return-type "MooGladeXML*")
  (parameters
    '("const-char*" "file")
    '("const-char*" "root" (null-ok) (default "NULL"))
    '("const-char*" "domain" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)

(define-function moo_glade_xml_new_from_buf
  (c-name "moo_glade_xml_new_from_buf")
  (return-type "MooGladeXML*")
  (parameters
    '("const-char*" "buffer")
    '("int" "size" (null-ok) (default "-1"))
    '("const-char*" "root" (null-ok) (default "NULL"))
    '("const-char*" "domain" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)

(define-method get_widget
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "id")
  )
)

(define-method get_root
  (of-object "MooGladeXML")
  (c-name "moo_glade_xml_get_root")
  (return-type "GtkWidget*")
)



;; From ../mooutils/moohistoryentry.h

(define-function moo_history_combo_new
  (c-name "moo_history_combo_new")
  (is-constructor-of "MooHistoryCombo")
  (return-type "GtkWidget*")
  (properties
    '("user_id" (optional))
  )
)

(define-method set_list
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_set_list")
  (return-type "none")
  (parameters
    '("MooHistoryList*" "list")
  )
)

(define-method get_list
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_get_list")
  (return-type "MooHistoryList*")
)

(define-method add_text
  (of-object "MooHistoryCombo")
  (c-name "moo_history_combo_add_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)



;; From ../mooutils/moohistorylist.h

(define-function moo_history_list_new
  (c-name "moo_history_list_new")
  (is-constructor-of "MooHistoryList")
  (return-type "MooHistoryList*")
  (properties
    '("user_id")
  )
)

(define-method get_model
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_model")
  (return-type "GtkTreeModel*")
)

(define-method add
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add")
  (return-type "none")
  (parameters
    '("const-char*" "item")
  )
)

(define-method add_filename
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method add_full
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_full")
  (return-type "none")
  (parameters
    '("const-char*" "item")
    '("const-char*" "display_item")
  )
)

(define-method remove
  (of-object "MooHistoryList")
  (c-name "moo_history_list_remove")
  (return-type "none")
  (parameters
    '("const-char*" "item")
  )
)

(define-method set_display_func
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_display_func")
  (return-type "none")
  (parameters
    '("MooHistoryDisplayFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_compare_func
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_compare_func")
  (return-type "none")
  (parameters
    '("MooHistoryCompareFunc" "func")
    '("gpointer" "data")
  )
)

(define-function moo_history_list_display_basename
  (c-name "moo_history_list_display_basename")
  (return-type "char*")
  (parameters
    '("const-char*" "entry")
    '("gpointer" "data")
  )
)

(define-method is_empty
  (of-object "MooHistoryList")
  (c-name "moo_history_list_is_empty")
  (return-type "gboolean")
)

(define-method n_user_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_n_user_entries")
  (return-type "guint")
)

(define-method get_max_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_max_entries")
  (return-type "guint")
)

(define-method set_max_entries
  (of-object "MooHistoryList")
  (c-name "moo_history_list_set_max_entries")
  (return-type "none")
  (parameters
    '("guint" "num")
  )
)

;; (define-method load
;;   (of-object "MooHistoryList")
;;   (c-name "moo_history_list_load")
;;   (return-type "none")
;; )

(define-method add_builtin
  (of-object "MooHistoryList")
  (c-name "moo_history_list_add_builtin")
  (return-type "none")
  (parameters
    '("const-char*" "item")
    '("const-char*" "display_item")
  )
)

(define-method get_menu_mgr
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_menu_mgr")
  (return-type "MooMenuMgr*")
)

(define-method get_last_item
  (of-object "MooHistoryList")
  (c-name "moo_history_list_get_last_item")
  (return-type "char*")
)

(define-function moo_history_item_new
  (c-name "moo_history_item_new")
  (is-constructor-of "MooHistoryItem")
  (return-type "MooHistoryItem*")
  (parameters
    '("const-char*" "data")
    '("const-char*" "display")
    '("gboolean" "builtin")
  )
)


;; From ../mooutils/moolog.h

(define-function log_window_show
  (c-name "moo_log_window_show")
  (return-type "none")
)

(define-function log_window_hide
  (c-name "moo_log_window_hide")
  (return-type "none")
)

(define-function set_log_func_window
  (c-name "moo_set_log_func_window")
  (return-type "none")
  (parameters
    '("gboolean" "show_now")
  )
)

(define-function set_log_func_file
  (c-name "moo_set_log_func_file")
  (return-type "none")
  (parameters
    '("const-char*" "log_file")
  )
)

(define-function set_log_func_silent
  (c-name "moo_set_log_func_silent")
  (return-type "none")
)

;; (define-function reset_log_func
;;   (c-name "moo_reset_log_func")
;;   (return-type "none")
;; )



;; From ../mooutils/moomenumgr.h

(define-function moo_menu_mgr_new
  (c-name "moo_menu_mgr_new")
  (is-constructor-of "MooMenuMgr")
  (return-type "MooMenuMgr*")
)


;; From ../mooutils/moonotebook.h

(define-function moo_notebook_new
  (c-name "moo_notebook_new")
  (is-constructor-of "MooNotebook")
  (return-type "GtkWidget*")
)

(define-method insert_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_insert_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("gint" "position")
  )
)

(define-method remove_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_remove_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method set_action_widget
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean" "right")
  )
)

(define-method get_action_widget
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_action_widget")
  (return-type "GtkWidget*")
  (parameters
    '("gboolean" "right")
  )
)

(define-method get_current_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_current_page")
  (return-type "gint")
)

(define-method get_nth_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "page_num")
  )
)

(define-method get_n_pages
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_n_pages")
  (return-type "gint")
)

(define-method page_num
  (of-object "MooNotebook")
  (c-name "moo_notebook_page_num")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_current_page
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method set_show_tabs
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_show_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "show_tabs")
  )
)

(define-method get_tab_label
  (of-object "MooNotebook")
  (c-name "moo_notebook_get_tab_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_label
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_tab_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method reorder_child
  (of-object "MooNotebook")
  (c-name "moo_notebook_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-method enable_popup
  (of-object "MooNotebook")
  (c-name "moo_notebook_enable_popup")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method set_popup_creation_func
  (of-object "MooNotebook")
  (c-name "moo_notebook_set_popup_creation_func")
  (return-type "none")
  (parameters
    '("MooNotebookPopupCreationFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method enable_reordering
  (of-object "MooNotebook")
  (c-name "moo_notebook_enable_reordering")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)



;; From ../mooutils/mooprefsdialog.h

(define-function moo_prefs_dialog_new
  (c-name "moo_prefs_dialog_new")
  (is-constructor-of "MooPrefsDialog")
  (return-type "GtkWidget*")
  (properties
    '("title" (optional))
  )
)

(define-method run
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_run")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
  )
)

(define-method append_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_append_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method remove_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_remove_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method insert_page
  (of-object "MooPrefsDialog")
  (c-name "moo_prefs_dialog_insert_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("int" "position")
  )
)

(define-virtual init
  (of-object "MooPrefsDialog")
  (return-type "none")
)

(define-virtual apply
  (of-object "MooPrefsDialog")
  (return-type "none")
)



;; From ../mooutils/mooprefsdialogpage.h

(define-function moo_prefs_dialog_page_new
  (c-name "moo_prefs_dialog_page_new")
  (is-constructor-of "MooPrefsDialogPage")
  (return-type "GtkWidget*")
  (properties
    '("label" (optional))
    '("icon_stock_id" (optional))
  )
)

(define-function prefs_dialog_page_new_from_xml
  (c-name "moo_prefs_dialog_page_new_from_xml")
  (return-type "MooPrefsDialogPage*")
  (parameters
    '("const-char*" "label")
    '("const-char*" "icon_stock_id" (null-ok) (default "NULL"))
    '("MooGladeXML*" "xml" (null-ok) (default "NULL"))
    '("const-char*" "buffer")
    '("const-char*" "page_id")
    '("const-char*" "prefs_root" (null-ok) (default "NULL"))
  )
)

(define-method fill_from_xml
  (of-object "MooPrefsDialogPage")
  (c-name "moo_prefs_dialog_page_fill_from_xml")
  (return-type "gboolean")
  (parameters
    '("MooGladeXML*" "xml" (null-ok) (default "NULL"))
    '("const-char*" "buffer")
    '("const-char*" "page_id")
    '("const-char*" "prefs_root" (null-ok) (default "NULL"))
  )
)

(define-method bind_setting
  (of-object "MooPrefsDialogPage")
  (c-name "moo_prefs_dialog_page_bind_setting")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "setting")
    '("GtkToggleButton*" "set_or_not")
  )
)

(define-method bind_radio_setting
  (of-object "MooPrefsDialogPage")
  (c-name "moo_prefs_dialog_page_bind_radio_setting")
  (return-type "none")
  (parameters
    '("const-char*" "setting")
    '("GtkToggleButton**" "btns")
    '("const-char**" "cvals")
  )
)

(define-virtual init
  (of-object "MooPrefsDialogPage")
  (return-type "none")
)

(define-virtual apply
  (of-object "MooPrefsDialogPage")
  (return-type "none")
)



;; From ../mooutils/moostock.h

(define-function create_stock_items
  (c-name "moo_create_stock_items")
  (return-type "none")
)

(define-function get_icon_size_real_small
  (c-name "moo_get_icon_size_real_small")
  (return-type "GtkIconSize")
)



;; From ../mooutils/moowin.h

;; (define-function window_is_hidden
;;   (c-name "moo_window_is_hidden")
;;   (return-type "gboolean")
;;   (parameters
;;     '("GtkWindow*" "window")
;;   )
;; )

;; (define-function get_top_window
;;   (c-name "moo_get_top_window")
;;   (return-type "GtkWindow*")
;;   (parameters
;;     '("GSList*" "windows")
;;   )
;; )
;;
;; (define-function get_toplevel_window
;;   (c-name "moo_get_toplevel_window")
;;   (return-type "GtkWindow*")
;; )
;;
;; (define-function window_set_icon_from_stock
;;   (c-name "moo_window_set_icon_from_stock")
;;   (return-type "gboolean")
;;   (parameters
;;     '("GtkWindow*" "window")
;;     '("const-char*" "stock_id")
;;   )
;; )



;; From ../mooutils/moowindow.h

;; (define-function moo_window_new
;;   (c-name "moo_window_new")
;;   (is-constructor-of "MooWindow")
;;   (return-type "GtkWidget*")
;; )

(define-method close
  (of-object "MooWindow")
  (c-name "moo_window_close")
  (return-type "gboolean")
)

(define-function window_class_get_id
  (c-name "moo_window_class_get_id")
  (return-type "const-char*")
  (parameters
    '("MooWindowClass*" "cls")
  )
)

(define-function window_class_get_name
  (c-name "moo_window_class_get_name")
  (return-type "const-char*")
  (parameters
    '("MooWindowClass*" "cls")
  )
)

(define-function window_class_set_id
  (c-name "moo_window_class_set_id")
  (return-type "none")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "id")
    '("const-char*" "name")
  )
)

(define-function _window_class_add_action
  (c-name "moo_window_class_add_action")
  (return-type "none")
)

(define-function window_class_find_action
  (c-name "moo_window_class_find_action")
  (return-type "gboolean")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "id")
  )
)

(define-function window_class_remove_action
  (c-name "moo_window_class_remove_action")
  (return-type "none")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "id")
  )
)

(define-function window_class_add_group
  (c-name "moo_window_class_add_group")
  (return-type "none")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "name")
    '("const-char*" "display_name")
  )
)

(define-function window_class_find_group
  (c-name "moo_window_class_find_group")
  (return-type "gboolean")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "name")
  )
)

(define-function window_class_remove_group
  (c-name "moo_window_class_remove_group")
  (return-type "gboolean")
  (parameters
    '("MooWindowClass*" "cls")
    '("const-char*" "name")
  )
)


(define-method get_ui_xml
  (of-object "MooWindow")
  (c-name "moo_window_get_ui_xml")
  (return-type "MooUIXML*")
)

(define-method set_ui_xml
  (of-object "MooWindow")
  (c-name "moo_window_set_ui_xml")
  (return-type "none")
  (parameters
    '("MooUIXML*" "xml")
  )
)

(define-method get_actions
  (of-object "MooWindow")
  (c-name "moo_window_get_actions")
  (return-type "MooActionCollection*")
)

(define-method get_action
  (of-object "MooWindow")
  (c-name "moo_window_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-char*" "action_id")
  )
)


;; From ./moo/mooutils/moouixml.h

(define-function moo_ui_xml_new
  (c-name "moo_ui_xml_new")
  (is-constructor-of "MooUiXml")
  (return-type "MooUIXML*")
)

(define-method add_ui_from_string
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_add_ui_from_string")
  (return-type "none")
  (parameters
    '("const-char*" "buffer")
    '("gssize" "length")
  )
)

(define-method get_node
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_get_node")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "path")
  )
)

(define-method find_placeholder
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_find_placeholder")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_path
  (of-object "MooUINode")
  (c-name "moo_ui_node_get_path")
  (return-type "char*")
)

(define-method get_child
  (of-object "MooUINode")
  (c-name "moo_ui_node_get_child")
  (return-type "MooUINode*")
  (parameters
    '("const-char*" "path")
  )
)

(define-method create_widget
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_create_widget")
  (return-type "GtkWidget*")
  (parameters
    '("MooUIWidgetType" "type")
    '("const-char*" "path")
    '("MooActionCollection*" "actions")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method new_merge_id
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_new_merge_id")
  (return-type "guint")
)

(define-method add_item
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_add_item")
  (return-type "MooUINode*")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "name" (null-ok) (default "NULL"))
    '("const-char*" "action" (null-ok) (default "NULL"))
    '("int" "position" (null-ok) (default "-1"))
  )
)

(define-method insert_after
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert_after")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("MooUINode*" "after")
    '("const-char*" "markup")
  )
)

(define-method insert_before
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert_before")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("MooUINode*" "before")
    '("const-char*" "markup")
  )
)

(define-method insert
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("MooUINode*" "parent")
    '("int" "position")
    '("const-char*" "markup")
  )
)

(define-method insert_markup_after
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert_markup_after")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "after")
    '("const-char*" "markup")
  )
)

(define-method insert_markup_before
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert_markup_before")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("const-char*" "before")
    '("const-char*" "markup")
  )
)

(define-method insert_markup
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_insert_markup")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-char*" "parent_path")
    '("int" "position")
    '("const-char*" "markup")
  )
)

(define-method remove_ui
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_remove_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
  )
)

(define-method remove_node
  (of-object "MooUIXML")
  (c-name "moo_ui_xml_remove_node")
  (return-type "none")
  (parameters
    '("MooUINode*" "node")
  )
)
;; Enumerations and flags ...



;; From ./moo/mooutils/moobigpaned.h

(define-function moo_big_paned_new
  (c-name "moo_big_paned_new")
  (is-constructor-of "MooBigPaned")
  (return-type "GtkWidget*")
)

(define-method set_pane_order
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_set_pane_order")
  (return-type "none")
  (parameters
    '("int*" "order")
  )
)

(define-method add_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_add_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_remove_child")
  (return-type "none")
)

(define-method get_child
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_child")
  (return-type "GtkWidget*")
)

(define-method insert_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_insert_pane")
  (return-type "int")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("MooPaneLabel*" "pane_label")
    '("MooPanePosition" "position")
    '("int" "index_")
  )
)

(define-method remove_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_remove_pane")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method get_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_pane")
  (return-type "GtkWidget*")
  (parameters
    '("MooPanePosition" "position")
    '("int" "index_")
  )
)

(define-method open_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_open_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method hide_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_hide_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method present_pane
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_present_pane")
  (return-type "none")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method get_pane_params
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_get_pane_params")
  (return-type "MooPaneParams*")
  (parameters
    '("MooPanePosition" "position")
    '("guint" "index_")
  )
)

(define-method set_pane_params
  (of-object "MooBigPaned")
  (c-name "moo_big_paned_set_pane_params")
  (return-type "none")
  (parameters
    '("MooPanePosition" "position")
    '("guint" "index_")
    '("MooPaneParams*" "params")
  )
)



;; From ./moo/mooutils/moopaned.h

(define-function moo_paned_new
  (c-name "moo_paned_new")
  (is-constructor-of "MooPaned")
  (return-type "GtkWidget*")
  (properties
    '("pane_position" (optional))
  )
)

(define-method insert_pane
  (of-object "MooPaned")
  (c-name "moo_paned_insert_pane")
  (return-type "int")
  (parameters
    '("GtkWidget*" "pane_widget")
    '("MooPaneLabel*" "pane_label")
    '("int" "position")
  )
)

(define-method remove_pane
  (of-object "MooPaned")
  (c-name "moo_paned_remove_pane")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method n_panes
  (of-object "MooPaned")
  (c-name "moo_paned_n_panes")
  (return-type "guint")
)

(define-method get_panes
  (of-object "MooPaned")
  (c-name "moo_paned_get_panes")
  (return-type "GSList*")
)

(define-method get_nth_pane
  (of-object "MooPaned")
  (c-name "moo_paned_get_nth_pane")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "n")
  )
)

(define-method get_pane_num
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane_num")
  (return-type "int")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_label
  (of-object "MooPaned")
  (c-name "moo_paned_get_label")
  (return-type "MooPaneLabel*")
  (parameters
    '("GtkWidget*" "pane_widget")
  )
)

(define-method set_sticky_pane
  (of-object "MooPaned")
  (c-name "moo_paned_set_sticky_pane")
  (return-type "none")
  (parameters
    '("gboolean" "sticky")
  )
)

(define-method set_pane_size
  (of-object "MooPaned")
  (c-name "moo_paned_set_pane_size")
  (return-type "none")
  (parameters
    '("int" "size")
  )
)

(define-method get_pane_size
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane_size")
  (return-type "int")
)

(define-method get_button_box_size
  (of-object "MooPaned")
  (c-name "moo_paned_get_button_box_size")
  (return-type "int")
)

(define-method get_open_pane
  (of-object "MooPaned")
  (c-name "moo_paned_get_open_pane")
  (return-type "int")
)

(define-method is_open
  (of-object "MooPaned")
  (c-name "moo_paned_is_open")
  (return-type "gboolean")
)

(define-method open_pane
  (of-object "MooPaned")
  (c-name "moo_paned_open_pane")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)

(define-method present_pane
  (of-object "MooPaned")
  (c-name "moo_paned_present_pane")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)

(define-method hide_pane
  (of-object "MooPaned")
  (c-name "moo_paned_hide_pane")
  (return-type "none")
)

(define-method detach_pane
  (of-object "MooPaned")
  (c-name "moo_paned_detach_pane")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)

(define-method attach_pane
  (of-object "MooPaned")
  (c-name "moo_paned_attach_pane")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)

(define-method get_pane_params
  (of-object "MooPaned")
  (c-name "moo_paned_get_pane_params")
  (return-type "MooPaneParams*")
  (parameters
    '("guint" "index_")
  )
)

(define-method set_pane_params
  (of-object "MooPaned")
  (c-name "moo_paned_set_pane_params")
  (return-type "none")
  (parameters
    '("guint" "index_")
    '("MooPaneParams*" "params")
  )
)

(define-function moo_pane_params_new
  (c-name "moo_pane_params_new")
  (is-constructor-of "MooPaneParams")
  (return-type "MooPaneParams*")
)

(define-method copy
  (of-object "MooPaneParams")
  (c-name "moo_pane_params_copy")
  (return-type "MooPaneParams*")
)

(define-method free
  (of-object "MooPaneParams")
  (c-name "moo_pane_params_free")
  (return-type "none")
)

(define-function moo_pane_label_new
  (c-name "moo_pane_label_new")
  (is-constructor-of "MooPaneLabel")
  (return-type "MooPaneLabel*")
  (parameters
    '("const-char*" "icon_stock_id" (null-ok) (default "NULL"))
    '("GdkPixbuf*" "pixbuf" (null-ok) (default "NULL"))
    '("GtkWidget*" "icon" (null-ok) (default "NULL"))
    '("const-char*" "label" (null-ok) (default "NULL"))
    '("const-char*" "window_title" (null-ok) (default "NULL"))
  )
)

(define-method copy
  (of-object "MooPaneLabel")
  (c-name "moo_pane_label_copy")
  (return-type "MooPaneLabel*")
)

(define-method free
  (of-object "MooPaneLabel")
  (c-name "moo_pane_label_free")
  (return-type "none")
)


;; From moo/mooutils/mooundo.h

(define-function moo_undo_stack_new
  (c-name "moo_undo_stack_new")
  (is-constructor-of "MooUndoStack")
  (return-type "MooUndoStack*")
  (properties
    '("document")
  )
)

;; (define-method add_action
;;   (of-object "MooUndoStack")
;;   (c-name "moo_undo_stack_add_action")
;;   (return-type "none")
;;   (parameters
;;     '("MooUndoAction*" "action")
;;   )
;; )

(define-method clear
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_clear")
  (return-type "none")
)

(define-method freeze
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_thaw")
  (return-type "none")
)

(define-method frozen
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_frozen")
  (return-type "gboolean")
)

(define-method new_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_new_group")
  (return-type "none")
)

(define-method start_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_start_group")
  (return-type "none")
)

(define-method end_group
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_end_group")
  (return-type "none")
)

(define-method undo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_undo")
  (return-type "none")
)

(define-method redo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_redo")
  (return-type "none")
)

(define-method can_undo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_can_undo")
  (return-type "gboolean")
)

(define-method can_redo
  (of-object "MooUndoStack")
  (c-name "moo_undo_stack_can_redo")
  (return-type "gboolean")
)


;; From moo/mooutils/moomenuaction.h

(define-function moo_menu_action_new
  (c-name "moo_menu_action_new")
  (is-constructor-of "MooMenuAction")
  (return-type "GtkAction*")
  (parameters
    '("const-char*" "id")
    '("const-char*" "label")
  )
)

(define-method get_mgr
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_get_mgr")
  (return-type "MooMenuMgr*")
)

(define-method set_mgr
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_set_mgr")
  (return-type "none")
  (parameters
    '("MooMenuMgr*" "mgr" (null-ok))
  )
)

(define-method set_menu_data
  (of-object "MooMenuAction")
  (c-name "moo_menu_action_set_menu_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("gboolean" "is_object")
  )
)


;; From moo/mooutils/mooutils-gobject.h

(define-function bind_sensitive
  (c-name "moo_bind_sensitive")
  (return-type "none")
  (parameters
    '("GtkWidget*" "toggle_btn")
    '("GtkWidget*" "dependent")
    '("int" "num_dependent")
    '("gboolean" "invert")
  )
)

(define-function bind_bool_property
  (c-name "moo_bind_bool_property")
  (return-type "guint")
  (parameters
    '("GObject*" "target")
    '("const-char*" "target_prop")
    '("GObject*" "source")
    '("const-char*" "source_prop")
    '("gboolean" "invert" (null-ok) (default "FALSE"))
  )
)

(define-function add_property_watch
  (c-name "moo_add_property_watch")
  (return-type "guint")
  (parameters
    '("GObject*" "target")
    '("const-char*" "target_prop")
    '("GObject*" "source")
    '("const-char*" "source_prop")
    '("MooTransformPropFunc" "transform")
    '("gpointer" "transform_data")
    '("GDestroyNotify" "destroy_notify")
  )
)

;; (define-function watch_add_signal
;;   (c-name "moo_watch_add_signal")
;;   (return-type "none")
;;   (parameters
;;     '("guint" "watch_id")
;;     '("const-char*" "source_signal")
;;   )
;; )

;; (define-function watch_add_property
;;   (c-name "moo_watch_add_property")
;;   (return-type "none")
;;   (parameters
;;     '("guint" "watch_id")
;;     '("const-char*" "source_prop")
;;   )
;; )

;; (define-function watch_remove
;;   (c-name "moo_watch_remove")
;;   (return-type "gboolean")
;;   (parameters
;;     '("guint" "watch_id")
;;   )
;; )


;;;;;;;;;;;;;

(define-function segfault
  (c-name "moo_segfault")
  (return-type "none")
)


;; From moo/mooutils/mooclosure.h

(define-function moo_closure_new
  (c-name "moo_closure_new")
  (is-constructor-of "MooClosure")
  (return-type "MooClosure*")
)

(define-method invoke
  (of-object "MooClosure")
  (c-name "moo_closure_invoke")
  (return-type "none")
)

(define-method invalidate
  (of-object "MooClosure")
  (c-name "moo_closure_invalidate")
  (return-type "none")
)


;; From ./ggap/moo/mooutils/mooaction.h

;; (define-function sync_toggle_action
;;   (c-name "moo_sync_toggle_action")
;;   (return-type "none")
;;   (parameters
;;     '("GtkAction*" "action")
;;     '("GObject*" "master")
;;     '("const-char*" "prop")
;;     '("gboolean" "invert" (null-ok) (default "FALSE"))
;;   )
;; )
;;
;; (define-function action_set_display_name
;;   (c-name "moo_action_set_display_name")
;;   (return-type "none")
;;   (parameters
;;     '("GtkAction*" "action")
;;     '("const-char*" "name")
;;   )
;; )
;;
;; (define-function action_get_display_name
;;   (c-name "moo_action_get_display_name")
;;   (return-type "const-char*")
;;   (parameters
;;     '("GtkAction*" "action")
;;   )
;; )
;;
;; (define-function action_set_default_accel
;;   (c-name "moo_action_set_default_accel")
;;   (return-type "none")
;;   (parameters
;;     '("GtkAction*" "action")
;;     '("const-char*" "accel" (null-ok))
;;   )
;; )
;;
;; (define-function action_get_default_accel
;;   (c-name "moo_action_get_default_accel")
;;   (return-type "const-char*")
;;   (parameters
;;     '("GtkAction*" "action")
;;   )
;; )
;;
;; (define-function action_set_no_accel
;;   (c-name "moo_action_set_no_accel")
;;   (return-type "none")
;;   (parameters
;;     '("GtkAction*" "action")
;;     '("gboolean" "no_accel")
;;   )
;; )
;;
;; (define-function action_get_no_accel
;;   (c-name "moo_action_get_no_accel")
;;   (return-type "gboolean")
;;   (parameters
;;     '("GtkAction*" "action")
;;   )
;; )


;; From ../mooutils/mooprefs.h

(define-function prefs_load
  (c-name "moo_prefs_load")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_rc")
    '("const-char*" "file_state")
    '("GError**" "error")
  )
)

(define-function prefs_save
  (c-name "moo_prefs_save")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_rc")
    '("const-char*" "file_state")
    '("GError**" "error")
  )
)

(define-function prefs_get_markup
  (c-name "moo_prefs_get_markup")
  (return-type "MooMarkupDoc*")
  (parameters
    '("MooPrefsType" "prefs_type")
  )
)

(define-function prefs_new_key
  (c-name "moo_prefs_new_key")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("GType" "value_type")
    '("const-GValue*" "default_value")
    '("MooPrefsType" "prefs_type")
  )
)

(define-function prefs_delete_key
  (c-name "moo_prefs_delete_key")
  (return-type "none")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_key_type
  (c-name "moo_prefs_get_key_type")
  (return-type "GType")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_key_registered
  (c-name "moo_prefs_key_registered")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get
  (c-name "moo_prefs_get")
  (return-type "const-GValue*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_default
  (c-name "moo_prefs_get_default")
  (return-type "const-GValue*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_set
  (c-name "moo_prefs_set")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GValue*" "value")
  )
)

(define-function prefs_set_default
  (c-name "moo_prefs_set_default")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GValue*" "value")
  )
)

(define-function prefs_new_key_bool
  (c-name "moo_prefs_new_key_bool")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("gboolean" "default_val")
  )
)

(define-function prefs_new_key_int
  (c-name "moo_prefs_new_key_int")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "default_val")
  )
)

(define-function prefs_new_key_string
  (c-name "moo_prefs_new_key_string")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "default_val" (null-ok) (default "NULL"))
  )
)

(define-function prefs_new_key_color
  (c-name "moo_prefs_new_key_color")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GdkColor*" "default_val" (null-ok))
  )
)

(define-function prefs_new_key_enum
  (c-name "moo_prefs_new_key_enum")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("GType" "enum_type")
    '("int" "default_val")
  )
)

(define-function prefs_make_key
  (c-name "moo_prefs_make_key")
  (return-type "char*")
  (parameters
    '("const-char*" "first_comp")
  )
  (varargs #t)
)

(define-function prefs_make_keyv
  (c-name "moo_prefs_make_keyv")
  (return-type "char*")
  (parameters
    '("const-char*" "first_comp")
    '("va_list" "var_args")
  )
)

(define-function prefs_get_string
  (c-name "moo_prefs_get_string")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_filename
  (c-name "moo_prefs_get_filename")
  (return-type "const-char*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_bool
  (c-name "moo_prefs_get_bool")
  (return-type "gboolean")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_number
  (c-name "moo_prefs_get_number")
  (return-type "gdouble")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_color
  (c-name "moo_prefs_get_color")
  (return-type "const-GdkColor*")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_int
  (c-name "moo_prefs_get_int")
  (return-type "int")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_get_enum
  (c-name "moo_prefs_get_enum")
  (return-type "int")
  (parameters
    '("const-char*" "key")
  )
)

(define-function prefs_set_string
  (c-name "moo_prefs_set_string")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "val" (null-ok))
  )
)

(define-function prefs_set_filename
  (c-name "moo_prefs_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-char*" "val" (null-ok))
  )
)

(define-function prefs_set_number
  (c-name "moo_prefs_set_number")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("double" "val")
  )
)

(define-function prefs_set_int
  (c-name "moo_prefs_set_int")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "val")
  )
)

(define-function prefs_set_bool
  (c-name "moo_prefs_set_bool")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("gboolean" "val")
  )
)

(define-function prefs_set_color
  (c-name "moo_prefs_set_color")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("const-GdkColor*" "val")
  )
)

(define-function prefs_set_enum
  (c-name "moo_prefs_set_enum")
  (return-type "none")
  (parameters
    '("const-char*" "key")
    '("int" "val")
  )
)

(define-function prefs_notify_connect
  (c-name "moo_prefs_notify_connect")
  (return-type "guint")
  (parameters
    '("const-char*" "pattern")
    '("MooPrefsMatchType" "match_type")
    '("MooPrefsNotify" "callback")
    '("gpointer" "data")
  )
)

(define-function prefs_notify_block
  (c-name "moo_prefs_notify_block")
  (return-type "gboolean")
  (parameters
    '("guint" "id")
  )
)

(define-function prefs_notify_unblock
  (c-name "moo_prefs_notify_unblock")
  (return-type "gboolean")
  (parameters
    '("guint" "id")
  )
)

(define-function prefs_notify_disconnect
  (c-name "moo_prefs_notify_disconnect")
  (return-type "gboolean")
  (parameters
    '("guint" "id")
  )
)

(define-function make_user_data_dir
  (c-name "moo_make_user_data_dir")
  (return-type "gboolean")
  (parameters
    '("const-char*" "path" (null-ok) (default "NULL"))
  )
)

(define-function get_user_data_dir
  (c-name "moo_get_user_data_dir")
  (return-type "char*")
)

(define-function get_user_data_file
  (c-name "moo_get_user_data_file")
  (return-type "char*")
  (parameters
    '("const-char*" "basename")
  )
)

(define-function save_user_data_file
  (c-name "moo_save_user_data_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "basename")
    '("const-char*" "content")
    '("gssize" "len" (null-ok) (default "-1"))
    '("GError**" "error")
  )
)

(define-function get_data_dirs
  (c-name "moo_get_data_dirs")
  (return-type "char*")
  (parameters
    '("MooDataDirType" "type")
    '("guint*" "n_dirs")
  )
)

(define-function get_data_files
  (c-name "moo_get_data_files")
  (return-type "char*")
  (parameters
    '("MooDataDirType" "type")
    '("guint*" "n_files")
  )
)

(define-function get_data_subdirs
  (c-name "moo_get_data_subdirs")
  (return-type "char**")
  (parameters
    '("const char*" "name")
    '("MooDataDirType" "type")
    '("guint*" "n_dirs")
  )
)


;; mooutils/mooi18n.h

(define-function gettext
  (c-name "moo_gettext")
  (return-type "const-char*")
  (parameters
    '("const-char*" "string")
  )
)


;; mooutils/moofiledialog.h

(define-function moo_file_dialog_new
  (c-name "moo_file_dialog_new")
  (is-constructor-of "MooFileDialog")
  (return-type "MooFileDialog*")
  (properties
    '("type")
    '("parent" (optional))
    '("multiple" (optional))
    '("title" (optional))
    '("dir" (optional))
    '("name" (optional))
  )
)

(define-method set_filter_mgr
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_set_filter_mgr")
  (return-type "none")
  (parameters
    '("MooFilterMgr*" "mgr")
    '("const-char*" "id")
  )
)

(define-method run
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_run")
  (return-type "gboolean")
)

(define-method get_filename
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_filename")
  (return-type "const-char*")
)

(define-method get_filenames
  (of-object "MooFileDialog")
  (c-name "moo_file_dialog_get_filenames")
  (return-type "GSList*")
)

(define-function file_dialog
  (c-name "moo_file_dialog")
  (return-type "const-char*")
  (parameters
    '("MooFileDialogType" "type")
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("const-char*" "title" (null-ok) (default "NULL"))
    '("const-char*" "start_dir" (null-ok) (default "NULL"))
  )
)

(define-function file_dialogp
  (c-name "moo_file_dialogp")
  (return-type "const-char*")
  (parameters
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("MooFileDialogType" "type")
    '("const-char*" "title" (null-ok) (default "NULL"))
    '("const-char*" "prefs_key")
    '("const-char*" "alternate_prefs_key" (null-ok) (default "NULL"))
  )
)
