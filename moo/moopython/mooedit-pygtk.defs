;;
;;  mooedit/mooedit-pygtk.defs
;;

; object definitions ...
(define-object SourceBuffer
  (in-module "Gtk")
  (parent "GtkTextBuffer")
  (c-name "GtkSourceBuffer")
  (gtype-id "GTK_TYPE_SOURCE_BUFFER")
)

(define-object SourceTagTable
  (in-module "Gtk")
  (parent "GtkTextTagTable")
  (c-name "GtkSourceTagTable")
  (gtype-id "GTK_TYPE_SOURCE_TAG_TABLE")
)

(define-object SourceUndoManager
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkSourceUndoManager")
  (gtype-id "GTK_TYPE_SOURCE_UNDO_MANAGER")
)

(define-object SourceView
  (in-module "Gtk")
  (parent "GtkTextView")
  (c-name "GtkSourceView")
  (gtype-id "GTK_TYPE_SOURCE_VIEW")
)

(define-object Edit
  (in-module "Moo")
  (parent "GtkSourceView")
  (c-name "MooEdit")
  (gtype-id "MOO_TYPE_EDIT")
)

(define-object EditLang
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooEditLang")
  (gtype-id "MOO_TYPE_EDIT_LANG")
)

(define-object EditLangMgr
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooEditLangMgr")
  (gtype-id "MOO_TYPE_EDIT_LANG_MGR")
)

(define-object EditWindow
  (in-module "Moo")
  (parent "MooWindow")
  (c-name "MooEditWindow")
  (gtype-id "MOO_TYPE_EDIT_WINDOW")
)

(define-object Editor
  (in-module "Moo")
  (parent "GObject")
  (c-name "MooEditor")
  (gtype-id "MOO_TYPE_EDITOR")
)

;; Enumerations and flags ...

(define-flags SourceSearchFlags
  (in-module "Gtk")
  (c-name "GtkSourceSearchFlags")
  (gtype-id "GTK_TYPE_SOURCE_SEARCH_FLAGS")
  (values
    '("visible-only" "GTK_SOURCE_SEARCH_VISIBLE_ONLY")
    '("text-only" "GTK_SOURCE_SEARCH_TEXT_ONLY")
    '("case-insensitive" "GTK_SOURCE_SEARCH_CASE_INSENSITIVE")
  )
)

(define-flags SourceTagStyleMask
  (in-module "Gtk")
  (c-name "GtkSourceTagStyleMask")
  (gtype-id "GTK_TYPE_SOURCE_TAG_STYLE_MASK")
  (values
    '("background" "GTK_SOURCE_TAG_STYLE_USE_BACKGROUND")
    '("foreground" "GTK_SOURCE_TAG_STYLE_USE_FOREGROUND")
  )
)

(define-enum EditSelectionType
  (in-module "Moo")
  (c-name "MooEditSelectionType")
  (gtype-id "MOO_TYPE_EDIT_SELECTION_TYPE")
  (values
    '("chars" "MOO_EDIT_SELECT_CHARS")
    '("words" "MOO_EDIT_SELECT_WORDS")
    '("lines" "MOO_EDIT_SELECT_LINES")
  )
)

(define-enum EditOnExternalChanges
  (in-module "Moo")
  (c-name "MooEditOnExternalChanges")
  (gtype-id "MOO_TYPE_EDIT_ON_EXTERNAL_CHANGES")
  (values
    '("dont-watch-file" "MOO_EDIT_DONT_WATCH_FILE")
    '("always-alert" "MOO_EDIT_ALWAYS_ALERT")
    '("always-reload" "MOO_EDIT_ALWAYS_RELOAD")
    '("reload-if-safe" "MOO_EDIT_RELOAD_IF_SAFE")
  )
)

(define-flags EditDocStatus
  (in-module "Moo")
  (c-name "MooEditDocStatus")
  (gtype-id "MOO_TYPE_EDIT_DOC_STATUS")
  (values
    '("modified-on-disk" "MOO_EDIT_DOC_MODIFIED_ON_DISK")
    '("deleted" "MOO_EDIT_DOC_DELETED")
    '("changed-on-disk" "MOO_EDIT_DOC_CHANGED_ON_DISK")
    '("modified" "MOO_EDIT_DOC_MODIFIED")
    '("clean" "MOO_EDIT_DOC_CLEAN")
  )
)

(define-flags EditSearchOptions
  (in-module "Moo")
  (c-name "MooEditSearchOptions")
  (gtype-id "MOO_TYPE_EDIT_SEARCH_OPTIONS")
  (values
    '("backwards" "MOO_EDIT_SEARCH_BACKWARDS")
    '("case-insensitive" "MOO_EDIT_SEARCH_CASE_INSENSITIVE")
    '("regex" "MOO_EDIT_SEARCH_REGEX")
  )
)

(define-enum EditReplaceResponseType
  (in-module "Moo")
  (c-name "MooEditReplaceResponseType")
  (gtype-id "MOO_TYPE_EDIT_REPLACE_RESPONSE_TYPE")
  (values
    '("e-stop" "MOO_EDIT_REPLACE_STOP")
    '("e-and-stop" "MOO_EDIT_REPLACE_AND_STOP")
    '("e-skip" "MOO_EDIT_REPLACE_SKIP")
    '("e" "MOO_EDIT_REPLACE")
    '("e-all" "MOO_EDIT_REPLACE_ALL")
  )
)


;; From gtksourceview/gtksourcebuffer.h

(define-function gtk_source_buffer_get_type
  (c-name "gtk_source_buffer_get_type")
  (return-type "GType")
)

(define-function gtk_source_buffer_new
  (c-name "gtk_source_buffer_new")
  (is-constructor-of "GtkSourceBuffer")
  (return-type "GtkSourceBuffer*")
  (parameters
    '("GtkSourceTagTable*" "table")
  )
)

(define-method get_check_brackets
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_check_brackets")
  (return-type "gboolean")
)

(define-method set_check_brackets
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_check_brackets")
  (return-type "none")
  (parameters
    '("gboolean" "check_brackets")
  )
)

(define-method set_bracket_match_style
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_bracket_match_style")
  (return-type "none")
  (parameters
    '("const-GtkSourceTagStyle*" "style")
  )
)

(define-method set_bracket_correct_match_style
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_bracket_correct_match_style")
  (return-type "none")
  (parameters
    '("const-GtkSourceTagStyle*" "style")
  )
)

(define-method set_bracket_incorrect_match_style
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_bracket_incorrect_match_style")
  (return-type "none")
  (parameters
    '("const-GtkSourceTagStyle*" "style")
  )
)

(define-method set_brackets
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_brackets")
  (return-type "none")
  (parameters
    '("const-gchar*" "brackets_string")
  )
)

(define-method get_highlight
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_highlight")
  (return-type "gboolean")
)

(define-method set_highlight
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_highlight")
  (return-type "none")
  (parameters
    '("gboolean" "highlight")
  )
)

(define-method get_max_undo_levels
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_max_undo_levels")
  (return-type "gint")
)

(define-method set_max_undo_levels
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_max_undo_levels")
  (return-type "none")
  (parameters
    '("gint" "max_undo_levels")
  )
)

(define-method get_escape_char
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_escape_char")
  (return-type "gunichar")
)

(define-method set_escape_char
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_set_escape_char")
  (return-type "none")
  (parameters
    '("gunichar" "escape_char")
  )
)

(define-method can_undo
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_can_undo")
  (return-type "gboolean")
)

(define-method can_redo
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_can_redo")
  (return-type "gboolean")
)

(define-method undo
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_undo")
  (return-type "none")
)

(define-method redo
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_redo")
  (return-type "none")
)

(define-method begin_not_undoable_action
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_begin_not_undoable_action")
  (return-type "none")
)

(define-method end_not_undoable_action
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_end_not_undoable_action")
  (return-type "none")
)

(define-method create_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_create_marker")
  (return-type "GtkSourceMarker*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "type")
    '("const-GtkTextIter*" "where")
  )
)

(define-method move_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_move_marker")
  (return-type "none")
  (parameters
    '("GtkSourceMarker*" "marker")
    '("const-GtkTextIter*" "where")
  )
)

(define-method delete_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_delete_marker")
  (return-type "none")
  (parameters
    '("GtkSourceMarker*" "marker")
  )
)

(define-method get_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_marker")
  (return-type "GtkSourceMarker*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_markers_in_region
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_markers_in_region")
  (return-type "GSList*")
  (parameters
    '("const-GtkTextIter*" "begin")
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_first_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_first_marker")
  (return-type "GtkSourceMarker*")
)

(define-method get_last_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_last_marker")
  (return-type "GtkSourceMarker*")
)

(define-method get_iter_at_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_iter_at_marker")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkSourceMarker*" "marker")
  )
)

(define-method get_next_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_next_marker")
  (return-type "GtkSourceMarker*")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method get_prev_marker
  (of-object "GtkSourceBuffer")
  (c-name "gtk_source_buffer_get_prev_marker")
  (return-type "GtkSourceMarker*")
  (parameters
    '("GtkTextIter*" "iter")
  )
)



;; From gtksourceview/gtksourceiter.h

(define-function gtk_source_iter_forward_search
  (c-name "gtk_source_iter_forward_search")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("const-gchar*" "str")
    '("GtkSourceSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-function gtk_source_iter_backward_search
  (c-name "gtk_source_iter_backward_search")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("const-gchar*" "str")
    '("GtkSourceSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-function gtk_source_iter_find_matching_bracket
  (c-name "gtk_source_iter_find_matching_bracket")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)



;; From gtksourceview/gtksourcemarker.h

(define-function gtk_source_marker_get_type
  (c-name "gtk_source_marker_get_type")
  (return-type "GType")
)

(define-method set_marker_type
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_set_marker_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "type")
  )
)

(define-method get_marker_type
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_get_marker_type")
  (return-type "gchar*")
)

(define-method get_line
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_get_line")
  (return-type "gint")
)

(define-method get_name
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_get_name")
  (return-type "const-gchar*")
)

(define-method get_buffer
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_get_buffer")
  (return-type "GtkSourceBuffer*")
)

(define-method next
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_next")
  (return-type "GtkSourceMarker*")
)

(define-method prev
  (of-object "GtkSourceMarker")
  (c-name "gtk_source_marker_prev")
  (return-type "GtkSourceMarker*")
)



;; From gtksourceview/gtksourcetag.h

(define-function gtk_source_tag_get_type
  (c-name "gtk_source_tag_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkSourceTag")
  (c-name "gtk_source_tag_copy")
  (return-type "GtkTextTag*")
)

(define-method get_id
  (of-object "GtkSourceTag")
  (c-name "gtk_source_tag_get_id")
  (return-type "gchar*")
)

(define-method get_style
  (of-object "GtkSourceTag")
  (c-name "gtk_source_tag_get_style")
  (return-type "GtkSourceTagStyle*")
)

(define-method set_style
  (of-object "GtkSourceTag")
  (c-name "gtk_source_tag_set_style")
  (return-type "none")
  (parameters
    '("const-GtkSourceTagStyle*" "style")
  )
)

(define-function gtk_syntax_tag_get_type
  (c-name "gtk_syntax_tag_get_type")
  (return-type "GType")
)

(define-function gtk_syntax_tag_new
  (c-name "gtk_syntax_tag_new")
  (is-constructor-of "GtkSyntaxTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-gchar*" "pattern_start")
    '("const-gchar*" "pattern_end")
  )
)

(define-function gtk_pattern_tag_get_type
  (c-name "gtk_pattern_tag_get_type")
  (return-type "GType")
)

(define-function gtk_pattern_tag_new
  (c-name "gtk_pattern_tag_new")
  (is-constructor-of "GtkPatternTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-gchar*" "pattern")
  )
)

(define-function gtk_keyword_list_tag_new
  (c-name "gtk_keyword_list_tag_new")
  (is-constructor-of "GtkKeywordListTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-GSList*" "keywords")
    '("gboolean" "case_sensitive")
    '("gboolean" "match_empty_string_at_beginning")
    '("gboolean" "match_empty_string_at_end")
    '("const-gchar*" "beginning_regex")
    '("const-gchar*" "end_regex")
  )
)

(define-function gtk_line_comment_tag_new
  (c-name "gtk_line_comment_tag_new")
  (is-constructor-of "GtkLineCommentTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-gchar*" "pattern_start")
  )
)

(define-function gtk_string_tag_new
  (c-name "gtk_string_tag_new")
  (is-constructor-of "GtkStringTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-gchar*" "pattern_start")
    '("const-gchar*" "pattern_end")
    '("gboolean" "end_at_line_end")
  )
)



;; From gtksourceview/gtksourcetagstyle.h

(define-function gtk_source_tag_style_get_type
  (c-name "gtk_source_tag_style_get_type")
  (return-type "GType")
)

(define-function gtk_source_tag_style_new
  (c-name "gtk_source_tag_style_new")
  (is-constructor-of "GtkSourceTagStyle")
  (return-type "GtkSourceTagStyle*")
)

(define-method copy
  (of-object "GtkSourceTagStyle")
  (c-name "gtk_source_tag_style_copy")
  (return-type "GtkSourceTagStyle*")
)

(define-method free
  (of-object "GtkSourceTagStyle")
  (c-name "gtk_source_tag_style_free")
  (return-type "none")
)



;; From gtksourceview/gtksourcetagtable.h

(define-function gtk_source_tag_table_get_type
  (c-name "gtk_source_tag_table_get_type")
  (return-type "GType")
)

(define-function gtk_source_tag_table_new
  (c-name "gtk_source_tag_table_new")
  (is-constructor-of "GtkSourceTagTable")
  (return-type "GtkSourceTagTable*")
)

(define-method add_tags
  (of-object "GtkSourceTagTable")
  (c-name "gtk_source_tag_table_add_tags")
  (return-type "none")
  (parameters
    '("const-GSList*" "tags")
  )
)

(define-method remove_source_tags
  (of-object "GtkSourceTagTable")
  (c-name "gtk_source_tag_table_remove_source_tags")
  (return-type "none")
)



;; From gtksourceview/gtksourceundomanager.h

(define-function gtk_source_undo_manager_get_type
  (c-name "gtk_source_undo_manager_get_type")
  (return-type "GType")
)

(define-function gtk_source_undo_manager_new
  (c-name "gtk_source_undo_manager_new")
  (is-constructor-of "GtkSourceUndoManager")
  (return-type "GtkSourceUndoManager*")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method can_undo
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_can_undo")
  (return-type "gboolean")
)

(define-method can_redo
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_can_redo")
  (return-type "gboolean")
)

(define-method undo
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_undo")
  (return-type "none")
)

(define-method redo
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_redo")
  (return-type "none")
)

(define-method begin_not_undoable_action
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_begin_not_undoable_action")
  (return-type "none")
)

(define-method end_not_undoable_action
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_end_not_undoable_action")
  (return-type "none")
)

(define-method get_max_undo_levels
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_get_max_undo_levels")
  (return-type "gint")
)

(define-method set_max_undo_levels
  (of-object "GtkSourceUndoManager")
  (c-name "gtk_source_undo_manager_set_max_undo_levels")
  (return-type "none")
  (parameters
    '("gint" "undo_levels")
  )
)



;; From gtksourceview/gtksourceview.h

(define-function gtk_source_view_get_type
  (c-name "gtk_source_view_get_type")
  (return-type "GType")
)

(define-function gtk_source_view_new
  (c-name "gtk_source_view_new")
  (is-constructor-of "GtkSourceView")
  (return-type "GtkWidget*")
)

(define-function gtk_source_view_new_with_buffer
  (c-name "gtk_source_view_new_with_buffer")
  (return-type "GtkWidget*")
  (parameters
    '("GtkSourceBuffer*" "buffer")
  )
)

(define-method set_show_line_numbers
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_show_line_numbers")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method get_show_line_numbers
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_show_line_numbers")
  (return-type "gboolean")
)

(define-method set_show_line_markers
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_show_line_markers")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method get_show_line_markers
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_show_line_markers")
  (return-type "gboolean")
)

(define-method set_tabs_width
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_tabs_width")
  (return-type "none")
  (parameters
    '("guint" "width")
  )
)

(define-method get_tabs_width
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_tabs_width")
  (return-type "guint")
)

(define-method set_auto_indent
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_auto_indent")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_auto_indent
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_auto_indent")
  (return-type "gboolean")
)

(define-method set_insert_spaces_instead_of_tabs
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_insert_spaces_instead_of_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_insert_spaces_instead_of_tabs
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_insert_spaces_instead_of_tabs")
  (return-type "gboolean")
)

(define-method set_show_margin
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_show_margin")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method get_show_margin
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_show_margin")
  (return-type "gboolean")
)

(define-method set_highlight_current_line
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_highlight_current_line")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method get_highlight_current_line
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_highlight_current_line")
  (return-type "gboolean")
)

(define-method set_highlight_current_line_color
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_highlight_current_line_color")
  (return-type "none")
  (parameters
    '("const-GdkColor*" "color")
  )
)

(define-method set_margin
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_margin")
  (return-type "none")
  (parameters
    '("guint" "margin")
  )
)

(define-method get_margin
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_margin")
  (return-type "guint")
)

(define-method set_marker_pixbuf
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_marker_pixbuf")
  (return-type "none")
  (parameters
    '("const-gchar*" "marker_type")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method get_marker_pixbuf
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_marker_pixbuf")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "marker_type")
  )
)

(define-method set_smart_home_end
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_set_smart_home_end")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_smart_home_end
  (of-object "GtkSourceView")
  (c-name "gtk_source_view_get_smart_home_end")
  (return-type "gboolean")
)



;; From mooeditdialogs.h

(define-method save_changes_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_save_changes_dialog")
  (return-type "int")
)

(define-function moo_edit_save_error_dialog
  (c-name "moo_edit_save_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "err_msg")
  )
)

(define-method save_as_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_save_as_dialog")
  (return-type "MooEditFileInfo*")
)

(define-function moo_edit_open_dialog
  (c-name "moo_edit_open_dialog")
  (return-type "MooEditFileInfo*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function moo_edit_open_error_dialog
  (c-name "moo_edit_open_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "err_msg")
  )
)

(define-function moo_edit_load_error_dialog
  (c-name "moo_edit_load_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "err_msg")
  )
)

(define-method reload_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_reload_dialog")
  (return-type "gboolean")
)

(define-method overwrite_modified_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_overwrite_modified_dialog")
  (return-type "gboolean")
)

(define-method overwrite_deleted_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_overwrite_deleted_dialog")
  (return-type "gboolean")
)

(define-method file_deleted_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_file_deleted_dialog")
  (return-type "none")
)

(define-method file_modified_on_disk_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_file_modified_on_disk_dialog")
  (return-type "int")
)

(define-method nothing_found_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_nothing_found_dialog")
  (return-type "none")
  (parameters
    '("const-char*" "text")
    '("gboolean" "regex")
  )
)

(define-method search_from_beginning_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_search_from_beginning_dialog")
  (return-type "gboolean")
  (parameters
    '("gboolean" "backwards")
  )
)

(define-method regex_error_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_regex_error_dialog")
  (return-type "none")
  (parameters
    '("GError*" "err")
  )
)

(define-method replaced_n_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_replaced_n_dialog")
  (return-type "none")
  (parameters
    '("guint" "n")
  )
)

(define-method prompt_on_replace_dialog
  (of-object "MooEdit")
  (c-name "moo_edit_prompt_on_replace_dialog")
  (return-type "GtkWidget*")
)



;; From mooedit.h

(define-function moo_edit_get_type
  (c-name "moo_edit_get_type")
  (return-type "GType")
)

(define-function moo_edit_doc_status_get_type
  (c-name "moo_edit_doc_status_get_type")
  (return-type "GType")
)

(define-function moo_edit_file_info_get_type
  (c-name "moo_edit_file_info_get_type")
  (return-type "GType")
)

(define-function moo_edit_new
  (c-name "moo_edit_new")
  (is-constructor-of "MooEdit")
  (return-type "GtkWidget*")
)

(define-method open
  (of-object "MooEdit")
  (c-name "moo_edit_open")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "encoding")
  )
)

(define-method save
  (of-object "MooEdit")
  (c-name "moo_edit_save")
  (return-type "gboolean")
)

(define-method save_as
  (of-object "MooEdit")
  (c-name "moo_edit_save_as")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "encoding")
  )
)

(define-method close
  (of-object "MooEdit")
  (c-name "moo_edit_close")
  (return-type "gboolean")
)

(define-method load
  (of-object "MooEdit")
  (c-name "moo_edit_load")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "encoding")
    '("GError**" "error")
  )
)

(define-method reload
  (of-object "MooEdit")
  (c-name "moo_edit_reload")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method write
  (of-object "MooEdit")
  (c-name "moo_edit_write")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file")
    '("const-char*" "encoding")
    '("GError**" "error")
  )
)

(define-method get_filename
  (of-object "MooEdit")
  (c-name "moo_edit_get_filename")
  (return-type "const-char*")
)

(define-method get_basename
  (of-object "MooEdit")
  (c-name "moo_edit_get_basename")
  (return-type "const-char*")
)

(define-method get_display_filename
  (of-object "MooEdit")
  (c-name "moo_edit_get_display_filename")
  (return-type "const-char*")
)

(define-method get_display_basename
  (of-object "MooEdit")
  (c-name "moo_edit_get_display_basename")
  (return-type "const-char*")
)

;; (define-method set_encoding
;;   (of-object "MooEdit")
;;   (c-name "moo_edit_set_encoding")
;;   (return-type "none")
;;   (parameters
;;     '("const-char*" "encoding")
;;   )
;; )

(define-method select_all
  (of-object "MooEdit")
  (c-name "moo_edit_select_all")
  (return-type "none")
)

(define-method is_empty
  (of-object "MooEdit")
  (c-name "moo_edit_is_empty")
  (return-type "gboolean")
)

(define-method get_modified
  (of-object "MooEdit")
  (c-name "moo_edit_get_modified")
  (return-type "gboolean")
)

(define-method set_modified
  (of-object "MooEdit")
  (c-name "moo_edit_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "modified")
  )
)

(define-method get_clean
  (of-object "MooEdit")
  (c-name "moo_edit_get_clean")
  (return-type "gboolean")
)

(define-method set_clean
  (of-object "MooEdit")
  (c-name "moo_edit_set_clean")
  (return-type "none")
  (parameters
    '("gboolean" "clean")
  )
)

(define-method get_doc_status
  (of-object "MooEdit")
  (c-name "moo_edit_get_doc_status")
  (return-type "MooEditDocStatus")
)

(define-method doc_status_changed
  (of-object "MooEdit")
  (c-name "moo_edit_doc_status_changed")
  (return-type "none")
)

(define-method get_read_only
  (of-object "MooEdit")
  (c-name "moo_edit_get_read_only")
  (return-type "gboolean")
)

(define-method set_read_only
  (of-object "MooEdit")
  (c-name "moo_edit_set_read_only")
  (return-type "none")
  (parameters
    '("gboolean" "readonly")
  )
)

(define-method delete_selection
  (of-object "MooEdit")
  (c-name "moo_edit_delete_selection")
  (return-type "none")
)

(define-function moo_edit_file_info_new
  (c-name "moo_edit_file_info_new")
  (is-constructor-of "MooEditFileInfo")
  (return-type "MooEditFileInfo*")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "encoding")
  )
)

(define-method copy
  (of-object "MooEditFileInfo")
  (c-name "moo_edit_file_info_copy")
  (return-type "MooEditFileInfo*")
)

(define-method free
  (of-object "MooEditFileInfo")
  (c-name "moo_edit_file_info_free")
  (return-type "none")
)

(define-method can_redo
  (of-object "MooEdit")
  (c-name "moo_edit_can_redo")
  (return-type "gboolean")
)

(define-method can_undo
  (of-object "MooEdit")
  (c-name "moo_edit_can_undo")
  (return-type "gboolean")
)

(define-method find
  (of-object "MooEdit")
  (c-name "moo_edit_find")
  (return-type "none")
)

(define-method replace
  (of-object "MooEdit")
  (c-name "moo_edit_replace")
  (return-type "none")
)

(define-method find_next
  (of-object "MooEdit")
  (c-name "moo_edit_find_next")
  (return-type "none")
)

(define-method find_previous
  (of-object "MooEdit")
  (c-name "moo_edit_find_previous")
  (return-type "none")
)

(define-method goto_line
  (of-object "MooEdit")
  (c-name "moo_edit_goto_line")
  (return-type "none")
  (parameters
    '("int" "line")
  )
)

(define-method set_highlight
  (of-object "MooEdit")
  (c-name "moo_edit_set_highlight")
  (return-type "none")
  (parameters
    '("gboolean" "highlight")
  )
)

(define-method get_lang
  (of-object "MooEdit")
  (c-name "moo_edit_get_lang")
  (return-type "MooEditLang*")
)

(define-method set_lang
  (of-object "MooEdit")
  (c-name "moo_edit_set_lang")
  (return-type "none")
  (parameters
    '("MooEditLang*" "lang")
  )
)

(define-method set_font_from_string
  (of-object "MooEdit")
  (c-name "moo_edit_set_font_from_string")
  (return-type "none")
  (parameters
    '("const-char*" "font")
  )
)



;; From mooeditlang.h

(define-function moo_edit_lang_get_type
  (c-name "moo_edit_lang_get_type")
  (return-type "GType")
)

(define-function moo_edit_lang_new
  (c-name "moo_edit_lang_new")
  (is-constructor-of "MooEditLang")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "id")
  )
)

(define-function moo_edit_lang_new_from_file
  (c-name "moo_edit_lang_new_from_file")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method get_id
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_id")
  (return-type "const-char*")
)

(define-method get_name
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_name")
  (return-type "const-char*")
)

(define-method get_section
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_section")
  (return-type "const-char*")
)

(define-method get_tags
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_tags")
  (return-type "GSList*")
)

(define-method get_tag
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_tag")
  (return-type "GtkSourceTag*")
  (parameters
    '("const-char*" "tag_id")
  )
)

(define-method get_escape_char
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_escape_char")
  (return-type "gunichar")
)

(define-method set_escape_char
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_set_escape_char")
  (return-type "none")
  (parameters
    '("gunichar" "escape_char")
  )
)

(define-method get_brackets
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_brackets")
  (return-type "const-char*")
)

(define-method get_mime_types
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_mime_types")
  (return-type "GSList*")
)

(define-method set_mime_types
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_set_mime_types")
  (return-type "none")
  (parameters
    '("const-GSList*" "mime_types")
  )
)

(define-method get_extensions
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_extensions")
  (return-type "GSList*")
)

(define-method set_extensions
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_set_extensions")
  (return-type "none")
  (parameters
    '("const-GSList*" "extensions")
  )
)

(define-method get_style_names
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_style_names")
  (return-type "GPtrArray*")
)

(define-method get_style
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_get_style")
  (return-type "const-GtkSourceTagStyle*")
  (parameters
    '("const-char*" "style_id")
  )
)

(define-method set_style
  (of-object "MooEditLang")
  (c-name "moo_edit_lang_set_style")
  (return-type "none")
  (parameters
    '("const-char*" "style_id")
    '("const-GtkSourceTagStyle*" "style")
  )
)

(define-function moo_edit_lang_get_default_style_names
  (c-name "moo_edit_lang_get_default_style_names")
  (return-type "GPtrArray*")
)

(define-function moo_edit_lang_get_default_style
  (c-name "moo_edit_lang_get_default_style")
  (return-type "GtkSourceTagStyle*")
  (parameters
    '("const-char*" "style_id")
  )
)



;; From mooeditlangmgr.h

(define-function moo_edit_lang_mgr_get_type
  (c-name "moo_edit_lang_mgr_get_type")
  (return-type "GType")
)

(define-function moo_edit_lang_mgr_new
  (c-name "moo_edit_lang_mgr_new")
  (is-constructor-of "MooEditLangMgr")
  (return-type "MooEditLangMgr*")
)

(define-method get_sections
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_sections")
  (return-type "GSList*")
)

(define-method get_available_languages
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_available_languages")
  (return-type "const-GSList*")
)

(define-method add_language
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_add_language")
  (return-type "none")
  (parameters
    '("MooEditLang*" "lang")
  )
)

(define-method get_default_language
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_default_language")
  (return-type "MooEditLang*")
)

(define-method set_default_language
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_set_default_language")
  (return-type "none")
  (parameters
    '("MooEditLang*" "lang")
  )
)

(define-method get_language_by_id
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_language_by_id")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "lang_id")
  )
)

(define-method get_language_for_file
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_language_for_file")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method get_language_for_mime_type
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_language_for_mime_type")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-method get_language_for_filename
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_language_for_filename")
  (return-type "MooEditLang*")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method get_lang_files_dirs
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_get_lang_files_dirs")
  (return-type "const-GSList*")
)

(define-method add_lang_files_dir
  (of-object "MooEditLangMgr")
  (c-name "moo_edit_lang_mgr_add_lang_files_dir")
  (return-type "none")
  (parameters
    '("const-char*" "dir")
  )
)



;; From mooeditor.h

(define-function moo_editor_get_type
  (c-name "moo_editor_get_type")
  (return-type "GType")
)

(define-function moo_edit_window_get_type
  (c-name "moo_edit_window_get_type")
  (return-type "GType")
)

(define-function moo_editor_new
  (c-name "moo_editor_new")
  (is-constructor-of "MooEditor")
  (return-type "MooEditor*")
)

(define-method new_window
  (of-object "MooEditor")
  (c-name "moo_editor_new_window")
  (return-type "MooEditWindow*")
)

(define-method open
  (of-object "MooEditor")
  (c-name "moo_editor_open")
  (return-type "gboolean")
  (parameters
    '("MooEditWindow*" "window" (null-ok) (default "NULL"))
    '("GtkWidget*" "parent" (null-ok) (default "NULL"))
    '("const-char*" "filename" (null-ok) (default "NULL"))
    '("const-char*" "encoding" (null-ok) (default "NULL"))
  )
)

(define-method get_active_doc
  (of-object "MooEditor")
  (c-name "moo_editor_get_active_doc")
  (return-type "MooEdit*")
)

(define-method get_active_window
  (of-object "MooEditor")
  (c-name "moo_editor_get_active_window")
  (return-type "MooEditWindow*")
)

(define-method close_all
  (of-object "MooEditor")
  (c-name "moo_editor_close_all")
  (return-type "gboolean")
)

(define-method set_app_name
  (of-object "MooEditor")
  (c-name "moo_editor_set_app_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method get_lang_mgr
  (of-object "MooEditor")
  (c-name "moo_editor_get_lang_mgr")
  (return-type "MooEditLangMgr*")
)

(define-method get_ui_xml
  (of-object "MooEditor")
  (c-name "moo_editor_get_ui_xml")
  (return-type "MooUIXML*")
)

(define-method set_ui_xml
  (of-object "MooEditor")
  (c-name "moo_editor_set_ui_xml")
  (return-type "none")
  (parameters
    '("MooUIXML*" "xml")
  )
)

(define-method get_active_doc
  (of-object "MooEditWindow")
  (c-name "moo_edit_window_get_active_doc")
  (return-type "MooEdit*")
)

;; (define-method close_doc
;;   (of-object "MooEditWindow")
;;   (c-name "moo_edit_window_close_doc")
;;   (return-type "gboolean")
;;   (parameters
;;     '("MooEdit*" "doc")
;;   )
;; )



;; From mooeditprefs.h

(define-function moo_edit_prefs_page_new
  (c-name "moo_edit_prefs_page_new")
  (is-constructor-of "MooEditPrefsPage")
  (return-type "GtkWidget*")
  (parameters
    '("MooEditor*" "editor")
  )
)

(define-function moo_edit_setting
  (c-name "moo_edit_setting")
  (return-type "const-char*")
  (parameters
    '("const-char*" "setting_name")
  )
)

(define-function moo_edit_style_setting
  (c-name "moo_edit_style_setting")
  (return-type "const-char*")
  (parameters
    '("const-char*" "lang_id")
    '("const-char*" "style_id")
    '("const-char*" "setting")
  )
)

(define-function moo_edit_style_load
  (c-name "moo_edit_style_load")
  (return-type "none")
  (parameters
    '("const-char*" "lang_id")
    '("const-char*" "style_id")
    '("GtkSourceTagStyle*" "style")
  )
)



;; From mooeditsearch.h

(define-function moo_edit_search
  (c-name "moo_edit_search")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "limit")
    '("const-char*" "text")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("MooEditSearchOptions" "options")
    '("GError**" "error")
  )
)

(define-function moo_edit_search_regex
  (c-name "moo_edit_search_regex")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "limit")
    '("EggRegex*" "regex")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("gboolean" "backwards")
  )
)

(define-function moo_edit_replace_func_replace_all
  (c-name "moo_edit_replace_func_replace_all")
  (return-type "MooEditReplaceResponseType")
  (parameters
    '("const-char*" "text")
    '("EggRegex*" "regex")
    '("const-char*" "replacement")
    '("GtkTextIter*" "to_replace_start")
    '("GtkTextIter*" "to_replace_end")
    '("gpointer" "data")
  )
)

(define-function moo_edit_replace_all_interactive
  (c-name "moo_edit_replace_all_interactive")
  (return-type "int")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
    '("const-char*" "text")
    '("const-char*" "replacement")
    '("MooEditSearchOptions" "options")
    '("GError**" "error")
    '("MooEditReplaceFunc" "func")
    '("gpointer" "data")
  )
)

(define-function moo_edit_replace_regex_all_interactive
  (c-name "moo_edit_replace_regex_all_interactive")
  (return-type "int")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
    '("EggRegex*" "regex")
    '("const-char*" "replacement")
    '("gboolean" "backwards")
    '("GError**" "error")
    '("MooEditReplaceFunc" "func")
    '("gpointer" "data")
  )
)



;; From mootextiter.h

(define-function moo_edit_find_matching_bracket
  (c-name "moo_edit_find_matching_bracket")
  (return-type "MooEditBracketMatchType")
  (parameters
    '("GtkSourceBuffer*" "buffer")
    '("GtkTextIter*" "iter")
  )
)

(define-function moo_edit_at_bracket
  (c-name "moo_edit_at_bracket")
  (return-type "gboolean")
  (parameters
    '("GtkSourceBuffer*" "buffer")
    '("GtkTextIter*" "iter")
  )
)

;; (define-function moo_get_iter_at_line_offset
;;   (c-name "moo_get_iter_at_line_offset")
;;   (return-type "gboolean")
;;   (parameters
;;     '("GtkTextBuffer*" "buffer")
;;     '("GtkTextIter*" "iter")
;;     '("gint" "line_number")
;;     '("gint" "char_offset")
;;     '("gboolean" "exact")
;;   )
;; )


